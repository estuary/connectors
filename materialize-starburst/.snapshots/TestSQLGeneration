--- Begin "a-schema".target_table fetchVersionAndSpec ---
SELECT
		boolean,
		integer,
		number,
		string,
		datetime,
		date
FROM "a-schema".target_table 
WHERE
		   key1 = ?
		 AND key2 = ?
--- End "a-schema".target_table fetchVersionAndSpec ---

--- Begin "a-schema".target_table createTargetTable ---
CREATE TABLE IF NOT EXISTS "a-schema".target_table (
    key1 BIGINT,
    key2 BOOLEAN,
    boolean BOOLEAN,
    integer BIGINT,
    number DOUBLE,
    string VARCHAR,
    datetime TIMESTAMP(6) WITH TIME ZONE,
    date DATE,
    flow_document VARCHAR
)
COMMENT 'Generated for materialization test/sqlite of collection key/value'
--- End "a-schema".target_table createTargetTable ---

--- Begin "a-schema".target_table loadQuery ---
SELECT 0, flow_document
	FROM "a-schema".target_table AS l
    JOIN "a-schema".target_table_load_temp AS r
	ON l.key1 = r.key1 AND l.key2 = r.key2

--- End "a-schema".target_table loadQuery ---

--- Begin "a-schema".target_table mergeIntoTarget ---
MERGE INTO "a-schema".target_table AS l
	USING "a-schema".target_table_store_temp AS r
	ON l.key1 = r.key1 AND l.key2 = r.key2
	WHEN MATCHED THEN
	UPDATE SET boolean = r.boolean, integer = r.integer, number = r.number, string = r.string, datetime = from_iso8601_timestamp_nanos(r.datetime), date = from_iso8601_date(r.date), flow_document = r.flow_document
	WHEN NOT MATCHED THEN
	INSERT (key1, key2, boolean, integer, number, string, datetime, date, flow_document)
	VALUES (r.key1, r.key2, r.boolean, r.integer, r.number, r.string, from_iso8601_timestamp_nanos(r.datetime), from_iso8601_date(r.date), r.flow_document)
--- End "a-schema".target_table mergeIntoTarget ---

--- Begin "a-schema".target_table createLoadTempTable ---
CREATE TABLE "a-schema".target_table_load_temp (
	key1 BIGINT,
	key2 BOOLEAN
)
WITH (
   format = 'PARQUET',
   external_location = ?,
   type = 'HIVE'
)
--- End "a-schema".target_table createLoadTempTable ---

--- Begin "a-schema".target_table dropLoadTempTable ---
DROP TABLE IF EXISTS "a-schema".target_table_load_temp
--- End "a-schema".target_table dropLoadTempTable ---

--- Begin "a-schema".target_table createStoreTempTable ---
CREATE TABLE "a-schema".target_table_store_temp (
    key1 BIGINT,
    key2 BOOLEAN,
    boolean BOOLEAN,
    integer BIGINT,
    number DOUBLE,
    string VARCHAR,
    datetime VARCHAR,
    date VARCHAR,
    flow_document VARCHAR
)
WITH (
   format = 'PARQUET',
   external_location = ?,
   type = 'HIVE'
)
--- End "a-schema".target_table createStoreTempTable ---

--- Begin "a-schema".target_table dropStoreTempTable ---
DROP TABLE IF EXISTS "a-schema".target_table_store_temp
--- End "a-schema".target_table dropStoreTempTable ---

--- Begin alter table add columns ---
ALTER TABLE "a-schema".target_table ADD COLUMN first_new_column STRING
--- End alter table add columns ---

--- Begin target_table_no_values_materialized mergeInto ---
MERGE INTO "".target_table_no_values_materialized AS l
	USING "".target_table_no_values_materialized_store_temp AS r
	ON l.key1 = r.key1 AND l.key2 = r.key2
	WHEN MATCHED THEN
	UPDATE SET flow_document = r.flow_document
	WHEN NOT MATCHED THEN
	INSERT (key1, key2, flow_document)
	VALUES (r.key1, r.key2, r.flow_document)
--- End target_table_no_values_materialized mergeInto ---


