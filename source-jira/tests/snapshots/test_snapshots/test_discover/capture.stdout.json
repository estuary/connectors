[{'recommendedName': 'application_roles', 'resourceConfig': {'stream': 'application_roles', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}, 'groupDetails': {'type': ['null', 'array'], 'description': 'Group Details', 'items': {'type': ['null', 'object']}}, 'defaultGroupsDetails': {'type': ['null', 'array'], 'items': {'type': ['null', 'object'], 'properties': {'groupId': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of an application role.', 'x-infer-schema': True}, 'key': ['/key']}, {'recommendedName': 'avatars', 'resourceConfig': {'stream': 'avatars', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The ID of the avatar.'}, 'owner': {'type': 'string', 'description': 'The owner of the avatar. For a system avatar the owner is null (and nothing is returned). For non-system avatars this is the appropriate identifier, such as the ID for a project or the account ID for a user.', 'readOnly': True}, 'isSystemAvatar': {'type': 'boolean', 'description': 'Whether the avatar is a system avatar.', 'readOnly': True}, 'isSelected': {'type': 'boolean', 'description': "Whether the avatar is used in Jira. For example, shown as a project's avatar.", 'readOnly': True}, 'isDeletable': {'type': 'boolean', 'description': 'Whether the avatar can be deleted.', 'readOnly': True}, 'fileName': {'type': 'string', 'description': 'The file name of the avatar icon. Returned for system avatars.', 'readOnly': True}, 'urls': {'type': 'object', 'additionalProperties': True, 'description': 'The list of avatar icon URLs.', 'readOnly': True}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'List of system avatars.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'boards', 'resourceConfig': {'stream': 'boards', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': ['null', 'integer']}, 'self': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'type': {'type': ['null', 'string']}, 'projectId': {'type': ['null', 'string']}, 'projectKey': {'type': ['null', 'string']}, 'location': {'type': ['null', 'object'], 'properties': {'projectId': {'type': ['null', 'integer']}, 'userId': {'type': ['null', 'integer']}, 'userAccountId': {'type': ['null', 'string']}, 'displayName': {'type': ['null', 'string']}, 'projectName': {'type': ['null', 'string']}, 'projectKey': {'type': ['null', 'string']}, 'projectTypeKey': {'type': ['null', 'string']}, 'avatarURI': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'board_issues', 'resourceConfig': {'stream': 'board_issues', 'syncMode': 'incremental', 'cursorField': ['updated']}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'expand': {'type': 'string'}, 'id': {'type': 'string'}, 'self': {'type': 'string'}, 'key': {'type': 'string'}, 'fields': {'type': 'object', 'properties': {'flagged': {'type': ['null', 'boolean']}, 'sprint': {'type': ['null', 'object']}, 'closedSprints': {'type': ['null', 'object']}, 'description': {'type': ['null', 'string']}, 'project': {'type': ['null', 'object']}, 'comment': {'type': ['null', 'array'], 'items': {'type': 'object'}}, 'epic': {'type': ['null', 'object']}, 'worklog': {'type': ['null', 'array'], 'items': {'type': 'object'}}, 'created': {'type': ['null', 'string'], 'format': 'date-time'}, 'updated': {'type': ['null', 'string'], 'format': 'date-time'}, 'timetracking': {'type': ['null', 'object']}}}, 'boardId': {'type': 'integer'}, 'created': {'type': ['string', 'null'], 'format': 'date-time', 'description': 'This field transformed from fields attr', 'readOnly': True}, 'updated': {'type': ['string', 'null'], 'format': 'date-time', 'description': 'This field transformed from fields attr', 'readOnly': True}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'dashboards', 'resourceConfig': {'stream': 'dashboards', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'description': {'type': 'string'}, 'id': {'type': 'string', 'description': 'The ID of the dashboard.'}, 'isFavourite': {'type': 'boolean', 'description': 'Whether the dashboard is selected as a favorite by the user.'}, 'name': {'type': 'string', 'description': 'The name of the dashboard.'}, 'owner': {'description': 'The owner of the dashboard.', 'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  \nThe key of the user.'}, 'self': {'type': 'string', 'description': 'The URL of the user.'}, 'name': {'type': 'string', 'description': 'This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  \nThe username of the user.'}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.'}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.'}, 'avatarUrls': {'description': 'The avatars of the user.', 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the user's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the user's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the user's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the user's 48x48 pixel avatar."}}}}}, 'popularity': {'type': 'integer', 'description': 'The number of users who have this dashboard as a favorite.'}, 'rank': {'type': 'integer', 'description': 'The rank of this dashboard.'}, 'self': {'type': 'string', 'description': 'The URL of these dashboard details.'}, 'sharePermissions': {'type': 'array', 'description': 'The details of any share permissions for the dashboard.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The unique identifier of the share permission.'}, 'type': {'type': 'string', 'description': 'The type of share permission:\n\n *  `group` Shared with a group. If set in a request, then specify `sharePermission.group` as well.\n *  `project` Shared with a project. If set in a request, then specify `sharePermission.project` as well.\n *  `projectRole` Share with a project role in a project. This value is not returned in responses. It is used in requests, where it needs to be specify with `projectId` and `projectRoleId`.\n *  `global` Shared globally. If set in a request, no other `sharePermission` properties need to be specified.\n *  `loggedin` Shared with all logged-in users. Note: This value is set in a request by specifying `authenticated` as the `type`.\n *  `project-unknown` Shared with a project that the user does not have access to. Cannot be set in a request.', 'enum': ['group', 'project', 'projectRole', 'global', 'loggedin', 'authenticated', 'project-unknown']}, 'project': {'description': 'The project that the filter is shared with. This is similar to the project object returned by [Get project](#api-rest-api-3-project-projectIdOrKey-get) but it contains a subset of the properties, which are: `self`, `id`, `key`, `assigneeType`, `name`, `roles`, `avatarUrls`, `projectType`, `simplified`.  \nFor a request, specify the `id` for the project.', 'type': 'object', 'properties': {'expand': {'type': 'string', 'description': 'Expand options that include additional project details in the response.', 'xml': {'attribute': True}}, 'self': {'type': 'string', 'description': 'The URL of the project details.'}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.'}, 'description': {'type': 'string', 'description': 'A brief description of the project.'}, 'lead': {'description': 'The username of the project lead.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.'}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'avatarUrls': {'description': 'The avatars of the user.', 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.'}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.'}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null."}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'groups': {'description': 'The groups that the user belongs to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'xml': {'attribute': True}}}}, 'components': {'type': 'array', 'description': 'List of the components contained in the project.', 'items': {'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the component.'}, 'id': {'type': 'string', 'description': 'The unique identifier for the component.'}, 'name': {'type': 'string', 'description': 'The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.'}, 'description': {'type': 'string', 'description': 'The description for the component. Optional when creating or updating a component.'}, 'lead': {'description': "The user details for the component's lead user.", 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.'}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'avatarUrls': {'description': 'The avatars of the user.', 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.'}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.'}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null."}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'groups': {'description': 'The groups that the user belongs to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'xml': {'attribute': True}}}}, 'leadUserName': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'leadAccountId': {'maxLength': 128, 'type': 'string', 'description': "The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.", 'writeOnly': True}, 'assigneeType': {'type': 'string', 'description': 'The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:\n\n *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.\n *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.\n *  `UNASSIGNED` an assignee is not set for issues created with this component.\n *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.\n\nDefault value: `PROJECT_DEFAULT`.  \nOptional when creating or updating a component.', 'enum': ['PROJECT_DEFAULT', 'COMPONENT_LEAD', 'PROJECT_LEAD', 'UNASSIGNED']}, 'assignee': {'description': 'The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.'}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'avatarUrls': {'description': 'The avatars of the user.', 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.'}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.'}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null."}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'groups': {'description': 'The groups that the user belongs to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'xml': {'attribute': True}}}}, 'realAssigneeType': {'type': 'string', 'description': 'The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:\n\n *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.\n *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.\n *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.\n *  `PROJECT_DEFAULT` when none of the preceding cases are true.', 'enum': ['PROJECT_DEFAULT', 'COMPONENT_LEAD', 'PROJECT_LEAD', 'UNASSIGNED']}, 'realAssignee': {'description': 'The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.'}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'avatarUrls': {'description': 'The avatars of the user.', 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.'}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.'}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null."}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'groups': {'description': 'The groups that the user belongs to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'xml': {'attribute': True}}}}, 'isAssigneeTypeValid': {'type': 'boolean', 'description': 'Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.'}, 'project': {'type': 'string', 'description': "The key of the project the component is assigned to. Required when creating a component. Can't be updated."}, 'projectId': {'type': 'integer', 'description': 'The ID of the project the component is assigned to.'}}}}, 'issueTypes': {'type': 'array', 'description': 'List of the issue types available in the project.', 'items': {'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of these issue type details.'}, 'id': {'type': 'string', 'description': 'The ID of the issue type.'}, 'description': {'type': 'string', 'description': 'The description of the issue type.'}, 'iconUrl': {'type': 'string', 'description': "The URL of the issue type's avatar."}, 'name': {'type': 'string', 'description': 'The name of the issue type.'}, 'subtask': {'type': 'boolean', 'description': 'Whether this issue type is used to create subtasks.'}, 'avatarId': {'type': 'integer', 'description': "The ID of the issue type's avatar."}, 'entityId': {'type': 'string', 'description': 'Unique ID for next-gen projects.'}, 'hierarchyLevel': {'type': 'integer', 'description': 'Hierarchy level of the issue type.'}, 'scope': {'description': 'Details of the next-gen projects the issue type is available in.', 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.'}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.'}, 'name': {'type': 'string', 'description': 'The name of the project.'}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.'}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.'}, 'id': {'type': 'string', 'description': 'The ID of the project category.'}, 'description': {'type': 'string', 'description': 'The name of the project category.'}, 'name': {'type': 'string', 'description': 'The description of the project category.'}}}}}}}}}}, 'url': {'type': 'string', 'description': 'A link to information about this project, such as project documentation.'}, 'email': {'type': 'string', 'description': 'An email address associated with the project.'}, 'assigneeType': {'type': 'string', 'description': 'The default assignee when creating issues for this project.', 'enum': ['PROJECT_LEAD', 'UNASSIGNED']}, 'versions': {'type': 'array', 'description': 'The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).', 'items': {'type': 'object', 'properties': {'expand': {'type': 'string', 'description': 'Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.\n\nOptional for create and update.', 'xml': {'attribute': True}}, 'self': {'type': 'string', 'description': 'The URL of the version.'}, 'id': {'type': 'string', 'description': 'The ID of the version.'}, 'description': {'type': 'string', 'description': 'The description of the version. Optional when creating or updating a version.'}, 'name': {'type': 'string', 'description': 'The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.'}, 'archived': {'type': 'boolean', 'description': 'Indicates that the version is archived. Optional when creating or updating a version.'}, 'released': {'type': 'boolean', 'description': 'Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.'}, 'startDate': {'type': 'string', 'description': 'The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.', 'format': 'date'}, 'releaseDate': {'type': 'string', 'description': 'The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.', 'format': 'date'}, 'overdue': {'type': 'boolean', 'description': 'Indicates that the version is overdue.'}, 'userStartDate': {'type': 'string', 'description': "The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format."}, 'userReleaseDate': {'type': 'string', 'description': "The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format."}, 'project': {'type': 'string', 'description': 'Deprecated. Use `projectId`.'}, 'projectId': {'type': 'integer', 'description': 'The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.'}, 'moveUnfixedIssuesTo': {'type': 'string', 'description': 'The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.'}, 'operations': {'type': 'array', 'description': 'If the expand option `operations` is used, returns the list of operations available for this version.', 'items': {'type': 'object', 'properties': {'id': {'type': 'string'}, 'styleClass': {'type': 'string'}, 'iconClass': {'type': 'string'}, 'label': {'type': 'string'}, 'title': {'type': 'string'}, 'href': {'type': 'string'}, 'weight': {'type': 'integer'}}}}, 'issuesStatusForFixVersion': {'description': 'If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.', 'type': 'object', 'properties': {'unmapped': {'type': 'integer', 'description': 'Count of issues with a status other than *to do*, *in progress*, and *done*.'}, 'toDo': {'type': 'integer', 'description': 'Count of issues with status *to do*.'}, 'inProgress': {'type': 'integer', 'description': 'Count of issues with status *in progress*.'}, 'done': {'type': 'integer', 'description': 'Count of issues with status *done*.'}}}}}}, 'name': {'type': 'string', 'description': 'The name of the project.'}, 'roles': {'type': 'object', 'additionalProperties': True, 'description': 'The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).'}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.'}, 'id': {'type': 'string', 'description': 'The ID of the project category.'}, 'name': {'type': 'string', 'description': 'The name of the project category. Required on create, optional on update.'}, 'description': {'type': 'string', 'description': 'The description of the project category. Required on create, optional on update.'}}}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether the project is simplified.'}, 'style': {'type': 'string', 'description': 'The type of the project.', 'enum': ['classic', 'next-gen']}, 'favourite': {'type': 'boolean', 'description': 'Whether the project is selected as a favorite.'}, 'isPrivate': {'type': 'boolean', 'description': 'Whether the project is private.'}, 'issueTypeHierarchy': {'description': 'The issue type hierarchy for the project', 'type': 'object', 'properties': {'level': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer'}, 'name': {'type': 'string'}, 'aboveLevelId': {'type': 'integer'}, 'belowLevelId': {'type': 'integer'}, 'projectConfigurationId': {'type': 'integer'}, 'level': {'type': 'integer'}, 'issueTypeIds': {'type': 'array', 'items': {'type': 'integer'}}, 'externalUuid': {'type': 'string'}, 'globalHierarchyLevel': {'type': 'string', 'enum': ['SUBTASK', 'BASE', 'EPIC']}}}}}}, 'permissions': {'description': 'User permissions on the project', 'type': 'object', 'properties': {'canEdit': {'type': 'boolean', 'description': 'Whether the logged user can edit the project.'}}}, 'properties': {'type': 'object', 'description': 'Map of project properties'}, 'uuid': {'type': 'string', 'description': 'Unique ID for next-gen projects.'}, 'insight': {'description': 'Insights about the project.', 'type': 'object', 'properties': {'totalIssueCount': {'type': 'integer', 'description': 'Total issue count.'}, 'lastIssueUpdateTime': {'type': 'string', 'description': 'The last issue update time.', 'format': 'date-time'}}}, 'deleted': {'type': 'boolean', 'description': 'Whether the project is marked as deleted.'}, 'retentionTillDate': {'type': 'string', 'description': 'The date when the project is deleted permanently.', 'format': 'date-time'}, 'deletedDate': {'type': 'string', 'description': 'The date when the project was marked as deleted.', 'format': 'date-time'}, 'deletedBy': {'description': 'The user who marked the project as deleted.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.'}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'avatarUrls': {'description': 'The avatars of the user.', 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.'}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.'}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null."}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'groups': {'description': 'The groups that the user belongs to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'xml': {'attribute': True}}}}, 'archived': {'type': 'boolean', 'description': 'Whether the project is archived.'}, 'archivedDate': {'type': 'string', 'description': 'The date when the project was archived.', 'format': 'date-time'}, 'archivedBy': {'description': 'The user who archived the project.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.'}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'avatarUrls': {'description': 'The avatars of the user.', 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.'}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.'}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null."}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.'}, 'groups': {'description': 'The groups that the user belongs to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'xml': {'attribute': True}}}}}}, 'role': {'description': 'The project role that the filter is shared with.  \nFor a request, specify the `id` for the role. You must also specify the `project` object and `id` for the project that the role is in.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL the project role details.'}, 'name': {'type': 'string', 'description': 'The name of the project role.'}, 'id': {'type': 'integer', 'description': 'The ID of the project role.'}, 'description': {'type': 'string', 'description': 'The description of the project role.'}, 'actors': {'type': 'array', 'description': 'The list of users who act in this role.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the role actor.'}, 'displayName': {'type': 'string', 'description': "The display name of the role actor. For users, depending on the userâ€™s privacy setting, this may return an alternative value for the user's name."}, 'type': {'type': 'string', 'description': 'The type of role actor.', 'enum': ['atlassian-group-role-actor', 'atlassian-user-role-actor']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'avatarUrl': {'type': 'string', 'description': 'The avatar of the role actor.'}, 'actorUser': {'type': 'object', 'properties': {'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.'}}}, 'actorGroup': {'type': 'object', 'properties': {'displayName': {'type': 'string', 'description': 'The display name of the group.'}, 'name': {'type': 'string', 'description': 'The name of the group'}}}}}}, 'scope': {'description': 'The scope of the role. Indicated for roles associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).', 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.'}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.'}, 'name': {'type': 'string', 'description': 'The name of the project.'}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.'}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.'}, 'id': {'type': 'string', 'description': 'The ID of the project category.'}, 'description': {'type': 'string', 'description': 'The name of the project category.'}, 'name': {'type': 'string', 'description': 'The description of the project category.'}}}}}}}, 'translatedName': {'type': 'string', 'description': 'The translated name of the project role.'}, 'currentUserRole': {'type': 'boolean', 'description': 'Whether the calling user is part of this role.'}, 'admin': {'type': 'boolean', 'description': 'Whether this role is the admin role for the project.'}, 'roleConfigurable': {'type': 'boolean', 'description': 'Whether the roles are configurable for this project.'}, 'default': {'type': 'boolean', 'description': 'Whether this role is the default role for the project'}}}, 'group': {'description': 'The group that the filter is shared with. For a request, specify the `name` property for the group.', 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.'}}}}}}, 'view': {'type': 'string', 'description': 'The URL of the dashboard.'}, 'editpermission': {'type': ['null', 'array'], 'items': {'type': ['null', 'object'], 'properties': {'group': {'type': ['null', 'object']}, 'id': {'type': ['null', 'integer']}, 'project': {'type': ['null', 'object']}, 'role': {'type': ['null', 'object']}, 'type': {'type': ['null', 'string']}, 'user': {'type': ['null', 'object']}}}}, 'isWritable': {'type': ['null', 'boolean']}, 'systemDashboard': {'type': ['null', 'boolean']}, 'editPermissions': {'type': ['null', 'array'], 'items': {'type': ['null', 'object']}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of a dashboard.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'filters', 'resourceConfig': {'stream': 'filters', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'expand': {'type': 'string'}, 'self': {'type': 'string', 'description': 'The URL of the filter.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The unique identifier for the filter.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the filter. Must be unique.'}, 'description': {'type': 'string', 'description': 'A description of the filter.'}, 'owner': {'description': 'The user who owns the filter. This is defaulted to the creator of the filter, however Jira administrators can change the owner of a shared filter in the admin settings.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'jql': {'type': 'string', 'description': 'The JQL query for the filter. For example, *project = SSP AND issuetype = Bug*.', 'readOnly': True}, 'viewUrl': {'type': 'string', 'description': 'A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*.', 'readOnly': True}, 'searchUrl': {'type': 'string', 'description': "A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-3-filter-search-get) operation with the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*.", 'readOnly': True}, 'favourite': {'type': 'boolean', 'description': 'Whether the filter is selected as a favorite by any users, not including the filter owner.', 'readOnly': True}, 'favouritedCount': {'type': 'integer', 'description': 'The count of how many users have selected this filter as a favorite, including the filter owner.', 'readOnly': True}, 'sharePermissions': {'type': 'array', 'description': 'The groups and projects that the filter is shared with. This can be specified when updating a filter, but not when creating a filter.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The unique identifier of the share permission.', 'readOnly': True}, 'type': {'type': 'string', 'description': 'The type of share permission:\n\n *  `group` Shared with a group. If set in a request, then specify `sharePermission.group` as well.\n *  `project` Shared with a project. If set in a request, then specify `sharePermission.project` as well.\n *  `projectRole` Share with a project role in a project. This value is not returned in responses. It is used in requests, where it needs to be specify with `projectId` and `projectRoleId`.\n *  `global` Shared globally. If set in a request, no other `sharePermission` properties need to be specified.\n *  `loggedin` Shared with all logged-in users. Note: This value is set in a request by specifying `authenticated` as the `type`.\n *  `project-unknown` Shared with a project that the user does not have access to. Cannot be set in a request.', 'enum': ['group', 'project', 'projectRole', 'global', 'loggedin', 'authenticated', 'project-unknown']}, 'project': {'description': 'The project that the filter is shared with. This is similar to the project object returned by [Get project](#api-rest-api-3-project-projectIdOrKey-get) but it contains a subset of the properties, which are: `self`, `id`, `key`, `assigneeType`, `name`, `roles`, `avatarUrls`, `projectType`, `simplified`.  \nFor a request, specify the `id` for the project.', 'type': 'object', 'properties': {'expand': {'type': 'string', 'description': 'Expand options that include additional project details in the response.', 'readOnly': True, 'xml': {'attribute': True}}, 'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'A brief description of the project.', 'readOnly': True}, 'lead': {'description': 'The username of the project lead.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'components': {'type': 'array', 'description': 'List of the components contained in the project.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the component.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The unique identifier for the component.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.'}, 'description': {'type': 'string', 'description': 'The description for the component. Optional when creating or updating a component.'}, 'lead': {'description': "The user details for the component's lead user.", 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'leadUserName': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'leadAccountId': {'maxLength': 128, 'type': 'string', 'description': "The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.", 'writeOnly': True}, 'assigneeType': {'type': 'string', 'description': 'The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:\n\n *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.\n *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.\n *  `UNASSIGNED` an assignee is not set for issues created with this component.\n *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.\n\nDefault value: `PROJECT_DEFAULT`.  \nOptional when creating or updating a component.', 'enum': ['PROJECT_DEFAULT', 'COMPONENT_LEAD', 'PROJECT_LEAD', 'UNASSIGNED']}, 'assignee': {'description': 'The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'realAssigneeType': {'type': 'string', 'description': 'The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:\n\n *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.\n *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.\n *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.\n *  `PROJECT_DEFAULT` when none of the preceding cases are true.', 'readOnly': True, 'enum': ['PROJECT_DEFAULT', 'COMPONENT_LEAD', 'PROJECT_LEAD', 'UNASSIGNED']}, 'realAssignee': {'description': 'The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'isAssigneeTypeValid': {'type': 'boolean', 'description': 'Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.', 'readOnly': True}, 'project': {'type': 'string', 'description': "The key of the project the component is assigned to. Required when creating a component. Can't be updated."}, 'projectId': {'type': 'integer', 'description': 'The ID of the project the component is assigned to.', 'readOnly': True}}}}, 'issueTypes': {'type': 'array', 'description': 'List of the issue types available in the project.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of these issue type details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the issue type.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the issue type.', 'readOnly': True}, 'iconUrl': {'type': 'string', 'description': "The URL of the issue type's avatar.", 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the issue type.', 'readOnly': True}, 'subtask': {'type': 'boolean', 'description': 'Whether this issue type is used to create subtasks.', 'readOnly': True}, 'avatarId': {'type': 'integer', 'description': "The ID of the issue type's avatar.", 'readOnly': True}, 'entityId': {'type': 'string', 'description': 'Unique ID for next-gen projects.', 'readOnly': True}, 'hierarchyLevel': {'type': 'integer', 'description': 'Hierarchy level of the issue type.', 'readOnly': True}, 'scope': {'description': 'Details of the next-gen projects the issue type is available in.', 'readOnly': True, 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'readOnly': True, 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The description of the project category.', 'readOnly': True}}}}}}}}}}, 'url': {'type': 'string', 'description': 'A link to information about this project, such as project documentation.', 'readOnly': True}, 'email': {'type': 'string', 'description': 'An email address associated with the project.'}, 'assigneeType': {'type': 'string', 'description': 'The default assignee when creating issues for this project.', 'readOnly': True, 'enum': ['PROJECT_LEAD', 'UNASSIGNED']}, 'versions': {'type': 'array', 'description': 'The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).', 'readOnly': True, 'items': {'type': 'object', 'properties': {'expand': {'type': 'string', 'description': 'Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.\n\nOptional for create and update.', 'xml': {'attribute': True}}, 'self': {'type': 'string', 'description': 'The URL of the version.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the version.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the version. Optional when creating or updating a version.'}, 'name': {'type': 'string', 'description': 'The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.'}, 'archived': {'type': 'boolean', 'description': 'Indicates that the version is archived. Optional when creating or updating a version.'}, 'released': {'type': 'boolean', 'description': 'Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.'}, 'startDate': {'type': 'string', 'description': 'The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.', 'format': 'date'}, 'releaseDate': {'type': 'string', 'description': 'The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.', 'format': 'date'}, 'overdue': {'type': 'boolean', 'description': 'Indicates that the version is overdue.', 'readOnly': True}, 'userStartDate': {'type': 'string', 'description': "The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.", 'readOnly': True}, 'userReleaseDate': {'type': 'string', 'description': "The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.", 'readOnly': True}, 'project': {'type': 'string', 'description': 'Deprecated. Use `projectId`.'}, 'projectId': {'type': 'integer', 'description': 'The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.'}, 'moveUnfixedIssuesTo': {'type': 'string', 'description': 'The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.'}, 'operations': {'type': 'array', 'description': 'If the expand option `operations` is used, returns the list of operations available for this version.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'id': {'type': 'string'}, 'styleClass': {'type': 'string'}, 'iconClass': {'type': 'string'}, 'label': {'type': 'string'}, 'title': {'type': 'string'}, 'href': {'type': 'string'}, 'weight': {'type': 'integer'}}}}, 'issuesStatusForFixVersion': {'description': 'If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.', 'readOnly': True, 'type': 'object', 'properties': {'unmapped': {'type': 'integer', 'description': 'Count of issues with a status other than *to do*, *in progress*, and *done*.', 'readOnly': True}, 'toDo': {'type': 'integer', 'description': 'Count of issues with status *to do*.', 'readOnly': True}, 'inProgress': {'type': 'integer', 'description': 'Count of issues with status *in progress*.', 'readOnly': True}, 'done': {'type': 'integer', 'description': 'Count of issues with status *done*.', 'readOnly': True}}}}}}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'roles': {'type': 'object', 'additionalProperties': True, 'description': 'The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project category. Required on create, optional on update.'}, 'description': {'type': 'string', 'description': 'The description of the project category. Required on create, optional on update.'}}}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether the project is simplified.', 'readOnly': True}, 'style': {'type': 'string', 'description': 'The type of the project.', 'readOnly': True, 'enum': ['classic', 'next-gen']}, 'favourite': {'type': 'boolean', 'description': 'Whether the project is selected as a favorite.'}, 'isPrivate': {'type': 'boolean', 'description': 'Whether the project is private.', 'readOnly': True}, 'issueTypeHierarchy': {'description': 'The issue type hierarchy for the project', 'readOnly': True, 'type': 'object', 'properties': {'level': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer'}, 'name': {'type': 'string'}, 'aboveLevelId': {'type': 'integer'}, 'belowLevelId': {'type': 'integer'}, 'projectConfigurationId': {'type': 'integer'}, 'level': {'type': 'integer'}, 'issueTypeIds': {'type': 'array', 'items': {'type': 'integer'}}, 'externalUuid': {'type': 'string'}, 'globalHierarchyLevel': {'type': 'string', 'enum': ['SUBTASK', 'BASE', 'EPIC']}}}}}}, 'permissions': {'description': 'User permissions on the project', 'readOnly': True, 'type': 'object', 'properties': {'canEdit': {'type': 'boolean', 'description': 'Whether the logged user can edit the project.', 'readOnly': True}}}, 'properties': {'type': 'object', 'additionalProperties': True, 'description': 'Map of project properties', 'readOnly': True}, 'uuid': {'type': 'string', 'description': 'Unique ID for next-gen projects.', 'readOnly': True}, 'insight': {'description': 'Insights about the project.', 'readOnly': True, 'type': 'object', 'properties': {'totalIssueCount': {'type': 'integer', 'description': 'Total issue count.', 'readOnly': True}, 'lastIssueUpdateTime': {'type': 'string', 'description': 'The last issue update time.', 'format': 'date-time', 'readOnly': True}}}, 'deleted': {'type': 'boolean', 'description': 'Whether the project is marked as deleted.', 'readOnly': True}, 'retentionTillDate': {'type': 'string', 'description': 'The date when the project is deleted permanently.', 'format': 'date-time', 'readOnly': True}, 'deletedDate': {'type': 'string', 'description': 'The date when the project was marked as deleted.', 'format': 'date-time', 'readOnly': True}, 'deletedBy': {'description': 'The user who marked the project as deleted.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'archived': {'type': 'boolean', 'description': 'Whether the project is archived.', 'readOnly': True}, 'archivedDate': {'type': 'string', 'description': 'The date when the project was archived.', 'format': 'date-time', 'readOnly': True}, 'archivedBy': {'description': 'The user who archived the project.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}}}, 'role': {'description': 'The project role that the filter is shared with.  \nFor a request, specify the `id` for the role. You must also specify the `project` object and `id` for the project that the role is in.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL the project role details.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project role.'}, 'id': {'type': 'integer', 'description': 'The ID of the project role.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the project role.', 'readOnly': True}, 'actors': {'type': 'array', 'description': 'The list of users who act in this role.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the role actor.', 'readOnly': True}, 'displayName': {'type': 'string', 'description': "The display name of the role actor. For users, depending on the userâ€™s privacy setting, this may return an alternative value for the user's name.", 'readOnly': True}, 'type': {'type': 'string', 'description': 'The type of role actor.', 'readOnly': True, 'enum': ['atlassian-group-role-actor', 'atlassian-user-role-actor']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.', 'readOnly': True}, 'avatarUrl': {'type': 'string', 'description': 'The avatar of the role actor.', 'readOnly': True}, 'actorUser': {'readOnly': True, 'type': 'object', 'properties': {'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.', 'readOnly': True}}}, 'actorGroup': {'readOnly': True, 'type': 'object', 'properties': {'displayName': {'type': 'string', 'description': 'The display name of the group.'}, 'name': {'type': 'string', 'description': 'The name of the group'}}}}}}, 'scope': {'description': 'The scope of the role. Indicated for roles associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).', 'readOnly': True, 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'readOnly': True, 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The description of the project category.', 'readOnly': True}}}}}}}, 'translatedName': {'type': 'string', 'description': 'The translated name of the project role.'}, 'currentUserRole': {'type': 'boolean', 'description': 'Whether the calling user is part of this role.'}, 'admin': {'type': 'boolean', 'description': 'Whether this role is the admin role for the project.', 'readOnly': True}, 'roleConfigurable': {'type': 'boolean', 'description': 'Whether the roles are configurable for this project.', 'readOnly': True}, 'default': {'type': 'boolean', 'description': 'Whether this role is the default role for the project', 'readOnly': True}}}, 'group': {'description': 'The group that the filter is shared with. For a request, specify the `name` property for the group.', 'type': 'object', 'properties': {'groupId': {'type': ['null', 'string']}, 'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}}}, 'isWritable': {'type': 'boolean'}, 'approximateLastUsed': {'type': ['null', 'string'], 'format': 'date-time'}, 'subscriptions': {'type': 'array', 'description': 'The users that are subscribed to the filter.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the filter subscription.', 'readOnly': True}, 'user': {'description': 'The user subscribing to filter.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'group': {'description': 'The group subscribing to filter.', 'readOnly': True, 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of a filter.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'filter_sharing', 'resourceConfig': {'stream': 'filter_sharing', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The unique identifier of the share permission.', 'readOnly': True}, 'filterId': {'type': ['null', 'string'], 'description': 'Id of the related filter'}, 'type': {'type': 'string', 'description': 'The type of share permission:\n\n *  `group` Shared with a group. If set in a request, then specify `sharePermission.group` as well.\n *  `project` Shared with a project. If set in a request, then specify `sharePermission.project` as well.\n *  `projectRole` Share with a project role in a project. This value is not returned in responses. It is used in requests, where it needs to be specify with `projectId` and `projectRoleId`.\n *  `global` Shared globally. If set in a request, no other `sharePermission` properties need to be specified.\n *  `loggedin` Shared with all logged-in users. Note: This value is set in a request by specifying `authenticated` as the `type`.\n *  `project-unknown` Shared with a project that the user does not have access to. Cannot be set in a request.', 'enum': ['group', 'project', 'projectRole', 'global', 'loggedin', 'authenticated', 'project-unknown']}, 'project': {'description': 'The project that the filter is shared with. This is similar to the project object returned by [Get project](#api-rest-api-3-project-projectIdOrKey-get) but it contains a subset of the properties, which are: `self`, `id`, `key`, `assigneeType`, `name`, `roles`, `avatarUrls`, `projectType`, `simplified`.  \nFor a request, specify the `id` for the project.', 'type': 'object', 'properties': {'expand': {'type': 'string', 'description': 'Expand options that include additional project details in the response.', 'readOnly': True, 'xml': {'attribute': True}}, 'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'A brief description of the project.', 'readOnly': True}, 'lead': {'description': 'The username of the project lead.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'components': {'type': 'array', 'description': 'List of the components contained in the project.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the component.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The unique identifier for the component.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.'}, 'description': {'type': 'string', 'description': 'The description for the component. Optional when creating or updating a component.'}, 'lead': {'description': "The user details for the component's lead user.", 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'leadUserName': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'leadAccountId': {'maxLength': 128, 'type': 'string', 'description': "The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.", 'writeOnly': True}, 'assigneeType': {'type': 'string', 'description': 'The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:\n\n *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.\n *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.\n *  `UNASSIGNED` an assignee is not set for issues created with this component.\n *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.\n\nDefault value: `PROJECT_DEFAULT`.  \nOptional when creating or updating a component.', 'enum': ['PROJECT_DEFAULT', 'COMPONENT_LEAD', 'PROJECT_LEAD', 'UNASSIGNED']}, 'assignee': {'description': 'The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'realAssigneeType': {'type': 'string', 'description': 'The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:\n\n *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.\n *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.\n *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.\n *  `PROJECT_DEFAULT` when none of the preceding cases are true.', 'readOnly': True, 'enum': ['PROJECT_DEFAULT', 'COMPONENT_LEAD', 'PROJECT_LEAD', 'UNASSIGNED']}, 'realAssignee': {'description': 'The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'isAssigneeTypeValid': {'type': 'boolean', 'description': 'Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.', 'readOnly': True}, 'project': {'type': 'string', 'description': "The key of the project the component is assigned to. Required when creating a component. Can't be updated."}, 'projectId': {'type': 'integer', 'description': 'The ID of the project the component is assigned to.', 'readOnly': True}}}}, 'issueTypes': {'type': 'array', 'description': 'List of the issue types available in the project.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of these issue type details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the issue type.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the issue type.', 'readOnly': True}, 'iconUrl': {'type': 'string', 'description': "The URL of the issue type's avatar.", 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the issue type.', 'readOnly': True}, 'subtask': {'type': 'boolean', 'description': 'Whether this issue type is used to create subtasks.', 'readOnly': True}, 'avatarId': {'type': 'integer', 'description': "The ID of the issue type's avatar.", 'readOnly': True}, 'entityId': {'type': 'string', 'description': 'Unique ID for next-gen projects.', 'readOnly': True}, 'hierarchyLevel': {'type': 'integer', 'description': 'Hierarchy level of the issue type.', 'readOnly': True}, 'scope': {'description': 'Details of the next-gen projects the issue type is available in.', 'readOnly': True, 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'readOnly': True, 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The description of the project category.', 'readOnly': True}}}}}}}}}}, 'url': {'type': 'string', 'description': 'A link to information about this project, such as project documentation.', 'readOnly': True}, 'email': {'type': 'string', 'description': 'An email address associated with the project.'}, 'assigneeType': {'type': 'string', 'description': 'The default assignee when creating issues for this project.', 'readOnly': True, 'enum': ['PROJECT_LEAD', 'UNASSIGNED']}, 'versions': {'type': 'array', 'description': 'The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).', 'readOnly': True, 'items': {'type': 'object', 'properties': {'expand': {'type': 'string', 'description': 'Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.\n\nOptional for create and update.', 'xml': {'attribute': True}}, 'self': {'type': 'string', 'description': 'The URL of the version.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the version.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the version. Optional when creating or updating a version.'}, 'name': {'type': 'string', 'description': 'The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.'}, 'archived': {'type': 'boolean', 'description': 'Indicates that the version is archived. Optional when creating or updating a version.'}, 'released': {'type': 'boolean', 'description': 'Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.'}, 'startDate': {'type': 'string', 'description': 'The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.', 'format': 'date'}, 'releaseDate': {'type': 'string', 'description': 'The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.', 'format': 'date'}, 'overdue': {'type': 'boolean', 'description': 'Indicates that the version is overdue.', 'readOnly': True}, 'userStartDate': {'type': 'string', 'description': "The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.", 'readOnly': True}, 'userReleaseDate': {'type': 'string', 'description': "The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.", 'readOnly': True}, 'project': {'type': 'string', 'description': 'Deprecated. Use `projectId`.'}, 'projectId': {'type': 'integer', 'description': 'The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.'}, 'moveUnfixedIssuesTo': {'type': 'string', 'description': 'The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.'}, 'operations': {'type': 'array', 'description': 'If the expand option `operations` is used, returns the list of operations available for this version.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'id': {'type': 'string'}, 'styleClass': {'type': 'string'}, 'iconClass': {'type': 'string'}, 'label': {'type': 'string'}, 'title': {'type': 'string'}, 'href': {'type': 'string'}, 'weight': {'type': 'integer'}}}}, 'issuesStatusForFixVersion': {'description': 'If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.', 'readOnly': True, 'type': 'object', 'properties': {'unmapped': {'type': 'integer', 'description': 'Count of issues with a status other than *to do*, *in progress*, and *done*.', 'readOnly': True}, 'toDo': {'type': 'integer', 'description': 'Count of issues with status *to do*.', 'readOnly': True}, 'inProgress': {'type': 'integer', 'description': 'Count of issues with status *in progress*.', 'readOnly': True}, 'done': {'type': 'integer', 'description': 'Count of issues with status *done*.', 'readOnly': True}}}}}}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'roles': {'type': 'object', 'additionalProperties': True, 'description': 'The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project category. Required on create, optional on update.'}, 'description': {'type': 'string', 'description': 'The description of the project category. Required on create, optional on update.'}}}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether the project is simplified.', 'readOnly': True}, 'style': {'type': 'string', 'description': 'The type of the project.', 'readOnly': True, 'enum': ['classic', 'next-gen']}, 'favourite': {'type': 'boolean', 'description': 'Whether the project is selected as a favorite.'}, 'isPrivate': {'type': 'boolean', 'description': 'Whether the project is private.', 'readOnly': True}, 'issueTypeHierarchy': {'description': 'The issue type hierarchy for the project', 'readOnly': True, 'type': 'object', 'properties': {'level': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer'}, 'name': {'type': 'string'}, 'aboveLevelId': {'type': 'integer'}, 'belowLevelId': {'type': 'integer'}, 'projectConfigurationId': {'type': 'integer'}, 'level': {'type': 'integer'}, 'issueTypeIds': {'type': 'array', 'items': {'type': 'integer'}}, 'externalUuid': {'type': 'string'}, 'globalHierarchyLevel': {'type': 'string', 'enum': ['SUBTASK', 'BASE', 'EPIC']}}}}}}, 'permissions': {'description': 'User permissions on the project', 'readOnly': True, 'type': 'object', 'properties': {'canEdit': {'type': 'boolean', 'description': 'Whether the logged user can edit the project.', 'readOnly': True}}}, 'properties': {'type': 'object', 'additionalProperties': True, 'description': 'Map of project properties', 'readOnly': True}, 'uuid': {'type': 'string', 'description': 'Unique ID for next-gen projects.', 'readOnly': True}, 'insight': {'description': 'Insights about the project.', 'readOnly': True, 'type': 'object', 'properties': {'totalIssueCount': {'type': 'integer', 'description': 'Total issue count.', 'readOnly': True}, 'lastIssueUpdateTime': {'type': 'string', 'description': 'The last issue update time.', 'format': 'date-time', 'readOnly': True}}}, 'deleted': {'type': 'boolean', 'description': 'Whether the project is marked as deleted.', 'readOnly': True}, 'retentionTillDate': {'type': 'string', 'description': 'The date when the project is deleted permanently.', 'format': 'date-time', 'readOnly': True}, 'deletedDate': {'type': 'string', 'description': 'The date when the project was marked as deleted.', 'format': 'date-time', 'readOnly': True}, 'deletedBy': {'description': 'The user who marked the project as deleted.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'archived': {'type': 'boolean', 'description': 'Whether the project is archived.', 'readOnly': True}, 'archivedDate': {'type': 'string', 'description': 'The date when the project was archived.', 'format': 'date-time', 'readOnly': True}, 'archivedBy': {'description': 'The user who archived the project.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}}}, 'role': {'description': 'The project role that the filter is shared with.  \nFor a request, specify the `id` for the role. You must also specify the `project` object and `id` for the project that the role is in.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL the project role details.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project role.'}, 'id': {'type': 'integer', 'description': 'The ID of the project role.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the project role.', 'readOnly': True}, 'actors': {'type': 'array', 'description': 'The list of users who act in this role.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the role actor.', 'readOnly': True}, 'displayName': {'type': 'string', 'description': "The display name of the role actor. For users, depending on the userâ€™s privacy setting, this may return an alternative value for the user's name.", 'readOnly': True}, 'type': {'type': 'string', 'description': 'The type of role actor.', 'readOnly': True, 'enum': ['atlassian-group-role-actor', 'atlassian-user-role-actor']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.', 'readOnly': True}, 'avatarUrl': {'type': 'string', 'description': 'The avatar of the role actor.', 'readOnly': True}, 'actorUser': {'readOnly': True, 'type': 'object', 'properties': {'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.', 'readOnly': True}}}, 'actorGroup': {'readOnly': True, 'type': 'object', 'properties': {'displayName': {'type': 'string', 'description': 'The display name of the group.'}, 'name': {'type': 'string', 'description': 'The name of the group'}}}}}}, 'scope': {'description': 'The scope of the role. Indicated for roles associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).', 'readOnly': True, 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'readOnly': True, 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The description of the project category.', 'readOnly': True}}}}}}}, 'translatedName': {'type': 'string', 'description': 'The translated name of the project role.'}, 'currentUserRole': {'type': 'boolean', 'description': 'Whether the calling user is part of this role.'}, 'admin': {'type': 'boolean', 'description': 'Whether this role is the admin role for the project.', 'readOnly': True}, 'roleConfigurable': {'type': 'boolean', 'description': 'Whether the roles are configurable for this project.', 'readOnly': True}, 'default': {'type': 'boolean', 'description': 'Whether this role is the default role for the project', 'readOnly': True}}}, 'group': {'description': 'The group that the filter is shared with. For a request, specify the `name` property for the group.', 'type': 'object', 'properties': {'groupId': {'type': ['null', 'string']}, 'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of a share permission for the filter.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'groups', 'resourceConfig': {'stream': 'groups', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'name': {'type': ['null', 'string'], 'description': 'The name of the group.'}, 'groupId': {'type': ['null', 'string'], 'description': 'The ID of the group, if available, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'The list of groups found in a search, including header text (Showing X of Y matching groups) and total of matched groups.', 'x-infer-schema': True}, 'key': ['/groupId']}, {'recommendedName': 'issues', 'resourceConfig': {'stream': 'issues', 'syncMode': 'incremental', 'cursorField': ['updated']}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'expand': {'type': 'string', 'description': 'Expand options that include additional issue details in the response.', 'readOnly': True, 'xml': {'attribute': True}}, 'id': {'type': 'string', 'description': 'The ID of the issue.', 'readOnly': True}, 'self': {'type': 'string', 'description': 'The URL of the issue details.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'The key of the issue.', 'readOnly': True}, 'renderedFields': {'type': 'object', 'additionalProperties': True, 'description': 'The rendered value of each field present on the issue.', 'readOnly': True, 'properties': {'statuscategorychangedate': {'type': ['null', 'string']}, 'issuetype': {'type': ['null', 'string']}, 'timespent': {'type': ['null', 'string']}, 'project': {'type': ['null', 'string']}, 'fixVersions': {'type': ['null', 'string']}, 'aggregatetimespent': {'type': ['null', 'string']}, 'resolution': {'type': ['null', 'string']}, 'resolutiondate': {'type': ['null', 'string']}, 'workratio': {'type': ['null', 'string']}, 'watches': {'type': ['null', 'string']}, 'lastViewed': {'type': ['null', 'string']}, 'issuerestriction': {'type': ['null', 'string']}, 'created': {'type': ['null', 'string']}, 'priority': {'type': ['null', 'string']}, 'labels': {'type': ['null', 'array'], 'items': {'type': ['null', 'string']}}, 'timeestimate': {'type': ['null', 'string']}, 'aggregatetimeoriginalestimate': {'type': ['null', 'string']}, 'versions': {'type': ['null', 'string']}, 'issuelinks': {'type': ['null', 'array'], 'items': {'type': ['null', 'string']}}, 'assignee': {'type': ['null', 'string']}, 'updated': {'type': ['null', 'string']}, 'status': {'type': ['null', 'string']}, 'components': {'type': ['null', 'array'], 'items': {'type': ['null', 'object']}}, 'timeoriginalestimate': {'type': ['null', 'string']}, 'description': {'type': ['null', 'string']}, 'timetracking': {'type': ['null', 'object']}, 'security': {'type': ['null', 'string']}, 'aggregatetimeestimate': {'type': ['null', 'string']}, 'attachment': {'type': ['null', 'array']}, 'summary': {'type': ['null', 'string']}, 'creator': {'type': ['null', 'string']}, 'subtasks': {'type': ['null', 'array']}, 'reporter': {'type': ['null', 'string']}, 'aggregateprogress': {'type': ['null', 'string']}, 'environment': {'type': ['null', 'string']}, 'duedate': {'type': ['null', 'string']}, 'progress': {'type': ['null', 'string']}, 'comment': {'type': ['null', 'object'], 'properties': {'comments': {'type': ['null', 'array'], 'items': {'type': ['null', 'object'], 'properties': {'self': {'type': ['null', 'string']}, 'id': {'type': ['null', 'string']}, 'author': {'type': ['null', 'object'], 'properties': {'self': {'type': ['null', 'string']}, 'accountId': {'type': ['null', 'string']}, 'emailAddress': {'type': ['null', 'string']}, 'avatarUrls': {'type': ['null', 'object'], 'properties': {'48x48': {'type': ['null', 'string']}, '24x24': {'type': ['null', 'string']}, '16x16': {'type': ['null', 'string']}, '32x32': {'type': ['null', 'string']}}}, 'displayName': {'type': ['null', 'string']}, 'active': {'type': 'boolean'}, 'timeZone': {'type': ['null', 'string']}, 'accountType': {'type': ['null', 'string']}}}, 'body': {'type': ['null', 'object'], 'properties': {'version': {'type': ['null', 'integer']}, 'type': {'type': ['null', 'string']}, 'content': {'type': ['null', 'array'], 'items': {'type': ['null', 'object'], 'properties': {'type': {'type': ['null', 'string']}, 'content': {'type': 'array', 'items': {'type': ['null', 'object'], 'properties': {'type': {'type': ['null', 'string']}, 'text': {'type': ['null', 'string']}}}}}}}}}, 'updateAuthor': {'type': ['null', 'object'], 'properties': {'self': {'type': ['null', 'string']}, 'accountId': {'type': ['null', 'string']}, 'emailAddress': {'type': ['null', 'string']}, 'avatarUrls': {'type': ['null', 'object'], 'properties': {'48x48': {'type': ['null', 'string']}, '24x24': {'type': ['null', 'string']}, '16x16': {'type': ['null', 'string']}, '32x32': {'type': ['null', 'string']}}}, 'displayName': {'type': ['null', 'string']}, 'active': {'type': 'boolean'}, 'timeZone': {'type': ['null', 'string']}, 'accountType': {'type': ['null', 'string']}}}, 'created': {'type': ['null', 'string']}, 'updated': {'type': ['null', 'string']}, 'jsdPublic': {'type': 'boolean'}}}}, 'self': {'type': ['null', 'string']}, 'maxResults': {'type': ['null', 'integer']}, 'total': {'type': ['null', 'integer']}, 'startAt': {'type': ['null', 'integer']}}}, 'votes': {'type': ['null', 'string']}, 'worklog': {'type': ['null', 'object'], 'properties': {'startAt': {'type': ['null', 'integer']}, 'maxResults': {'type': ['null', 'integer']}, 'total': {'type': 'integer'}, 'worklogs': {'type': ['null', 'array']}}}}}, 'properties': {'type': 'object', 'additionalProperties': True, 'description': 'Details of the issue properties identified in the request.', 'readOnly': True}, 'names': {'type': 'object', 'additionalProperties': True, 'description': 'The ID and name of each field present on the issue.', 'readOnly': True}, 'schema': {'type': 'object', 'description': 'The schema describing each field present on the issue.', 'readOnly': True}, 'transitions': {'type': 'array', 'description': 'The transitions that can be performed on the issue.', 'readOnly': True, 'items': {'type': ['null', 'object'], 'properties': {'id': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'to': {'type': ['null', 'object'], 'properties': {'self': {'type': ['null', 'string']}, 'description': {'type': ['null', 'string']}, 'iconUrl': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'id': {'type': ['null', 'string']}, 'statusCategory': {'type': ['null', 'object'], 'properties': {'self': {'type': ['null', 'string']}, 'id': {'type': ['null', 'integer']}, 'key': {'type': ['null', 'string']}, 'colorName': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}}}}}, 'hasScreen': {'type': 'boolean'}, 'isGlobal': {'type': 'boolean'}, 'isInitial': {'type': 'boolean'}, 'isAvailable': {'type': 'boolean'}, 'isConditional': {'type': 'boolean'}, 'isLooped': {'type': 'boolean'}}}}, 'operations': {'type': ['object', 'null'], 'description': 'The operations that can be performed on the issue.', 'readOnly': True}, 'editmeta': {'type': ['object', 'null'], 'description': 'The metadata for the fields on the issue that can be amended.', 'readOnly': True}, 'changelog': {'type': ['object', 'null'], 'description': 'Details of changelogs associated with the issue.', 'readOnly': True, 'properties': {'startAt': {'type': ['null', 'integer']}, 'maxResults': {'type': ['null', 'integer']}, 'total': {'type': ['null', 'integer']}, 'histories': {'type': ['null', 'array'], 'items': {'type': ['null', 'object'], 'properties': {'id': {'type': ['null', 'string']}, 'author': {'type': ['null', 'object'], 'properties': {'self': {'type': ['null', 'string']}, 'accountId': {'type': ['null', 'string']}, 'emailAddress': {'type': ['null', 'string']}, 'avatarUrls': {'type': ['null', 'object'], 'properties': {'48x48': {'type': ['null', 'string']}, '24x24': {'type': ['null', 'string']}, '16x16': {'type': ['null', 'string']}, '32x32': {'type': ['null', 'string']}}}, 'displayName': {'type': 'string'}, 'active': {'type': 'boolean'}, 'timeZone': {'type': ['null', 'string']}, 'accountType': {'type': ['null', 'string']}}}, 'created': {'type': ['null', 'string']}, 'items': {'type': ['null', 'array'], 'items': {'type': ['null', 'object'], 'properties': {'fieldId': {'type': ['null', 'string']}, 'field': {'type': ['null', 'string']}, 'fieldtype': {'type': ['null', 'string']}, 'from': {'type': ['null', 'string']}, 'fromString': {'type': ['null', 'string']}, 'to': {'type': ['null', 'string']}, 'toString': {'type': ['null', 'string']}, 'tmpFromAccountId': {'type': ['null', 'string']}, 'tmpToAccountId': {'type': ['null', 'string']}}}}}}}}}, 'versionedRepresentations': {'type': 'object', 'additionalProperties': True, 'description': 'The versions of each field on the issue.', 'readOnly': True}, 'fieldsToInclude': {'type': 'object'}, 'fields': {'type': 'object', 'properties': {'created': {'type': ['string', 'null'], 'format': 'date-time', 'description': 'This field is not shown in schema / swagger, but exists in records and we use it as cursor field. Updated may be absent. Added to solve the #4341'}, 'updated': {'type': ['string', 'null'], 'format': 'date-time', 'description': 'This field is not shown in schema / swagger, but exists in records and we use it as cursor field. Updated may be absent. Added to solve the #4341'}, 'aggregateprogress': {'type': ['null', 'object'], 'properties': {'percent': {'type': ['null', 'integer']}, 'progress': {'type': ['null', 'integer']}, 'total': {'type': ['null', 'integer']}}}, 'assignee': {'type': ['null', 'object'], 'properties': {'accountId': {'type': ['null', 'string']}, 'accountType': {'type': ['null', 'string']}, 'active': {'type': ['null', 'boolean']}, 'avatarUrls': {'type': ['null', 'object'], 'properties': {'16x16': {'type': ['null', 'string']}, '24x24': {'type': ['null', 'string']}, '32x32': {'type': ['null', 'string']}, '48x48': {'type': ['null', 'string']}}}, 'displayName': {'type': ['null', 'string']}, 'emailAddress': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}, 'timeZone': {'type': ['null', 'string']}}}, 'aggregatetimeestimate': {'type': ['null', 'integer']}, 'aggregatetimeoriginalestimate': {'type': ['null', 'integer']}, 'aggregatetimespent': {'type': ['null', 'integer']}, 'attachment': {'type': ['null', 'array']}, 'comment': {'type': ['null', 'object'], 'properties': {'comments': {'type': ['null', 'array']}, 'maxResults': {'type': ['null', 'integer']}, 'self': {'type': ['null', 'string']}, 'startAt': {'type': ['null', 'integer']}, 'total': {'type': ['null', 'integer']}}}, 'components': {'type': ['null', 'array']}, 'creator': {'type': ['null', 'object'], 'properties': {'accountId': {'type': ['null', 'string']}, 'accountType': {'type': ['null', 'string']}, 'active': {'type': ['null', 'boolean']}, 'avatarUrls': {'type': ['null', 'object'], 'properties': {'16x16': {'type': ['null', 'string']}, '24x24': {'type': ['null', 'string']}, '32x32': {'type': ['null', 'string']}, '48x48': {'type': ['null', 'string']}}}, 'displayName': {'type': ['null', 'string']}, 'emailAddress': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}, 'timeZone': {'type': ['null', 'string']}}}, 'description': {'type': ['null', 'object'], 'properties': {'content': {'type': ['null', 'array'], 'items': {'type': ['null', 'object'], 'properties': {'content': {'type': ['null', 'array'], 'items': {'type': ['null', 'object'], 'properties': {'text': {'type': ['null', 'string']}, 'type': {'type': ['null', 'string']}}}}, 'type': {'type': ['null', 'string']}}}}, 'type': {'type': ['null', 'string']}, 'version': {'type': ['null', 'integer']}}}, 'fixVersions': {'type': ['null', 'array']}, 'issuelinks': {'type': ['null', 'array']}, 'issuerestriction': {'type': ['null', 'object'], 'properties': {'issuerestrictions': {'type': ['null', 'object']}, 'shouldDisplay': {'type': ['null', 'boolean']}}}, 'issuetype': {'type': ['null', 'object'], 'properties': {'avatarId': {'type': ['null', 'integer']}, 'description': {'type': ['null', 'string']}, 'entityId': {'type': ['null', 'string']}, 'hierarchyLevel': {'type': ['null', 'integer']}, 'iconUrl': {'type': ['null', 'string']}, 'id': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}, 'subtask': {'type': ['null', 'boolean']}}}, 'labels': {'type': ['null', 'array'], 'items': {'type': ['null', 'string']}}, 'lastViewed': {'type': ['null', 'string'], 'format': 'date-time'}, 'priority': {'type': ['null', 'object'], 'properties': {'iconUrl': {'type': ['null', 'string']}, 'id': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}}}, 'progress': {'type': ['null', 'object'], 'properties': {'percent': {'type': ['null', 'integer']}, 'progress': {'type': ['null', 'integer']}, 'total': {'type': ['null', 'integer']}}}, 'project': {'type': ['null', 'object'], 'properties': {'avatarUrls': {'type': ['null', 'object'], 'properties': {'16x16': {'type': ['null', 'string']}, '24x24': {'type': ['null', 'string']}, '32x32': {'type': ['null', 'string']}, '48x48': {'type': ['null', 'string']}}}, 'id': {'type': ['null', 'string']}, 'key': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'projectCategory': {'type': ['null', 'object'], 'properties': {'description': {'type': ['null', 'string']}, 'id': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}}}, 'projectTypeKey': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}, 'simplified': {'type': ['null', 'boolean']}}}, 'reporter': {'type': ['null', 'object'], 'properties': {'accountId': {'type': ['null', 'string']}, 'accountType': {'type': ['null', 'string']}, 'active': {'type': ['null', 'boolean']}, 'avatarUrls': {'type': ['null', 'object'], 'properties': {'16x16': {'type': ['null', 'string']}, '24x24': {'type': ['null', 'string']}, '32x32': {'type': ['null', 'string']}, '48x48': {'type': ['null', 'string']}}}, 'displayName': {'type': ['null', 'string']}, 'emailAddress': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}, 'timeZone': {'type': ['null', 'string']}}}, 'resolution': {'type': ['null', 'object'], 'properties': {'description': {'type': ['null', 'string']}, 'id': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}}}, 'resolutiondate': {'type': ['null', 'string'], 'format': 'date-time'}, 'status': {'type': ['null', 'object'], 'properties': {'description': {'type': ['null', 'string']}, 'iconUrl': {'type': ['null', 'string']}, 'id': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}, 'statusCategory': {'type': ['null', 'object'], 'properties': {'self': {'type': ['null', 'string']}, 'id': {'type': ['null', 'integer']}, 'key': {'type': ['null', 'string']}, 'colorName': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}}}}}, 'statuscategorychangedate': {'type': ['null', 'string'], 'format': 'date-time'}, 'subtasks': {'type': ['null', 'array']}, 'summary': {'type': ['null', 'string']}, 'timeestimate': {'type': ['null', 'integer']}, 'timeoriginalestimate': {'type': ['null', 'integer']}, 'timespent': {'type': ['null', 'integer']}, 'timetracking': {'type': ['null', 'object'], 'properties': {'remainingEstimate': {'type': ['null', 'string']}, 'remainingEstimateSeconds': {'type': ['null', 'integer']}, 'timeSpent': {'type': ['null', 'string']}, 'timeSpentSeconds': {'type': ['null', 'integer']}, 'originalEstimate': {'type': ['null', 'string']}, 'originalEstimateSeconds': {'type': ['null', 'integer']}}}, 'versions': {'type': ['null', 'array']}, 'votes': {'type': ['null', 'object'], 'properties': {'hasVoted': {'type': ['null', 'boolean']}, 'self': {'type': ['null', 'string']}, 'votes': {'type': ['null', 'integer']}}}, 'watches': {'type': ['null', 'object'], 'properties': {'isWatching': {'type': ['null', 'boolean']}, 'self': {'type': ['null', 'string']}, 'watchCount': {'type': ['null', 'integer']}}}, 'worklog': {'type': ['null', 'object'], 'properties': {'maxResults': {'type': ['null', 'integer']}, 'startAt': {'type': ['null', 'integer']}, 'total': {'type': ['null', 'integer']}, 'worklogs': {'type': ['null', 'array'], 'items': {'type': ['null', 'object'], 'properties': {'author': {'type': ['null', 'object'], 'properties': {'accountId': {'type': ['null', 'string']}, 'accountType': {'type': ['null', 'string']}, 'active': {'type': ['null', 'boolean']}, 'avatarUrls': {'type': ['null', 'object'], 'properties': {'16x16': {'type': ['null', 'string']}, '24x24': {'type': ['null', 'string']}, '32x32': {'type': ['null', 'string']}, '48x48': {'type': ['null', 'string']}}}, 'displayName': {'type': ['null', 'string']}, 'emailAddress': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}, 'timeZone': {'type': ['null', 'string']}}}, 'comment': {'type': ['null', 'object'], 'properties': {'version': {'type': ['null', 'integer']}, 'type': {'type': ['null', 'string']}, 'content': {'type': ['null', 'array'], 'items': {'type': ['null', 'object'], 'properties': {'type': {'type': ['null', 'string']}, 'content': {'type': 'array', 'items': {'type': ['null', 'object'], 'properties': {'type': {'type': ['null', 'string']}, 'text': {'type': ['null', 'string']}}}}}}}}}, 'created': {'type': ['null', 'string'], 'format': 'date-time'}, 'started': {'type': ['null', 'string'], 'format': 'date-time'}, 'updated': {'type': ['null', 'string'], 'format': 'date-time'}, 'id': {'type': ['null', 'string']}, 'issueId': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}, 'timeSpent': {'type': ['null', 'string']}, 'timeSpentSeconds': {'type': ['null', 'integer']}, 'updateAuthor': {'type': ['null', 'object'], 'properties': {'accountId': {'type': ['null', 'string']}, 'accountType': {'type': ['null', 'string']}, 'active': {'type': ['null', 'boolean']}, 'avatarUrls': {'type': ['null', 'object'], 'properties': {'16x16': {'type': ['null', 'string']}, '24x24': {'type': ['null', 'string']}, '32x32': {'type': ['null', 'string']}, '48x48': {'type': ['null', 'string']}}}, 'displayName': {'type': ['null', 'string']}, 'emailAddress': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}, 'timeZone': {'type': ['null', 'string']}}}}}}}}, 'workratio': {'type': ['null', 'integer']}}, 'additionalProperties': True}, 'projectId': {'type': 'string', 'description': 'The ID of the project containing the issue.', 'readOnly': True}, 'projectKey': {'type': 'string', 'description': 'The key of the project containing the issue.', 'readOnly': True}, 'created': {'type': ['string', 'null'], 'format': 'date-time', 'description': 'This field transformed from fields attr', 'readOnly': True}, 'updated': {'type': ['string', 'null'], 'format': 'date-time', 'description': 'This field transformed from fields attr', 'readOnly': True}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_comments', 'resourceConfig': {'stream': 'issue_comments', 'syncMode': 'incremental', 'cursorField': ['updated']}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the comment.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the comment.', 'readOnly': True}, 'issueId': {'type': ['null', 'string'], 'description': 'Id of the related issue.', 'readOnly': True}, 'author': {'description': 'The ID of the user who created the comment.', 'readOnly': True}, 'body': {'type': 'object', 'description': 'The comment text in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/).'}, 'renderedBody': {'type': 'string', 'description': 'The rendered version of the comment.', 'readOnly': True}, 'updateAuthor': {'type': 'object', 'additionalProperties': True, 'description': 'The ID of the user who updated the comment last.', 'readOnly': True}, 'created': {'type': 'string', 'description': 'The date and time at which the comment was created.', 'format': 'date-time', 'readOnly': True}, 'updated': {'type': 'string', 'description': 'The date and time at which the comment was updated last.', 'format': 'date-time', 'readOnly': True}, 'visibility': {'type': ['object', 'null'], 'properties': {'type': {'type': 'string', 'description': 'Whether visibility of this item is restricted to a group or role.', 'enum': ['group', 'role']}, 'value': {'type': 'string', 'description': 'The name of the group or role to which visibility of this item is restricted.'}}, 'additionalProperties': True, 'description': 'The group or role to which this item is visible.'}, 'jsdPublic': {'type': 'boolean', 'description': "Whether the comment is visible in Jira Service Desk. Defaults to true when comments are created in the Jira Cloud Platform. This includes when the site doesn't use Jira Service Desk or the project isn't a Jira Service Desk project and, therefore, there is no Jira Service Desk for the issue to be visible on. To create a comment with its visibility in Jira Service Desk set to false, use the Jira Service Desk REST API [Create request comment](https://developer.atlassian.com/cloud/jira/service-desk/rest/#api-rest-servicedeskapi-request-issueIdOrKey-comment-post) operation.", 'readOnly': True}, 'properties': {'type': 'array', 'description': 'A list of comment properties. Optional on create and update.'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'A comment.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_fields', 'resourceConfig': {'stream': 'issue_fields', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The ID of the field.'}, 'key': {'type': 'string', 'description': 'The key of the field.'}, 'name': {'type': 'string', 'description': 'The name of the field.'}, 'custom': {'type': 'boolean', 'description': 'Whether the field is a custom field.'}, 'orderable': {'type': 'boolean', 'description': 'Whether the content of the field can be used to order lists.'}, 'navigable': {'type': 'boolean', 'description': 'Whether the field can be used as a column on the issue navigator.'}, 'searchable': {'type': 'boolean', 'description': 'Whether the content of the field can be searched.'}, 'clauseNames': {'uniqueItems': True, 'type': 'array', 'description': 'The names that can be used to reference the field in an advanced search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ).', 'items': {'type': 'string'}}, 'scope': {'description': 'The scope of the field.', 'type': ['object', 'null'], 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'readOnly': True, 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The description of the project category.', 'readOnly': True}}}}}}}, 'schema': {'description': 'The data schema for the field.', 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The data type of the field.', 'readOnly': True}, 'items': {'type': 'string', 'description': 'When the data type is an array, the name of the field items within the array.', 'readOnly': True}, 'system': {'type': 'string', 'description': 'If the field is a system field, the name of the field.', 'readOnly': True}, 'custom': {'type': 'string', 'description': 'If the field is a custom field, the URI of the field.', 'readOnly': True}, 'customId': {'type': 'integer', 'description': 'If the field is a custom field, the custom ID of the field.', 'readOnly': True}, 'configuration': {'type': 'object', 'additionalProperties': True, 'description': 'If the field is a custom field, the configuration of the field.', 'readOnly': True}}}, 'untranslatedName': {'type': ['null', 'string']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details about a field.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_field_configurations', 'resourceConfig': {'stream': 'issue_field_configurations', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the field configuration.'}, 'name': {'type': 'string', 'description': 'The name of the field configuration.'}, 'description': {'type': 'string', 'description': 'The description of the field configuration.'}, 'isDefault': {'type': 'boolean', 'description': 'Whether the field configuration is the default.'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of a field configuration.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_custom_field_contexts', 'resourceConfig': {'stream': 'issue_custom_field_contexts', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'https://json-schema.org/draft-07/schema#', 'type': 'object', 'description': 'The details of a custom field context.', 'properties': {'id': {'type': ['null', 'string'], 'description': 'The ID of the context.'}, 'fieldId': {'type': ['null', 'string'], 'description': 'Id of the related field'}, 'name': {'type': ['null', 'string'], 'description': 'The name of the context.'}, 'description': {'type': ['null', 'string'], 'description': 'The description of the context.'}, 'isGlobalContext': {'type': ['null', 'boolean'], 'description': 'Whether the context is global.'}, 'isAnyIssueType': {'type': ['null', 'boolean'], 'description': 'Whether the context apply to all issue types.'}, 'fieldType': {'type': ['null', 'string']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_custom_field_options', 'resourceConfig': {'stream': 'issue_custom_field_options', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'https://json-schema.org/draft-07/schema#', 'type': 'object', 'description': 'Details of the custom field options for a context.', 'properties': {'id': {'type': ['null', 'string'], 'description': 'The ID of the custom field option.'}, 'value': {'type': ['null', 'string'], 'description': 'The value of the custom field option.'}, 'optionId': {'type': ['null', 'string'], 'description': 'For cascading options, the ID of the custom field option containing the cascading option.'}, 'disabled': {'type': ['null', 'boolean'], 'description': 'Whether the option is disabled.'}, 'fieldId': {'type': ['null', 'string']}, 'contextId': {'type': ['null', 'string']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_link_types', 'resourceConfig': {'stream': 'issue_link_types', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'string', 'description': "The ID of the issue link type and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when `name` isn't provided. Otherwise, read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is read only."}, 'name': {'type': 'string', 'description': "The name of the issue link type and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when `id` isn't provided. Otherwise, read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only."}, 'inward': {'type': 'string', 'description': 'The description of the issue link type inward link and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.'}, 'outward': {'type': 'string', 'description': 'The description of the issue link type outward link and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.'}, 'self': {'type': 'string', 'description': 'The URL of the issue link type. Read only.', 'readOnly': True}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'A list of issue link type beans.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_navigator_settings', 'resourceConfig': {'stream': 'issue_navigator_settings', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'label': {'type': 'string', 'description': 'The issue navigator column label.'}, 'value': {'type': 'string', 'description': 'The issue navigator column value.'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of an issue navigator column item.', 'x-infer-schema': True}, 'key': ['/value']}, {'recommendedName': 'issue_notification_schemes', 'resourceConfig': {'stream': 'issue_notification_schemes', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'expand': {'type': 'string', 'description': 'Expand options that include additional notification scheme details in the response.'}, 'id': {'type': 'integer', 'description': 'The ID of the notification scheme.'}, 'self': {'type': 'string'}, 'name': {'type': 'string', 'description': 'The name of the notification scheme.'}, 'description': {'type': 'string', 'description': 'The description of the notification scheme.'}, 'notificationSchemeEvents': {'type': ['array', 'null'], 'description': 'The notification events and associated recipients.', 'items': {'type': 'object', 'properties': {'event': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the event. The event can be a [Jira system event](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-eventsEvents) or a [custom event](https://confluence.atlassian.com/x/AIlKLg).'}, 'name': {'type': 'string', 'description': 'The name of the event.'}, 'description': {'type': 'string', 'description': 'The description of the event.'}}}, 'notifications': {'type': 'array', 'items': {'type': 'object', 'properties': {'expand': {'type': 'string', 'description': 'Expand options that include additional event notification details in the response.'}, 'id': {'type': 'integer', 'description': 'The ID of the notification.'}, 'notificationType': {'type': 'string', 'description': 'Identifies the recipients of the notification.', 'enum': ['CurrentAssignee', 'Reporter', 'CurrentUser', 'ProjectLead', 'ComponentLead', 'User', 'Group', 'ProjectRole', 'EmailAddress', 'AllWatchers', 'UserCustomField', 'GroupCustomField']}, 'parameter': {'type': 'string', 'description': 'The value of the `notificationType`:\n\n *  `User` The `parameter` is the user account ID.\n *  `Group` The `parameter` is the group name.\n *  `ProjectRole` The `parameter` is the project role ID.\n *  `UserCustomField` The `parameter` is the ID of the custom field.\n *  `GroupCustomField` The `parameter` is the ID of the custom field.'}, 'group': {'description': 'The specified group.', 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}, 'field': {'description': 'The custom user or group field.', 'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The ID of the field.'}, 'key': {'type': 'string', 'description': 'The key of the field.'}, 'name': {'type': 'string', 'description': 'The name of the field.'}, 'custom': {'type': 'boolean', 'description': 'Whether the field is a custom field.'}, 'orderable': {'type': 'boolean', 'description': 'Whether the content of the field can be used to order lists.'}, 'navigable': {'type': 'boolean', 'description': 'Whether the field can be used as a column on the issue navigator.'}, 'searchable': {'type': 'boolean', 'description': 'Whether the content of the field can be searched.'}, 'clauseNames': {'uniqueItems': True, 'type': 'array', 'description': 'The names that can be used to reference the field in an advanced search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ).', 'items': {'type': 'string'}}, 'scope': {'description': 'The scope of the field.', 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'readOnly': True, 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The description of the project category.', 'readOnly': True}}}}}}}, 'schema': {'description': 'The data schema for the field.', 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The data type of the field.', 'readOnly': True}, 'items': {'type': 'string', 'description': 'When the data type is an array, the name of the field items within the array.', 'readOnly': True}, 'system': {'type': 'string', 'description': 'If the field is a system field, the name of the field.', 'readOnly': True}, 'custom': {'type': 'string', 'description': 'If the field is a custom field, the URI of the field.', 'readOnly': True}, 'customId': {'type': 'integer', 'description': 'If the field is a custom field, the custom ID of the field.', 'readOnly': True}, 'configuration': {'type': 'object', 'additionalProperties': True, 'description': 'If the field is a custom field, the configuration of the field.', 'readOnly': True}}}}}, 'emailAddress': {'type': 'string', 'description': 'The email address.'}, 'projectRole': {'description': 'The specified project role.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL the project role details.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project role.'}, 'id': {'type': 'integer', 'description': 'The ID of the project role.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the project role.', 'readOnly': True}, 'actors': {'type': 'array', 'description': 'The list of users who act in this role.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the role actor.', 'readOnly': True}, 'displayName': {'type': 'string', 'description': "The display name of the role actor. For users, depending on the userâ€™s privacy setting, this may return an alternative value for the user's name.", 'readOnly': True}, 'type': {'type': 'string', 'description': 'The type of role actor.', 'readOnly': True, 'enum': ['atlassian-group-role-actor', 'atlassian-user-role-actor']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.', 'readOnly': True}, 'avatarUrl': {'type': 'string', 'description': 'The avatar of the role actor.', 'readOnly': True}, 'actorUser': {'readOnly': True, 'type': 'object', 'properties': {'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.', 'readOnly': True}}}, 'actorGroup': {'readOnly': True, 'type': 'object', 'properties': {'displayName': {'type': 'string', 'description': 'The display name of the group.'}, 'name': {'type': 'string', 'description': 'The name of the group'}}}}}}, 'scope': {'description': 'The scope of the role. Indicated for roles associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).', 'readOnly': True, 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'readOnly': True, 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The description of the project category.', 'readOnly': True}}}}}}}, 'translatedName': {'type': 'string', 'description': 'The translated name of the project role.'}, 'currentUserRole': {'type': 'boolean', 'description': 'Whether the calling user is part of this role.'}, 'admin': {'type': 'boolean', 'description': 'Whether this role is the admin role for the project.', 'readOnly': True}, 'roleConfigurable': {'type': 'boolean', 'description': 'Whether the roles are configurable for this project.', 'readOnly': True}, 'default': {'type': 'boolean', 'description': 'Whether this role is the default role for the project', 'readOnly': True}}}, 'user': {'description': 'The specified user.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.', 'readOnly': True}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy settings, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy settings, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy settings, this may be returned as null.", 'readOnly': True}, 'accountType': {'type': 'string', 'description': "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)", 'readOnly': True}}}}}}}}}, 'scope': {'description': 'The scope of the notification scheme.', 'type': ['object', 'null'], 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'readOnly': True, 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The description of the project category.', 'readOnly': True}}}}}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details about a notification scheme.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_priorities', 'resourceConfig': {'stream': 'issue_priorities', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the issue priority.'}, 'statusColor': {'type': 'string', 'description': 'The color used to indicate the issue priority.'}, 'description': {'type': 'string', 'description': 'The description of the issue priority.'}, 'iconUrl': {'type': 'string', 'description': 'The URL of the icon for the issue priority.'}, 'name': {'type': 'string', 'description': 'The name of the issue priority.'}, 'id': {'type': 'string', 'description': 'The ID of the issue priority.'}, 'isDefault': {'type': ['null', 'boolean']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'An issue priority.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_properties', 'resourceConfig': {'stream': 'issue_properties', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the property. Required on create and update.'}, 'issueId': {'type': ['null', 'string'], 'description': 'Id of the related issue.', 'readOnly': True}, 'value': {'description': 'The value of the property. Required on create and update.'}, 'isdefault': {'type': ['null', 'boolean']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'description': 'An entity property, for more information see [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).', 'x-infer-schema': True}, 'key': ['/key']}, {'recommendedName': 'issue_remote_links', 'resourceConfig': {'stream': 'issue_remote_links', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the link.'}, 'issueId': {'type': ['null', 'string'], 'description': 'Id of the related issue.'}, 'self': {'type': 'string', 'description': 'The URL of the link.'}, 'globalId': {'type': 'string', 'description': 'The global ID of the link, such as the ID of the item on the remote system.'}, 'application': {'description': 'Details of the remote application the linked item is in.', 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The name-spaced type of the application, used by registered rendering apps.'}, 'name': {'type': 'string', 'description': 'The name of the application. Used in conjunction with the (remote) object icon title to display a tooltip for the link\'s icon. The tooltip takes the format "\\[application name\\] icon title". Blank items are excluded from the tooltip title. If both items are blank, the icon tooltop displays as "Web Link". Grouping and sorting of links may place links without an application name last.'}}}, 'relationship': {'type': 'string', 'description': 'Description of the relationship between the issue and the linked item.'}, 'object': {'description': 'Details of the item linked to.', 'type': 'object', 'properties': {'url': {'type': 'string', 'description': 'The URL of the item.'}, 'title': {'type': 'string', 'description': 'The title of the item.'}, 'summary': {'type': 'string', 'description': 'The summary details of the item.'}, 'icon': {'description': 'Details of the icon for the item. If no icon is defined, the default link icon is used in Jira.', 'type': 'object', 'properties': {'url16x16': {'type': 'string', 'description': 'The URL of an icon that displays at 16x16 pixel in Jira.'}, 'title': {'type': 'string', 'description': 'The title of the icon. This is used as follows:\n\n *  For a status icon it is used as a tooltip on the icon. If not set, the status icon doesn\'t display a tooltip in Jira.\n *  For the remote object icon it is used in conjunction with the application name to display a tooltip for the link\'s icon. The tooltip takes the format "\\[application name\\] icon title". Blank itemsare excluded from the tooltip title. If both items are blank, the icon tooltop displays as "Web Link".'}, 'link': {'type': 'string', 'description': 'The URL of the tooltip, used only for a status icon. If not set, the status icon in Jira is not clickable.'}}}, 'status': {'description': 'The status of the item.', 'type': 'object', 'properties': {'resolved': {'type': 'boolean', 'description': 'Whether the item is resolved. If set to "true", the link to the issue is displayed in a strikethrough font, otherwise the link displays in normal font.'}, 'icon': {'description': 'Details of the icon representing the status. If not provided, no status icon displays in Jira.', 'type': 'object', 'properties': {'url16x16': {'type': 'string', 'description': 'The URL of an icon that displays at 16x16 pixel in Jira.'}, 'title': {'type': 'string', 'description': 'The title of the icon. This is used as follows:\n\n *  For a status icon it is used as a tooltip on the icon. If not set, the status icon doesn\'t display a tooltip in Jira.\n *  For the remote object icon it is used in conjunction with the application name to display a tooltip for the link\'s icon. The tooltip takes the format "\\[application name\\] icon title". Blank itemsare excluded from the tooltip title. If both items are blank, the icon tooltop displays as "Web Link".'}, 'link': {'type': 'string', 'description': 'The URL of the tooltip, used only for a status icon. If not set, the status icon in Jira is not clickable.'}}}}}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of an issue remote link.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_resolutions', 'resourceConfig': {'stream': 'issue_resolutions', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the issue resolution.'}, 'id': {'type': 'string', 'description': 'The ID of the issue resolution.'}, 'description': {'type': 'string', 'description': 'The description of the issue resolution.'}, 'name': {'type': 'string', 'description': 'The name of the issue resolution.'}, 'isDefault': {'type': ['null', 'boolean']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of an issue resolution.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_security_schemes', 'resourceConfig': {'stream': 'issue_security_schemes', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the issue security scheme.', 'readOnly': True}, 'id': {'type': 'integer', 'description': 'The ID of the issue security scheme.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the issue security scheme.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the issue security scheme.', 'readOnly': True}, 'defaultSecurityLevelId': {'type': 'integer', 'description': 'The ID of the default security level.', 'readOnly': True}, 'levels': {'type': 'array', 'items': {'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the issue level security item.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the issue level security item.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the issue level security item.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the issue level security item.', 'readOnly': True}}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'List of security schemes.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_transitions', 'resourceConfig': {'stream': 'issue_transitions', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'https://json-schema.org/draft-07/schema#', 'title': 'Issue Transitions', 'type': 'object', 'properties': {'fields': {'type': ['null', 'string']}, 'hasScreen': {'type': ['null', 'boolean']}, 'id': {'type': ['null', 'string']}, 'issueId': {'type': ['null', 'string']}, 'isAvailable': {'type': ['null', 'boolean']}, 'isConditional': {'type': ['null', 'boolean']}, 'isGlobal': {'type': ['null', 'boolean']}, 'isInitial': {'type': ['null', 'boolean']}, 'isLooped': {'type': ['null', 'boolean']}, 'name': {'type': ['null', 'string']}, 'to': {'type': ['null', 'object'], 'properties': {'description': {'type': ['null', 'string']}, 'iconUrl': {'type': ['null', 'string']}, 'id': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}, 'statusCategory': {'type': ['null', 'object'], 'properties': {'colorName': {'type': ['null', 'string']}, 'id': {'type': ['null', 'integer']}, 'key': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}}}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'x-infer-schema': True}, 'key': ['/issueId', '/id']}, {'recommendedName': 'issue_type_schemes', 'resourceConfig': {'stream': 'issue_type_schemes', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The ID of the issue type scheme.'}, 'name': {'type': 'string', 'description': 'The name of the issue type scheme.'}, 'description': {'type': 'string', 'description': 'The description of the issue type scheme.'}, 'defaultIssueTypeId': {'type': 'string', 'description': 'The ID of the default issue type of the issue type scheme.'}, 'isDefault': {'type': 'boolean', 'description': 'Whether the issue type scheme is the default.'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of an issue type scheme.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_types', 'resourceConfig': {'stream': 'issue_types', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'https://json-schema.org/draft-07/schema#', 'type': ['null', 'object'], 'description': 'Details about an issue type.', 'properties': {'avatarId': {'type': ['null', 'integer'], 'description': "The ID of the issue type's avatar.", 'readOnly': True}, 'description': {'type': ['null', 'string'], 'description': 'The description of the issue type.', 'readOnly': True}, 'entityId': {'type': ['null', 'string'], 'description': 'Unique ID for next-gen projects.', 'readOnly': True}, 'hierarchyLevel': {'type': ['null', 'integer'], 'description': 'Hierarchy level of the issue type.', 'readOnly': True}, 'iconUrl': {'type': ['null', 'string'], 'description': "The URL of the issue type's avatar.", 'readOnly': True}, 'id': {'type': ['null', 'string'], 'description': 'The ID of the issue type.', 'readOnly': True}, 'name': {'type': ['null', 'string'], 'description': 'The name of the issue type.', 'readOnly': True}, 'self': {'type': ['null', 'string'], 'description': 'The URL of these issue type details.', 'readOnly': True}, 'subtask': {'type': ['null', 'boolean'], 'description': 'The URL of these issue type details.', 'readOnly': True}, 'scope': {'description': 'Details of the next-gen projects the issue type is available in.', 'readOnly': True, 'type': ['null', 'object'], 'properties': {'type': {'type': ['null', 'string'], 'description': 'The type of scope.', 'readOnly': True}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': ['null', 'object'], 'properties': {'self': {'type': ['null', 'string'], 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': ['null', 'string'], 'description': 'The ID of the project.'}, 'key': {'type': ['null', 'string'], 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': ['null', 'string'], 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': ['null', 'string'], 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': ['null', 'object'], 'properties': {'16x16': {'type': ['null', 'string'], 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': ['null', 'string'], 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': ['null', 'string'], 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': ['null', 'string'], 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': ['null', 'object'], 'properties': {'self': {'type': ['null', 'string'], 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': ['null', 'string'], 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': ['null', 'string'], 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': ['null', 'string'], 'description': 'The description of the project category.', 'readOnly': True}}}}}}}, 'untranslatedName': {'type': ['null', 'string']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_type_screen_schemes', 'resourceConfig': {'stream': 'issue_type_screen_schemes', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The ID of the issue type screen scheme.'}, 'name': {'type': 'string', 'description': 'The name of the issue type screen scheme.'}, 'description': {'type': 'string', 'description': 'The description of the issue type screen scheme.'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of an issue type screen scheme.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'issue_votes', 'resourceConfig': {'stream': 'issue_votes', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of these issue vote details.', 'readOnly': True}, 'issueId': {'type': ['null', 'string'], 'description': 'Id of the related issue.', 'readOnly': True}, 'votes': {'type': 'integer', 'description': 'The number of votes on the issue.', 'readOnly': True}, 'hasVoted': {'type': 'boolean', 'description': 'Whether the user making this request has voted on the issue.', 'readOnly': True}, 'voters': {'type': 'array', 'description': "List of the users who have voted on this issue. An empty list is returned when the calling user doesn't have the *View voters and watchers* project permission.", 'readOnly': True, 'items': {'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'The details of votes on an issue.', 'x-infer-schema': True}, 'key': ['/self']}, {'recommendedName': 'issue_watchers', 'resourceConfig': {'stream': 'issue_watchers', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of these issue watcher details.', 'readOnly': True}, 'issueId': {'type': ['null', 'string'], 'description': 'Id of the related issue.'}, 'isWatching': {'type': 'boolean', 'description': 'Whether the calling user is watching this issue.', 'readOnly': True}, 'watchCount': {'type': 'integer', 'description': 'The number of users watching this issue.', 'readOnly': True}, 'watchers': {'type': 'array', 'description': 'Details of the users watching this issue.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.', 'readOnly': True}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy settings, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy settings, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy settings, this may be returned as null.", 'readOnly': True}, 'accountType': {'type': 'string', 'description': "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)", 'readOnly': True}}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'The details of watchers on an issue.', 'x-infer-schema': True}, 'key': ['/self']}, {'recommendedName': 'issue_worklogs', 'resourceConfig': {'stream': 'issue_worklogs', 'syncMode': 'incremental', 'cursorField': ['updated']}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the worklog item.', 'readOnly': True}, 'author': {'description': 'Details of the user who created the worklog.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.', 'readOnly': True}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy settings, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy settings, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy settings, this may be returned as null.", 'readOnly': True}, 'accountType': {'type': 'string', 'description': "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)", 'readOnly': True}}}, 'updateAuthor': {'description': 'Details of the user who last updated the worklog.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.', 'readOnly': True}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy settings, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy settings, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy settings, this may be returned as null.", 'readOnly': True}, 'accountType': {'type': 'string', 'description': "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)", 'readOnly': True}}}, 'comment': {'type': 'object', 'description': 'A comment about the worklog in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/). Optional when creating or updating a worklog.'}, 'created': {'type': 'string', 'description': 'The datetime on which the worklog was created.', 'format': 'date-time', 'readOnly': True}, 'updated': {'type': 'string', 'description': 'The datetime on which the worklog was last updated.', 'format': 'date-time', 'readOnly': True}, 'visibility': {'description': 'Details about any restrictions in the visibility of the worklog. Optional when creating or updating a worklog.', 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'Whether visibility of this item is restricted to a group or role.', 'enum': ['group', 'role']}, 'value': {'type': 'string', 'description': 'The name of the group or role to which visibility of this item is restricted.'}}}, 'started': {'type': 'string', 'description': 'The datetime on which the worklog effort was started. Required when creating a worklog. Optional when updating a worklog.', 'format': 'date-time'}, 'timeSpent': {'type': 'string', 'description': "The time spent working on the issue as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). Required when creating a worklog if `timeSpentSeconds` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpentSecond` is provided."}, 'timeSpentSeconds': {'type': 'integer', 'description': "The time in seconds spent working on the issue. Required when creating a worklog if `timeSpent` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpent` is provided."}, 'id': {'type': 'string', 'description': 'The ID of the worklog record.', 'readOnly': True}, 'issueId': {'type': 'string', 'description': 'The ID of the issue this worklog is for.', 'readOnly': True}, 'properties': {'type': 'array', 'description': 'Details of properties for the worklog. Optional when creating or updating a worklog.', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the property. Required on create and update.'}, 'value': {'description': 'The value of the property. Required on create and update.'}}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of a worklog.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'jira_settings', 'resourceConfig': {'stream': 'jira_settings', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The ID of the application property. The ID and key are the same.'}, 'key': {'type': 'string', 'description': 'The key of the application property. The ID and key are the same.'}, 'value': {'type': 'string', 'description': 'The new value.'}, 'name': {'type': 'string', 'description': 'The name of the application property.'}, 'desc': {'type': 'string', 'description': 'The description of the application property.'}, 'type': {'type': 'string', 'description': 'The data type of the application property.'}, 'defaultValue': {'type': 'string', 'description': 'The default value of the application property.'}, 'example': {'type': 'string'}, 'allowedValues': {'type': 'array', 'description': 'The allowed values, if applicable.', 'items': {'type': 'string'}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details of an application property.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'labels', 'resourceConfig': {'stream': 'labels', 'syncMode': 'full_refresh'}, 'documentSchema': {'type': ['object', 'null'], 'properties': {'label': {'type': ['string', 'null']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'x-infer-schema': True}, 'key': ['/label']}, {'recommendedName': 'permissions', 'resourceConfig': {'stream': 'permissions', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'key': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'type': {'type': ['null', 'string']}, 'description': {'type': ['null', 'string']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details about permissions.', 'x-infer-schema': True}, 'key': ['/key']}, {'recommendedName': 'permission_schemes', 'resourceConfig': {'stream': 'permission_schemes', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'expand': {'type': 'string', 'description': 'The expand options available for the permission scheme.', 'readOnly': True}, 'id': {'type': 'integer', 'description': 'The ID of the permission scheme.', 'readOnly': True}, 'self': {'type': 'string', 'description': 'The URL of the permission scheme.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the permission scheme. Must be unique.'}, 'description': {'type': 'string', 'description': 'A description for the permission scheme.'}, 'scope': {'description': 'The scope of the permission scheme.', 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'readOnly': True, 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The description of the project category.', 'readOnly': True}}}}}}}, 'permissions': {'type': 'array', 'description': 'The permission scheme to create or update. See [About permission schemes and grants](#about-permission-schemes-and-grants) for more information.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the permission granted details.', 'readOnly': True}, 'self': {'type': 'string', 'description': 'The URL of the permission granted details.', 'readOnly': True}, 'holder': {'description': 'The user or group being granted the permission. It consists of a `type` and a type-dependent `parameter`. See [Holder object](#holder-object) in *Get all permission schemes* for more information.', 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of permission holder.'}, 'parameter': {'type': 'string', 'description': 'The identifier of permission holder.'}, 'expand': {'type': 'string', 'description': 'Expand options that include additional permission holder details in the response.', 'readOnly': True}, 'value': {'type': ['null', 'string']}}}, 'permission': {'type': 'string', 'description': 'The permission to grant. This permission can be one of the built-in permissions or a custom permission added by an app. See [Built-in permissions](#built-in-permissions) in *Get all permission schemes* for more information about the built-in permissions. See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/) and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/) module documentation for more information about custom permissions.'}}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'List of all permission schemes.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'projects', 'resourceConfig': {'stream': 'projects', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'expand': {'type': 'string', 'description': 'Expand options that include additional project details in the response.', 'readOnly': True, 'xml': {'attribute': True}}, 'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'A brief description of the project.', 'readOnly': True}, 'lead': {'description': 'The username of the project lead.', 'readOnly': True}, 'components': {'type': 'array', 'description': 'List of the components contained in the project.', 'readOnly': True}, 'issueTypes': {'type': 'array', 'description': 'List of the issue types available in the project.', 'readOnly': True}, 'url': {'type': 'string', 'description': 'A link to information about this project, such as project documentation.', 'readOnly': True}, 'email': {'type': 'string', 'description': 'An email address associated with the project.'}, 'assigneeType': {'type': 'string', 'description': 'The default assignee when creating issues for this project.', 'readOnly': True, 'enum': ['PROJECT_LEAD', 'UNASSIGNED']}, 'versions': {'type': 'array', 'description': 'The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'roles': {'type': 'object', 'additionalProperties': True, 'description': 'The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether the project is simplified.', 'readOnly': True}, 'style': {'type': 'string', 'description': 'The type of the project.', 'readOnly': True, 'enum': ['classic', 'next-gen']}, 'favourite': {'type': 'boolean', 'description': 'Whether the project is selected as a favorite.'}, 'isPrivate': {'type': 'boolean', 'description': 'Whether the project is private.', 'readOnly': True}, 'issueTypeHierarchy': {'description': 'The issue type hierarchy for the project', 'readOnly': True}, 'permissions': {'description': 'User permissions on the project', 'readOnly': True}, 'properties': {'type': 'object', 'additionalProperties': True, 'description': 'Map of project properties', 'readOnly': True}, 'uuid': {'type': 'string', 'description': 'Unique ID for next-gen projects.', 'readOnly': True}, 'insight': {'description': 'Insights about the project.', 'readOnly': True}, 'deleted': {'type': 'boolean', 'description': 'Whether the project is marked as deleted.', 'readOnly': True}, 'retentionTillDate': {'type': 'string', 'description': 'The date when the project is deleted permanently.', 'format': 'date-time', 'readOnly': True}, 'deletedDate': {'type': 'string', 'description': 'The date when the project was marked as deleted.', 'format': 'date-time', 'readOnly': True}, 'deletedBy': {'description': 'The user who marked the project as deleted.', 'readOnly': True}, 'archived': {'type': 'boolean', 'description': 'Whether the project is archived.', 'readOnly': True}, 'archivedDate': {'type': 'string', 'description': 'The date when the project was archived.', 'format': 'date-time', 'readOnly': True}, 'archivedBy': {'description': 'The user who archived the project.', 'readOnly': True}, 'entityId': {'type': ['null', 'string']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details about a project.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'project_roles', 'resourceConfig': {'stream': 'project_roles', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'https://json-schema.org/draft-07/schema#', 'type': 'object', 'description': 'Project Roles', 'properties': {'actors': {'type': ['null', 'array'], 'items': {'type': ['null', 'object'], 'properties': {'actorGroup': {'type': ['null', 'object'], 'properties': {'displayName': {'type': ['null', 'string']}, 'groupId': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}}}, 'actorUser': {'type': ['null', 'object'], 'properties': {'accountId': {'type': ['null', 'string']}}}, 'avatarUrl': {'type': ['null', 'string']}, 'displayName': {'type': ['null', 'string']}, 'id': {'type': ['null', 'integer']}, 'name': {'type': ['null', 'string']}, 'type': {'type': ['null', 'string']}}}}, 'admin': {'type': ['null', 'boolean']}, 'currentUserRole': {'type': ['null', 'boolean']}, 'default': {'type': ['null', 'boolean']}, 'description': {'type': ['null', 'string']}, 'id': {'type': ['null', 'integer']}, 'name': {'type': ['null', 'string']}, 'roleConfigurable': {'type': ['null', 'boolean']}, 'scope': {'description': 'Details of the next-gen projects the issue type is available in.', 'readOnly': True, 'type': 'object', 'properties': {'type': {'type': ['null', 'string'], 'description': 'The type of scope.', 'readOnly': True}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': ['null', 'string'], 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': ['null', 'string'], 'description': 'The ID of the project.'}, 'key': {'type': ['null', 'string'], 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': ['null', 'string'], 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': ['null', 'string'], 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True}, 'simplified': {'type': ['null', 'boolean'], 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': ['null', 'string'], 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': ['null', 'string'], 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': ['null', 'string'], 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': ['null', 'string'], 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': ['null', 'string'], 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': ['null', 'string'], 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': ['null', 'string'], 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': ['null', 'string'], 'description': 'The description of the project category.', 'readOnly': True}}}}}}}, 'self': {'type': ['null', 'string']}, 'translatedName': {'type': ['null', 'string']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'project_avatars', 'resourceConfig': {'stream': 'project_avatars', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The ID of the avatar.'}, 'projectId': {'type': ['null', 'string'], 'description': 'Id of the related project.'}, 'owner': {'type': 'string', 'description': 'The owner of the avatar. For a system avatar the owner is null (and nothing is returned). For non-system avatars this is the appropriate identifier, such as the ID for a project or the account ID for a user.', 'readOnly': True}, 'isSystemAvatar': {'type': 'boolean', 'description': 'Whether the avatar is a system avatar.', 'readOnly': True}, 'isSelected': {'type': 'boolean', 'description': "Whether the avatar is used in Jira. For example, shown as a project's avatar.", 'readOnly': True}, 'isDeletable': {'type': 'boolean', 'description': 'Whether the avatar can be deleted.', 'readOnly': True}, 'fileName': {'type': 'string', 'description': 'The file name of the avatar icon. Returned for system avatars.', 'readOnly': True}, 'urls': {'type': 'object', 'additionalProperties': True, 'description': 'The list of avatar icon URLs.', 'readOnly': True}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'List of project avatars.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'project_categories', 'resourceConfig': {'stream': 'project_categories', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project category. Required on create, optional on update.'}, 'description': {'type': 'string', 'description': 'The description of the project category. Required on create, optional on update.'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'A project category.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'project_components', 'resourceConfig': {'stream': 'project_components', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the component.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The unique identifier for the component.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.'}, 'description': {'type': 'string', 'description': 'The description for the component. Optional when creating or updating a component.'}, 'lead': {'description': "The user details for the component's lead user.", 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'leadUserName': {'type': ['string', 'null'], 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'leadAccountId': {'maxLength': 128, 'type': ['string', 'null'], 'description': "The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.", 'writeOnly': True}, 'assigneeType': {'type': 'string', 'description': 'The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:\n\n *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.\n *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.\n *  `UNASSIGNED` an assignee is not set for issues created with this component.\n *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.\n\nDefault value: `PROJECT_DEFAULT`.  \nOptional when creating or updating a component.', 'enum': ['PROJECT_DEFAULT', 'COMPONENT_LEAD', 'PROJECT_LEAD', 'UNASSIGNED']}, 'assignee': {'description': 'The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': ['string', 'null'], 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': ['object', 'null'], 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'realAssigneeType': {'type': 'string', 'description': 'The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:\n\n *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.\n *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.\n *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.\n *  `PROJECT_DEFAULT` when none of the preceding cases are true.', 'readOnly': True, 'enum': ['PROJECT_DEFAULT', 'COMPONENT_LEAD', 'PROJECT_LEAD', 'UNASSIGNED']}, 'realAssignee': {'description': 'The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.', 'readOnly': True, 'type': 'object'}, 'isAssigneeTypeValid': {'type': 'boolean', 'description': 'Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.', 'readOnly': True}, 'project': {'type': 'string', 'description': "The key of the project the component is assigned to. Required when creating a component. Can't be updated."}, 'projectId': {'type': 'integer', 'description': 'The ID of the project the component is assigned to.', 'readOnly': True}, 'componentBean': {'type': ['null', 'object']}, 'issueCount': {'type': ['null', 'integer']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details about a project component.', 'xml': {'name': 'component'}, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'project_email', 'resourceConfig': {'stream': 'project_email', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'projectId': {'type': 'string'}, 'emailAddress': {'type': 'string', 'description': 'The email address.'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': "A project's sender email address.", 'x-infer-schema': True}, 'key': ['/projectId']}, {'recommendedName': 'project_permission_schemes', 'resourceConfig': {'stream': 'project_permission_schemes', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': ['null', 'string'], 'description': 'The URL of the issue level security item.'}, 'projectId': {'type': ['null', 'string'], 'description': 'Id of the related project.'}, 'id': {'type': ['null', 'string'], 'description': 'The ID of the issue level security item.'}, 'description': {'type': ['null', 'string'], 'description': 'The description of the issue level security item.'}, 'name': {'type': ['null', 'string'], 'description': 'The name of the issue level security item.'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details about a security scheme.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'project_types', 'resourceConfig': {'stream': 'project_types', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the project type.', 'readOnly': True}, 'formattedKey': {'type': 'string', 'description': 'The formatted key of the project type.', 'readOnly': True}, 'descriptionI18nKey': {'type': 'string', 'description': "The key of the project type's description.", 'readOnly': True}, 'icon': {'type': 'string', 'description': 'The icon of the project type.', 'readOnly': True}, 'color': {'type': 'string', 'description': 'The color of the project type.', 'readOnly': True}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details about a project type.', 'x-infer-schema': True}, 'key': ['/key']}, {'recommendedName': 'project_versions', 'resourceConfig': {'stream': 'project_versions', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'expand': {'type': ['string', 'null'], 'description': 'Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.\n\nOptional for create and update.', 'xml': {'attribute': True}}, 'self': {'type': 'string', 'description': 'The URL of the version.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the version.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the version. Optional when creating or updating a version.'}, 'name': {'type': 'string', 'description': 'The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.'}, 'archived': {'type': 'boolean', 'description': 'Indicates that the version is archived. Optional when creating or updating a version.'}, 'released': {'type': 'boolean', 'description': 'Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.'}, 'startDate': {'type': 'string', 'description': 'The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.', 'format': 'date'}, 'releaseDate': {'type': 'string', 'description': 'The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.', 'format': 'date'}, 'overdue': {'type': 'boolean', 'description': 'Indicates that the version is overdue.', 'readOnly': True}, 'userStartDate': {'type': 'string', 'description': "The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.", 'readOnly': True}, 'userReleaseDate': {'type': 'string', 'description': "The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.", 'readOnly': True}, 'project': {'type': 'string', 'description': 'Deprecated. Use `projectId`.'}, 'projectId': {'type': 'integer', 'description': 'The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.'}, 'moveUnfixedIssuesTo': {'type': 'string', 'description': 'The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.'}, 'operations': {'type': 'array', 'description': 'If the expand option `operations` is used, returns the list of operations available for this version.', 'readOnly': True, 'items': {'type': 'object', 'properties': {'id': {'type': 'string'}, 'styleClass': {'type': 'string'}, 'iconClass': {'type': 'string'}, 'label': {'type': 'string'}, 'title': {'type': 'string'}, 'href': {'type': 'string'}, 'weight': {'type': 'integer'}}}}, 'issuesStatusForFixVersion': {'description': 'If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.', 'readOnly': True, 'type': 'object', 'properties': {'unmapped': {'type': 'integer', 'description': 'Count of issues with a status other than *to do*, *in progress*, and *done*.', 'readOnly': True}, 'toDo': {'type': 'integer', 'description': 'Count of issues with status *to do*.', 'readOnly': True}, 'inProgress': {'type': 'integer', 'description': 'Count of issues with status *in progress*.', 'readOnly': True}, 'done': {'type': 'integer', 'description': 'Count of issues with status *done*.', 'readOnly': True}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'readOnly': True, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'screens', 'resourceConfig': {'stream': 'screens', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the screen.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the screen.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the screen.', 'readOnly': True}, 'scope': {'description': 'The scope of the screen.', 'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of scope.', 'readOnly': True, 'enum': ['PROJECT', 'TEMPLATE']}, 'project': {'description': 'The project the item has scope in.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project details.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project.'}, 'key': {'type': 'string', 'description': 'The key of the project.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the project.', 'readOnly': True}, 'projectTypeKey': {'type': 'string', 'description': 'The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.', 'readOnly': True, 'enum': ['software', 'service_desk', 'business']}, 'simplified': {'type': 'boolean', 'description': 'Whether or not the project is simplified.', 'readOnly': True}, 'avatarUrls': {'description': "The URLs of the project's avatars.", 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'projectCategory': {'description': 'The category the project belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the project category.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the project category.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The name of the project category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The description of the project category.', 'readOnly': True}}}}}}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'screen_tabs', 'resourceConfig': {'stream': 'screen_tabs', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'required': ['name'], 'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the screen tab.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the screen tab. The maximum length is 255 characters.'}, 'screenId': {'type': ['null', 'integer'], 'description': 'Id of the related screen.'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'A screen tab.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'screen_tab_fields', 'resourceConfig': {'stream': 'screen_tab_fields', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The ID of the screen tab field.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the screen tab field. Required on create and update. The maximum length is 255 characters.'}, 'screenId': {'type': ['null', 'integer'], 'description': 'Id of the related screen.'}, 'tabId': {'type': ['null', 'integer'], 'description': 'Id of the related tab.'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'A screen tab field.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'screen_schemes', 'resourceConfig': {'stream': 'screen_schemes', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the screen scheme.'}, 'name': {'type': 'string', 'description': 'The name of the screen scheme.'}, 'description': {'type': 'string', 'description': 'The description of the screen scheme.'}, 'screens': {'description': 'The IDs of the screens for the screen types of the screen scheme.', 'type': 'object', 'properties': {'edit': {'type': 'integer', 'description': 'The ID of the edit screen.'}, 'create': {'type': 'integer', 'description': 'The ID of the create screen.'}, 'view': {'type': 'integer', 'description': 'The ID of the view screen.'}, 'default': {'type': 'integer', 'description': 'The ID of the default screen. Required when creating a screen scheme.'}}}, 'issueTypeScreenSchemes': {'type': 'object'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'A screen scheme.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'sprints', 'resourceConfig': {'stream': 'sprints', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'integer'}, 'self': {'type': 'string'}, 'state': {'type': 'string'}, 'name': {'type': 'string'}, 'startDate': {'type': 'string', 'format': 'date-time'}, 'endDate': {'type': 'string', 'format': 'date-time'}, 'completeDate': {'type': 'string', 'format': 'date-time'}, 'originBoardId': {'type': 'integer'}, 'boardId': {'type': 'integer', 'description': 'Used to determine which board the sprint is a part of. (Not always the same as originBoardId)'}, 'goal': {'type': 'string'}, 'createdDate': {'type': ['null', 'string'], 'format': 'date-time'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'sprint_issues', 'resourceConfig': {'stream': 'sprint_issues', 'syncMode': 'incremental', 'cursorField': ['updated']}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'expand': {'type': 'string'}, 'id': {'type': 'string'}, 'self': {'type': 'string'}, 'key': {'type': 'string'}, 'fields': {'type': 'object', 'properties': {'flagged': {'type': ['null', 'boolean']}, 'sprint': {'type': ['null', 'object']}, 'closedSprints': {'type': ['null', 'object']}, 'description': {'type': ['null', 'string']}, 'project': {'type': ['null', 'object']}, 'comment': {'type': ['null', 'array'], 'items': {'type': 'object'}}, 'epic': {'type': ['null', 'object']}, 'worklog': {'type': ['null', 'array'], 'items': {'type': 'object'}}, 'created': {'type': ['null', 'string'], 'format': 'date-time'}, 'updated': {'type': ['null', 'string'], 'format': 'date-time'}, 'timetracking': {'type': ['null', 'object']}, 'status': {'type': ['null', 'object'], 'properties': {'description': {'type': ['null', 'string']}, 'iconUrl': {'type': ['null', 'string']}, 'id': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}, 'statusCategory': {'type': ['null', 'object'], 'properties': {'colorName': {'type': ['null', 'string']}, 'id': {'type': ['null', 'integer']}, 'key': {'type': ['null', 'string']}, 'name': {'type': ['null', 'string']}, 'self': {'type': ['null', 'string']}}}}}}}, 'issueId': {'type': 'string'}, 'sprintId': {'type': 'integer'}, 'created': {'type': ['string', 'null'], 'format': 'date-time', 'description': 'This field transformed from fields attr', 'readOnly': True}, 'updated': {'type': ['string', 'null'], 'format': 'date-time', 'description': 'This field transformed from fields attr', 'readOnly': True}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'time_tracking', 'resourceConfig': {'stream': 'time_tracking', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'required': ['key'], 'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key for the time tracking provider. For example, *JIRA*.'}, 'name': {'type': 'string', 'description': 'The name of the time tracking provider. For example, *JIRA provided time tracking*.'}, 'url': {'type': 'string', 'description': 'The URL of the configuration page for the time tracking provider app. For example, */example/config/url*. This property is only returned if the `adminPageKey` property is set in the module descriptor of the time tracking provider app.', 'readOnly': True}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'Details about the time tracking provider.', 'x-infer-schema': True}, 'key': ['/key']}, {'recommendedName': 'users', 'resourceConfig': {'stream': 'users', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': "A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:\n\n *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).\n *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.\n *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.", 'xml': {'name': 'user'}, 'x-infer-schema': True}, 'key': ['/accountId']}, {'recommendedName': 'users_groups_detailed', 'resourceConfig': {'stream': 'users_groups_detailed', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'groupId': {'type': ['null', 'string']}, 'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': "A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:\n\n *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).\n *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.\n *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.", 'xml': {'name': 'user'}, 'x-infer-schema': True}, 'key': ['/accountId']}, {'recommendedName': 'workflows', 'resourceConfig': {'stream': 'workflows', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'object', 'properties': {'entityId': {'type': ['null', 'string']}, 'name': {'type': 'string', 'description': 'The name of the workflow.'}}}, 'description': {'type': 'string', 'description': 'The description of the workflow.'}, 'transitions': {'type': 'array', 'description': 'The transitions of the workflow.', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The ID of the transition.'}, 'name': {'type': 'string', 'description': 'The name of the transition.'}, 'description': {'type': 'string', 'description': 'The description of the transition.'}, 'from': {'type': 'array', 'description': 'The statuses the transition can start from.', 'items': {'type': 'string', 'description': 'The statuses the transition can start from.'}}, 'to': {'type': 'string', 'description': 'The status the transition goes to.'}, 'type': {'type': 'string', 'description': 'The type of the transition.', 'enum': ['global', 'initial', 'directed']}, 'screen': {'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The ID of the screen.'}}}, 'rules': {'type': 'object', 'properties': {'conditions': {'type': 'array', 'description': 'The workflow conditions.', 'items': {'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of the transition rule.'}, 'configuration': {'description': 'The configuration of the transition rule. This is currently returned only for some of the rule types. Availability of this property is subject to change.'}}}}, 'validators': {'type': 'array', 'description': 'The workflow validators.', 'items': {'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of the transition rule.'}, 'configuration': {'description': 'The configuration of the transition rule. This is currently returned only for some of the rule types. Availability of this property is subject to change.'}}}}, 'postFunctions': {'type': 'array', 'description': 'The workflow post functions.', 'items': {'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The type of the transition rule.'}, 'configuration': {'description': 'The configuration of the transition rule. This is currently returned only for some of the rule types. Availability of this property is subject to change.'}}}}}}}}}, 'statuses': {'type': 'array', 'description': 'The statuses of the workflow.', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The ID of the issue status.'}, 'name': {'type': 'string', 'description': 'The name of the status in the workflow.'}, 'properties': {'type': 'object', 'properties': {'issueEditable': {'type': 'boolean', 'description': 'Whether issues are editable in this status.'}}}}}}, 'created': {'type': ['null', 'string'], 'format': 'date-time'}, 'updated': {'type': ['null', 'string'], 'format': 'date-time'}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'readOnly': True, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'workflow_schemes', 'resourceConfig': {'stream': 'workflow_schemes', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'The ID of the workflow scheme.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the workflow scheme. The name must be unique. The maximum length is 255 characters. Required when creating a workflow scheme.'}, 'description': {'type': 'string', 'description': 'The description of the workflow scheme.'}, 'defaultWorkflow': {'type': 'string', 'description': 'The name of the default workflow for the workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira. If `defaultWorkflow` is not specified when creating a workflow scheme, it is set to *Jira Workflow (jira)*.'}, 'issueTypeMappings': {'type': 'object', 'additionalProperties': True, 'description': 'The issue type to workflow mappings, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.'}, 'originalDefaultWorkflow': {'type': 'string', 'description': 'For draft workflow schemes, this property is the name of the default workflow for the original workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira.', 'readOnly': True}, 'originalIssueTypeMappings': {'type': 'object', 'additionalProperties': True, 'description': 'For draft workflow schemes, this property is the issue type to workflow mappings for the original workflow scheme, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.', 'readOnly': True}, 'draft': {'type': 'boolean', 'description': 'Whether the workflow scheme is a draft or not.', 'readOnly': True}, 'lastModifiedUser': {'description': 'The user that last modified the draft workflow scheme. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the user.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'accountId': {'maxLength': 128, 'type': 'string', 'description': 'The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.'}, 'accountType': {'type': 'string', 'description': 'The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk', 'readOnly': True, 'enum': ['atlassian', 'app', 'customer', 'unknown']}, 'name': {'type': 'string', 'description': 'This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'avatarUrls': {'description': 'The avatars of the user.', 'readOnly': True, 'type': 'object', 'properties': {'16x16': {'type': 'string', 'description': "The URL of the item's 16x16 pixel avatar."}, '24x24': {'type': 'string', 'description': "The URL of the item's 24x24 pixel avatar."}, '32x32': {'type': 'string', 'description': "The URL of the item's 32x32 pixel avatar."}, '48x48': {'type': 'string', 'description': "The URL of the item's 48x48 pixel avatar."}}}, 'displayName': {'type': 'string', 'description': 'The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.', 'readOnly': True}, 'active': {'type': 'boolean', 'description': 'Whether the user is active.', 'readOnly': True}, 'timeZone': {'type': 'string', 'description': "The time zone specified in the user's profile. Depending on the userâ€™s privacy setting, this may be returned as null.", 'readOnly': True}, 'locale': {'type': 'string', 'description': 'The locale of the user. Depending on the userâ€™s privacy setting, this may be returned as null.', 'readOnly': True}, 'groups': {'description': 'The groups that the user belongs to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of group.'}, 'self': {'type': 'string', 'description': 'The URL for these group details.', 'readOnly': True}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'applicationRoles': {'description': 'The application roles the user is assigned to.', 'readOnly': True, 'type': 'object', 'properties': {'size': {'type': 'integer', 'xml': {'attribute': True}}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'The key of the application role.'}, 'groups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups associated with the application role.', 'items': {'type': 'string'}}, 'name': {'type': 'string', 'description': 'The display name of the application role.'}, 'defaultGroups': {'uniqueItems': True, 'type': 'array', 'description': 'The groups that are granted default access for this application role.', 'items': {'type': 'string'}}, 'selectedByDefault': {'type': 'boolean', 'description': 'Determines whether this application role should be selected by default on user creation.'}, 'defined': {'type': 'boolean', 'description': 'Deprecated.'}, 'numberOfSeats': {'type': 'integer', 'description': 'The maximum count of users on your license.'}, 'remainingSeats': {'type': 'integer', 'description': 'The count of users remaining on your license.'}, 'userCount': {'type': 'integer', 'description': 'The number of users counting against your license.'}, 'userCountDescription': {'type': 'string', 'description': 'The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.'}, 'hasUnlimitedSeats': {'type': 'boolean'}, 'platform': {'type': 'boolean', 'description': 'Indicates if the application role belongs to Jira platform (`jira-core`).'}}}}, 'pagingCallback': {'type': 'object'}, 'callback': {'type': 'object'}, 'max-results': {'type': 'integer', 'xml': {'name': 'max-results', 'attribute': True}}}}, 'expand': {'type': 'string', 'description': 'Expand options that include additional user details in the response.', 'readOnly': True, 'xml': {'attribute': True}}}}, 'lastModified': {'type': 'string', 'description': 'The date-time that the draft workflow scheme was last modified. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.', 'readOnly': True}, 'self': {'type': 'string', 'readOnly': True}, 'updateDraftIfNeeded': {'type': 'boolean', 'description': 'Whether to create or update a draft workflow scheme when updating an active workflow scheme. An active workflow scheme is a workflow scheme that is used by at least one project. The following examples show how this property works:\n\n *  Update an active workflow scheme with `updateDraftIfNeeded` set to `true`: If a draft workflow scheme exists, it is updated. Otherwise, a draft workflow scheme is created.\n *  Update an active workflow scheme with `updateDraftIfNeeded` set to `false`: An error is returned, as active workflow schemes cannot be updated.\n *  Update an inactive workflow scheme with `updateDraftIfNeeded` set to `true`: The workflow scheme is updated, as inactive workflow schemes do not require drafts to update.\n\nDefaults to `false`.'}, 'issueTypes': {'type': 'object', 'description': 'The issue types available in Jira.', 'readOnly': True}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'readOnly': True, 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'workflow_statuses', 'resourceConfig': {'stream': 'workflow_statuses', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the status.', 'readOnly': True}, 'description': {'type': 'string', 'description': 'The description of the status.', 'readOnly': True}, 'iconUrl': {'type': 'string', 'description': 'The URL of the icon used to represent the status.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the status.', 'readOnly': True}, 'id': {'type': 'string', 'description': 'The ID of the status.', 'readOnly': True}, 'statusCategory': {'description': 'The category assigned to the status.', 'readOnly': True, 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the status category.', 'readOnly': True}, 'id': {'type': 'integer', 'description': 'The ID of the status category.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'The key of the status category.', 'readOnly': True}, 'colorName': {'type': 'string', 'description': 'The name of the color used to represent the status category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the status category.', 'readOnly': True}}}, 'scope': {'type': ['null', 'object']}, 'untranslatedName': {'type': ['null', 'string']}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'A status.', 'x-infer-schema': True}, 'key': ['/id']}, {'recommendedName': 'workflow_status_categories', 'resourceConfig': {'stream': 'workflow_status_categories', 'syncMode': 'full_refresh'}, 'documentSchema': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'self': {'type': 'string', 'description': 'The URL of the status category.', 'readOnly': True}, 'id': {'type': 'integer', 'description': 'The ID of the status category.', 'readOnly': True}, 'key': {'type': 'string', 'description': 'The key of the status category.', 'readOnly': True}, 'colorName': {'type': 'string', 'description': 'The name of the color used to represent the status category.', 'readOnly': True}, 'name': {'type': 'string', 'description': 'The name of the status category.', 'readOnly': True}, '_meta': {'type': 'object', 'properties': {'row_id': {'type': 'integer'}}, 'required': ['row_id']}}, 'additionalProperties': True, 'description': 'A status category.', 'x-infer-schema': True}, 'key': ['/id']}]