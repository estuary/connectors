check:
  stream_names:
  - accounts
  type: CheckStream
definitions:
  base_requester:
    authenticator:
      api_token: '{{ config["api_key"] }}'
      type: BearerAuthenticator
    type: HttpRequester
    url_base: https://api2.frontapp.com/
  streams:
    accounts:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: accounts
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: accounts
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/accounts'
        type: InlineSchemaLoader
      type: DeclarativeStream
    accounts_contacts:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: accounts_contacts
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: account_id
            stream:
              $ref: '#/definitions/streams/accounts'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: accounts/{{ stream_partition.account_id }}/contacts
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/accounts_contacts'
        type: InlineSchemaLoader
      type: DeclarativeStream
    channels:
      name: channels
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: channels
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/channels'
        type: InlineSchemaLoader
      type: DeclarativeStream
    company_tags:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: company_tags
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: teammate_id
            stream:
              $ref: '#/definitions/streams/teammates'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: company/tags
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/company_tags'
        type: InlineSchemaLoader
      type: DeclarativeStream
    contact_groups:
      name: contact_groups
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: contact_groups
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/contact_groups'
        type: InlineSchemaLoader
      type: DeclarativeStream
    contacts:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: contacts
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: contacts
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/contacts'
        type: InlineSchemaLoader
      type: DeclarativeStream
    contacts_notes:
      primary_key:
        - contact_id
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: created_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: contacts_notes
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: contact_id
            stream:
              $ref: '#/definitions/streams/contacts'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: contacts/{{ stream_partition.contact_id }}/notes
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/contacts_notes'
        type: InlineSchemaLoader
      type: DeclarativeStream
      transformations:
        - type: AddFields
          fields:
          - path: [ "contact_id" ]
            value: '{{ stream_partition[''contact_id''] }}'
    conversations:
      incremental_sync:
        cursor_datetime_formats:
        - '%ms'
        - '%s'
        cursor_field: created_at
        datetime_format: '%ms'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: conversations
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: conversations
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/conversations'
        type: InlineSchemaLoader
      type: DeclarativeStream
    conversations_drafts:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: created_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: conversations_drafts
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: conversation_id
            stream:
              $ref: '#/definitions/streams/conversations'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: conversations/{{ stream_partition.conversation_id }}/drafts
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/conversations_drafts'
        type: InlineSchemaLoader
      type: DeclarativeStream
    conversations_events:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: emitted_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: conversations_events
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: conversation_id
            stream:
              $ref: '#/definitions/streams/conversations'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: conversations/{{ stream_partition.conversation_id }}/events
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/conversations_events'
        type: InlineSchemaLoader
      type: DeclarativeStream
    conversations_followers:
      name: conversations_followers
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: conversation_id
            stream:
              $ref: '#/definitions/streams/conversations'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: conversations/{{ stream_partition.conversation_id }}/followers
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/conversations_followers'
        type: InlineSchemaLoader
      type: DeclarativeStream
    conversations_inboxes:
      name: conversations_inboxes
      primary_key:
        - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: conversation_id
            stream:
              $ref: '#/definitions/streams/conversations'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: conversations/{{ stream_partition.conversation_id }}/inboxes
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/conversations_inboxes'
        type: InlineSchemaLoader
      type: DeclarativeStream
    conversations_messages:
      incremental_sync:
        cursor_datetime_formats:
        - '%ms'
        - '%s'
        cursor_field: created_at
        datetime_format: '%ms'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: conversations_messages
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: conversation_id
            stream:
              $ref: '#/definitions/streams/conversations'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: conversations/{{ stream_partition.conversation_id }}/messages
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/conversations_messages'
        type: InlineSchemaLoader
      type: DeclarativeStream
    events:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: emitted_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: events
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: events
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/events'
        type: InlineSchemaLoader
      type: DeclarativeStream
    inboxes:
      name: inboxes
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: inboxes
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/inboxes'
        type: InlineSchemaLoader
      type: DeclarativeStream
    inboxes_channels:
      name: inboxes_channels
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: inbox_id
            stream:
              $ref: '#/definitions/streams/inboxes'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: inboxes/{{ stream_partition.inbox_id }}/channels
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/inboxes_channels'
        type: InlineSchemaLoader
      type: DeclarativeStream
    inboxes_conversations:
      incremental_sync:
        cursor_datetime_formats:
        - '%ms'
        - '%s'
        cursor_field: created_at
        datetime_format: '%ms'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: inboxes_conversations
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: inbox_id
            stream:
              $ref: '#/definitions/streams/inboxes'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: inboxes/{{ stream_partition.inbox_id }}/conversations
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/inboxes_conversations'
        type: InlineSchemaLoader
      type: DeclarativeStream
    inboxes_teammates:
      name: inboxes_teammates
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: inbox_id
            stream:
              $ref: '#/definitions/streams/inboxes'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: inboxes/{{ stream_partition.inbox_id }}/teammates
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/inboxes_teammates'
        type: InlineSchemaLoader
      type: DeclarativeStream
    knowledge_bases:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: knowledge_bases
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: knowledge_bases
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/knowledge_bases'
        type: InlineSchemaLoader
      type: DeclarativeStream
    knowledge_bases_articles:
      primary_key:
      - id
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: knowledge_bases_articles
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: knowledge_base_id
            stream:
              $ref: '#/definitions/streams/knowledge_bases'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: knowledge_bases/{{ stream_partition.knowledge_base_id }}/articles
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/knowledge_bases_articles'
        type: InlineSchemaLoader
      type: DeclarativeStream
    knowledge_bases_categories:
      primary_key:
      - id
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: knowledge_bases_categories
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: knowledge_base_id
            stream:
              $ref: '#/definitions/streams/knowledge_bases'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: knowledge_bases/{{ stream_partition.knowledge_base_id }}/categories
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/knowledge_bases_categories'
        type: InlineSchemaLoader
      type: DeclarativeStream
    links:
      name: links
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: links
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/links'
        type: InlineSchemaLoader
      type: DeclarativeStream
    message_template_folders:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: message_template_folders
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: message_template_folders
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/message_template_folders'
        type: InlineSchemaLoader
      type: DeclarativeStream
    message_templates:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: message_templates
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: message_templates
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/message_templates'
        type: InlineSchemaLoader
      type: DeclarativeStream
    tags:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: tags
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: tags
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/tags'
        type: InlineSchemaLoader
      type: DeclarativeStream
    tags_children:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: tags_children
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: tag_id
            stream:
              $ref: '#/definitions/streams/tags'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: tags/{{ stream_partition.tag_id }}/children
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/tags_children'
        type: InlineSchemaLoader
      type: DeclarativeStream
    teammates:
      name: teammates
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: teammates
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/teammates'
        type: InlineSchemaLoader
      type: DeclarativeStream
    teammates_contact_groups:
      name: teammates_contact_groups
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: teammate_id
            stream:
              $ref: '#/definitions/streams/teammates'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: teammates/{{ stream_partition.teammate_id }}/contact_groups
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/teammates_contact_groups'
        type: InlineSchemaLoader
      type: DeclarativeStream
    teammates_message_templates:
      name: teammates_message_templates
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: teammate_id
            stream:
              $ref: '#/definitions/streams/teammates'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: teammates/{{ stream_partition.teammate_id }}/message_templates
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/teammates_message_templates'
        type: InlineSchemaLoader
      type: DeclarativeStream
    teammates_tags:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: teammates_tags
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: teammate_id
            stream:
              $ref: '#/definitions/streams/teammates'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: teammates/{{ stream_partition.teammate_id }}/tags
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/teammates_tags'
        type: InlineSchemaLoader
      type: DeclarativeStream
    teams:
      name: teams
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: teams
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/teams'
        type: InlineSchemaLoader
      type: DeclarativeStream
    teams_contact_groups:
      name: teams_contact_groups
      primary_key:
        - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: team_id
            stream:
              $ref: '#/definitions/streams/teams'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: teams/{{ stream_partition.team_id }}/contact_groups
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/teams_contact_groups'
        type: InlineSchemaLoader
      type: DeclarativeStream
    teams_message_templates:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: teams_message_templates
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: team_id
            stream:
              $ref: '#/definitions/streams/teams'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: teams/{{ stream_partition.team_id }}/message_templates
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/teams_message_templates'
        type: InlineSchemaLoader
      type: DeclarativeStream
    teams_signatures:
      name: teams_signatures
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: team_id
            stream:
              $ref: '#/definitions/streams/teams'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: teams/{{ stream_partition.team_id }}/signatures
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/teams_signatures'
        type: InlineSchemaLoader
      type: DeclarativeStream
    teams_tags:
      incremental_sync:
        cursor_datetime_formats:
        - '%s'
        - '%ms'
        cursor_field: updated_at
        datetime_format: '%s'
        end_datetime:
          datetime: '{{ now_utc().strftime(''%Y-%m-%dT%H:%M:%SZ'') }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        start_datetime:
          datetime: '{{ config["start_date"] }}'
          datetime_format: '%Y-%m-%dT%H:%M:%SZ'
          type: MinMaxDatetime
        type: DatetimeBasedCursor
      name: teams_tags
      primary_key:
      - id
      retriever:
        paginator:
          page_token_option:
            type: RequestPath
          pagination_strategy:
            cursor_value: '{{ response.get("_pagination", {}).get("next", {}) }}'
            stop_condition: '{{ not response.get(''_pagination'', {}).get(''next'')
              }}'
            type: CursorPagination
          type: DefaultPaginator
        partition_router:
          parent_stream_configs:
          - parent_key: id
            partition_field: team_id
            stream:
              $ref: '#/definitions/streams/teams'
            type: ParentStreamConfig
          type: SubstreamPartitionRouter
        record_selector:
          extractor:
            field_path:
            - _results
            type: DpathExtractor
          type: RecordSelector
        requester:
          $ref: '#/definitions/base_requester'
          error_handler:
            error_handlers:
            - backoff_strategies:
              - factor: 2
                type: ExponentialBackoffStrategy
              max_retries: 3
              response_filters:
              - action: RATE_LIMITED
                error_message: Rate limit hit
                http_codes:
                - 429
                type: HttpResponseFilter
              type: DefaultErrorHandler
            type: CompositeErrorHandler
          http_method: GET
          path: teams/{{ stream_partition.team_id }}/tags
          request_parameters:
            limit: '{{ config[''page_limit''] }}'
        type: SimpleRetriever
      schema_loader:
        schema:
          $ref: '#/schemas/teams_tags'
        type: InlineSchemaLoader
      type: DeclarativeStream
description: 'Website: https://app.frontapp.com/

  Auth page: https://dev.frontapp.com/docs/create-and-revoke-api-tokens

  API Docs: https://dev.frontapp.com/reference/introduction'

schemas:
  accounts:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  accounts_contacts:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  channels:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  company_tags:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  contact_groups:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  contacts:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  contacts_notes:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      contact_id:
        type: string
    required:
    - contact_id
    type: object
  conversations:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  conversations_drafts:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  conversations_events:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  conversations_followers:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  conversations_inboxes:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type:
        - string
    required:
      - id
    type: object
  conversations_messages:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  events:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  inboxes:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  inboxes_channels:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  inboxes_conversations:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  inboxes_teammates:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  knowledge_bases:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  knowledge_bases_articles:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  knowledge_bases_categories:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  links:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  message_template_folders:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  message_templates:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  tags:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  tags_children:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  teammates:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  teammates_contact_groups:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  teammates_message_templates:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  teammates_tags:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  teams:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  teams_contact_groups:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type:
        - string
    type: object
    required:
      - id
  teams_message_templates:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  teams_signatures:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
  teams_tags:
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      id:
        type: string
    required:
    - id
    type: object
spec:
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: true
    properties:
      api_key:
        airbyte_secret: true
        order: 0
        title: API Key
        type: string
      page_limit:
        default: '50'
        description: Page limit for the responses
        order: 2
        title: Page limit
        type: string
      start_date:
        format: date-time
        order: 1
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
        title: Start date
        type: string
    required:
    - api_key
    - start_date
    type: object
  type: Spec
streams:
- $ref: '#/definitions/streams/events'
- $ref: '#/definitions/streams/inboxes'
- $ref: '#/definitions/streams/inboxes_channels'
- $ref: '#/definitions/streams/inboxes_conversations'
- $ref: '#/definitions/streams/inboxes_teammates'
- $ref: '#/definitions/streams/conversations'
- $ref: '#/definitions/streams/conversations_events'
- $ref: '#/definitions/streams/conversations_followers'
- $ref: '#/definitions/streams/conversations_inboxes'
- $ref: '#/definitions/streams/conversations_messages'
- $ref: '#/definitions/streams/links'
- $ref: '#/definitions/streams/accounts'
- $ref: '#/definitions/streams/accounts_contacts'
- $ref: '#/definitions/streams/contacts'
- $ref: '#/definitions/streams/channels'
- $ref: '#/definitions/streams/company_tags'
- $ref: '#/definitions/streams/teammates'
- $ref: '#/definitions/streams/tags'
- $ref: '#/definitions/streams/tags_children'
- $ref: '#/definitions/streams/teammates_tags'
- $ref: '#/definitions/streams/teams'
- $ref: '#/definitions/streams/teams_tags'
- $ref: '#/definitions/streams/contact_groups'
- $ref: '#/definitions/streams/conversations_drafts'
- $ref: '#/definitions/streams/contacts_notes'
- $ref: '#/definitions/streams/teammates_contact_groups'
- $ref: '#/definitions/streams/teams_contact_groups'
- $ref: '#/definitions/streams/knowledge_bases'
- $ref: '#/definitions/streams/knowledge_bases_articles'
- $ref: '#/definitions/streams/knowledge_bases_categories'
- $ref: '#/definitions/streams/message_template_folders'
- $ref: '#/definitions/streams/teams_signatures'
- $ref: '#/definitions/streams/message_templates'
- $ref: '#/definitions/streams/teammates_message_templates'
- $ref: '#/definitions/streams/teams_message_templates'
type: DeclarativeSource
version: 4.6.2
