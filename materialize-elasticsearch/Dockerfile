# Build Stage
################################################################################
FROM golang:1.17-bullseye as builder

WORKDIR /builder

# Download & compile dependencies early. Doing this separately allows for layer
# caching opportunities when no dependencies are updated.
COPY go.* ./
RUN go mod download

# Build the connector projects we depend on.
COPY materialize-boilerplate ./materialize-boilerplate
COPY materialize-elasticsearch ./materialize-elasticsearch

# Copy schema-builder binary.
COPY materialize-elasticsearch/schemabuilder/target/x86_64-unknown-linux-musl/release/schema-builder ./schema-builder

ENV PATH="/builder:$PATH"
# Test and build the connector.
RUN go test  -tags nozstd -v ./materialize-elasticsearch/...
RUN go build -tags nozstd -v -o ./connector ./materialize-elasticsearch

# Runtime Stage
################################################################################
FROM gcr.io/distroless/base-debian11

WORKDIR /connector
ENV PATH="/connector:$PATH"

# Bring in the compiled connector artifact from the builder.
COPY --from=builder /builder/connector /connector/connector
COPY --from=builder /builder/schema-builder /connector/schema-builder
COPY --from=builder /lib/x86_64-linux-gnu/libgcc_s.so.1 /lib/x86_64-linux-gnu/

# Avoid running the connector as root.
USER nonroot:nonroot

ENTRYPOINT ["/connector/connector"]
