Task: acmeCo/tests/materialize-bigquery

Resource: estuary-theatre.testing.simple_standard
["applied.actionDescription", "CREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.simple_standard (\n\t\tid INTEGER NOT NULL,\n\t\t_meta_op STRING NOT NULL,\n\t\tcanary STRING NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tval INTEGER,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.simple_delta (\n\t\tid INTEGER NOT NULL,\n\t\t_meta_op STRING NOT NULL,\n\t\tcanary STRING NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tval INTEGER,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.not_simple (\n\t\t`________-_problematicKey_______` STRING NOT NULL,\n\t\t_id STRING NOT NULL,\n\t\tbinaryKey STRING NOT NULL,\n\t\t`________-_problematicField_______` STRING,\n\t\t_dollar_signs STRING,\n\t\t`123` STRING,\n\t\t`123startsWithDigits` STRING,\n\t\tFIELDWITHDIFFERENTCAPS STRING,\n\t\ta_string_with_quote_characters STRING,\n\t\tfield_with_separated_words STRING,\n\t\t`field-with-separated-words` STRING,\n\t\t`field_with-separated_words` STRING,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tlongString STRING,\n\t\ttesting___s_ STRING,\n\t\tunsignedBigint BIGNUMERIC(38,0),\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY `________-_problematicKey_______`, _id, binaryKey;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.data_types (\n\t\tid INTEGER NOT NULL,\n\t\tarrayField JSON,\n\t\tboolField BOOLEAN,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tintField INTEGER,\n\t\tmultipleField JSON,\n\t\tnumField FLOAT64,\n\t\tstringAndIntegerField BIGNUMERIC(38,0),\n\t\tstringAndNumberField FLOAT64,\n\t\tstringDateField DATE,\n\t\tstringDateTimeField TIMESTAMP,\n\t\tstringDurationField STRING,\n\t\tstringEmailField STRING,\n\t\tstringField STRING,\n\t\tstringHostnameField STRING,\n\t\tstringIntegerField BIGNUMERIC(38,0),\n\t\tstringIpv4Field STRING,\n\t\tstringIpv6Field STRING,\n\t\tstringIriField STRING,\n\t\tstringIriReferenceField STRING,\n\t\tstringJsonPointerField STRING,\n\t\tstringMacAddr8Field STRING,\n\t\tstringMacAddrField STRING,\n\t\tstringNumberField FLOAT64,\n\t\tstringRegexField STRING,\n\t\tstringRelativeJsonPointerField STRING,\n\t\tstringTimeField STRING,\n\t\tstringUint32Field BIGNUMERIC(38,0),\n\t\tstringUint64Field BIGNUMERIC(38,0),\n\t\tstringUriField STRING,\n\t\tstringUriReferenceField STRING,\n\t\tstringUriTemplateField STRING,\n\t\tstringUuidField STRING,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n"]
["connectorState",{"updated":{}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"INSERT INTO `estuary-theatre`.testing.data_types (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33 FROM flow_temp_table_3;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"INSERT INTO `estuary-theatre`.testing.not_simple (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16 FROM flow_temp_table_2;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"INSERT INTO `estuary-theatre`.testing.simple_delta (id, _meta_op, canary, flow_published_at, val, flow_document)\nSELECT c0, c1, c2, c3, c4, c5 FROM flow_temp_table_1;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"INSERT INTO `estuary-theatre`.testing.simple_standard (id, _meta_op, canary, flow_published_at, val, flow_document)\nSELECT c0, c1, c2, c3, c4, c5 FROM flow_temp_table_0;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]
["connectorState",{"updated":{}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"MERGE INTO `estuary-theatre`.testing.data_types AS l\nUSING flow_temp_table_3 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 4\nWHEN MATCHED AND TO_JSON_STRING(r.c33)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.arrayField = r.c1, l.boolField = r.c2, l.flow_published_at = r.c3, l.intField = r.c4, l.multipleField = r.c5, l.numField = r.c6, l.stringAndIntegerField = r.c7, l.stringAndNumberField = r.c8, l.stringDateField = r.c9, l.stringDateTimeField = r.c10, l.stringDurationField = r.c11, l.stringEmailField = r.c12, l.stringField = r.c13, l.stringHostnameField = r.c14, l.stringIntegerField = r.c15, l.stringIpv4Field = r.c16, l.stringIpv6Field = r.c17, l.stringIriField = r.c18, l.stringIriReferenceField = r.c19, l.stringJsonPointerField = r.c20, l.stringMacAddr8Field = r.c21, l.stringMacAddrField = r.c22, l.stringNumberField = r.c23, l.stringRegexField = r.c24, l.stringRelativeJsonPointerField = r.c25, l.stringTimeField = r.c26, l.stringUint32Field = r.c27, l.stringUint64Field = r.c28, l.stringUriField = r.c29, l.stringUriReferenceField = r.c30, l.stringUriTemplateField = r.c31, l.stringUuidField = r.c32, l.flow_document = r.c33\nWHEN NOT MATCHED THEN\n\tINSERT (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16, r.c17, r.c18, r.c19, r.c20, r.c21, r.c22, r.c23, r.c24, r.c25, r.c26, r.c27, r.c28, r.c29, r.c30, r.c31, r.c32, r.c33);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"MERGE INTO `estuary-theatre`.testing.not_simple AS l\nUSING flow_temp_table_2 AS r\nON \n\tl.`________-_problematicKey_______` = r.c0 AND l.`________-_problematicKey_______` \u003e= '\\\\he \\\\ \\' \" `llo`' AND l.`________-_problematicKey_______` \u003c= 'very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.'\n\tAND l._id = r.c1 AND l._id \u003e= 'doc_001' AND l._id \u003c= 'doc_003'\n\tAND l.binaryKey = r.c2\nWHEN MATCHED AND TO_JSON_STRING(r.c16)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.`________-_problematicField_______` = r.c3, l._dollar_signs = r.c4, l.`123` = r.c5, l.`123startsWithDigits` = r.c6, l.FIELDWITHDIFFERENTCAPS = r.c7, l.a_string_with_quote_characters = r.c8, l.field_with_separated_words = r.c9, l.`field-with-separated-words` = r.c10, l.`field_with-separated_words` = r.c11, l.flow_published_at = r.c12, l.longString = r.c13, l.testing___s_ = r.c14, l.unsignedBigint = r.c15, l.flow_document = r.c16\nWHEN NOT MATCHED THEN\n\tINSERT (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_delta AS l\nUSING flow_temp_table_1 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_standard AS l\nUSING flow_temp_table_0 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"MERGE INTO `estuary-theatre`.testing.data_types AS l\nUSING flow_temp_table_3 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 4\nWHEN MATCHED AND TO_JSON_STRING(r.c33)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.arrayField = r.c1, l.boolField = r.c2, l.flow_published_at = r.c3, l.intField = r.c4, l.multipleField = r.c5, l.numField = r.c6, l.stringAndIntegerField = r.c7, l.stringAndNumberField = r.c8, l.stringDateField = r.c9, l.stringDateTimeField = r.c10, l.stringDurationField = r.c11, l.stringEmailField = r.c12, l.stringField = r.c13, l.stringHostnameField = r.c14, l.stringIntegerField = r.c15, l.stringIpv4Field = r.c16, l.stringIpv6Field = r.c17, l.stringIriField = r.c18, l.stringIriReferenceField = r.c19, l.stringJsonPointerField = r.c20, l.stringMacAddr8Field = r.c21, l.stringMacAddrField = r.c22, l.stringNumberField = r.c23, l.stringRegexField = r.c24, l.stringRelativeJsonPointerField = r.c25, l.stringTimeField = r.c26, l.stringUint32Field = r.c27, l.stringUint64Field = r.c28, l.stringUriField = r.c29, l.stringUriReferenceField = r.c30, l.stringUriTemplateField = r.c31, l.stringUuidField = r.c32, l.flow_document = r.c33\nWHEN NOT MATCHED THEN\n\tINSERT (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16, r.c17, r.c18, r.c19, r.c20, r.c21, r.c22, r.c23, r.c24, r.c25, r.c26, r.c27, r.c28, r.c29, r.c30, r.c31, r.c32, r.c33);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"MERGE INTO `estuary-theatre`.testing.not_simple AS l\nUSING flow_temp_table_2 AS r\nON \n\tl.`________-_problematicKey_______` = r.c0 AND l.`________-_problematicKey_______` \u003e= '\\\\he \\\\ \\' \" `llo`' AND l.`________-_problematicKey_______` \u003c= 'very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.'\n\tAND l._id = r.c1 AND l._id \u003e= 'doc_001' AND l._id \u003c= 'doc_003'\n\tAND l.binaryKey = r.c2\nWHEN MATCHED AND TO_JSON_STRING(r.c16)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.`________-_problematicField_______` = r.c3, l._dollar_signs = r.c4, l.`123` = r.c5, l.`123startsWithDigits` = r.c6, l.FIELDWITHDIFFERENTCAPS = r.c7, l.a_string_with_quote_characters = r.c8, l.field_with_separated_words = r.c9, l.`field-with-separated-words` = r.c10, l.`field_with-separated_words` = r.c11, l.flow_published_at = r.c12, l.longString = r.c13, l.testing___s_ = r.c14, l.unsignedBigint = r.c15, l.flow_document = r.c16\nWHEN NOT MATCHED THEN\n\tINSERT (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_delta AS l\nUSING flow_temp_table_1 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_standard AS l\nUSING flow_temp_table_0 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]

{"Name":"_meta_op","Nullable":false,"Type":"STRING"}
{"Name":"canary","Nullable":false,"Type":"STRING"}
{"Name":"flow_document","Nullable":false,"Type":"JSON"}
{"Name":"flow_published_at","Nullable":false,"Type":"TIMESTAMP"}
{"Name":"id","Nullable":false,"Type":"INTEGER"}
{"Name":"val","Nullable":true,"Type":"INTEGER"}

Table Data:
{"_meta_op":"u","canary":"splatters","flow_document":{"_meta":{"op":"u","uuid":"3e2bc280-1deb-11b2-8000-071353030311"},"canary":"splatters","id":3,"val":3},"flow_published_at":"1970-01-01T03:00:09Z","id":3,"val":3}
{"_meta_op":"c","canary":"strengthen","flow_document":{"_meta":{"op":"c","uuid":"770f6b80-1dda-11b2-8000-071353030311"},"canary":"strengthen","id":4,"val":4},"flow_published_at":"1970-01-01T01:00:03Z","id":4,"val":4}
{"_meta_op":"c","canary":"Kringle's","flow_document":{"_meta":{"op":"c","uuid":"77a80200-1dda-11b2-8000-071353030311"},"canary":"Kringle's","id":5,"val":5},"flow_published_at":"1970-01-01T01:00:04Z","id":5,"val":5}
{"_meta_op":"c","canary":"grosbeak's","flow_document":{"_meta":{"op":"c","uuid":"78409880-1dda-11b2-8000-071353030311"},"canary":"grosbeak's","id":6,"val":6},"flow_published_at":"1970-01-01T01:00:05Z","id":6,"val":6}
{"_meta_op":"c","canary":"pieced","flow_document":{"_meta":{"op":"c","uuid":"38ce7800-1deb-11b2-8000-071353030311"},"canary":"pieced","id":7,"val":7},"flow_published_at":"1970-01-01T03:00:00Z","id":7,"val":7}
{"_meta_op":"c","canary":"roaches","flow_document":{"_meta":{"op":"c","uuid":"39670e80-1deb-11b2-8000-071353030311"},"canary":"roaches","id":8,"val":8},"flow_published_at":"1970-01-01T03:00:01Z","id":8,"val":8}
{"_meta_op":"c","canary":"devilish","flow_document":{"_meta":{"op":"c","uuid":"39ffa500-1deb-11b2-8000-071353030311"},"canary":"devilish","id":9,"val":9},"flow_published_at":"1970-01-01T03:00:02Z","id":9,"val":9}
{"_meta_op":"c","canary":"glucose's","flow_document":{"_meta":{"op":"c","uuid":"3a983b80-1deb-11b2-8000-071353030311"},"canary":"glucose's","id":10,"val":10},"flow_published_at":"1970-01-01T03:00:03Z","id":10,"val":10}
{"_meta_op":"d","canary":"asteroid","flow_document":{"_meta":{"op":"d","uuid":"3b30d200-1deb-11b2-8000-071353030311"},"canary":"asteroid","id":11,"val":11},"flow_published_at":"1970-01-01T03:00:04Z","id":11,"val":11}

Resource: estuary-theatre.testing.simple_delta
["applied.actionDescription", "CREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.simple_standard (\n\t\tid INTEGER NOT NULL,\n\t\t_meta_op STRING NOT NULL,\n\t\tcanary STRING NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tval INTEGER,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.simple_delta (\n\t\tid INTEGER NOT NULL,\n\t\t_meta_op STRING NOT NULL,\n\t\tcanary STRING NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tval INTEGER,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.not_simple (\n\t\t`________-_problematicKey_______` STRING NOT NULL,\n\t\t_id STRING NOT NULL,\n\t\tbinaryKey STRING NOT NULL,\n\t\t`________-_problematicField_______` STRING,\n\t\t_dollar_signs STRING,\n\t\t`123` STRING,\n\t\t`123startsWithDigits` STRING,\n\t\tFIELDWITHDIFFERENTCAPS STRING,\n\t\ta_string_with_quote_characters STRING,\n\t\tfield_with_separated_words STRING,\n\t\t`field-with-separated-words` STRING,\n\t\t`field_with-separated_words` STRING,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tlongString STRING,\n\t\ttesting___s_ STRING,\n\t\tunsignedBigint BIGNUMERIC(38,0),\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY `________-_problematicKey_______`, _id, binaryKey;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.data_types (\n\t\tid INTEGER NOT NULL,\n\t\tarrayField JSON,\n\t\tboolField BOOLEAN,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tintField INTEGER,\n\t\tmultipleField JSON,\n\t\tnumField FLOAT64,\n\t\tstringAndIntegerField BIGNUMERIC(38,0),\n\t\tstringAndNumberField FLOAT64,\n\t\tstringDateField DATE,\n\t\tstringDateTimeField TIMESTAMP,\n\t\tstringDurationField STRING,\n\t\tstringEmailField STRING,\n\t\tstringField STRING,\n\t\tstringHostnameField STRING,\n\t\tstringIntegerField BIGNUMERIC(38,0),\n\t\tstringIpv4Field STRING,\n\t\tstringIpv6Field STRING,\n\t\tstringIriField STRING,\n\t\tstringIriReferenceField STRING,\n\t\tstringJsonPointerField STRING,\n\t\tstringMacAddr8Field STRING,\n\t\tstringMacAddrField STRING,\n\t\tstringNumberField FLOAT64,\n\t\tstringRegexField STRING,\n\t\tstringRelativeJsonPointerField STRING,\n\t\tstringTimeField STRING,\n\t\tstringUint32Field BIGNUMERIC(38,0),\n\t\tstringUint64Field BIGNUMERIC(38,0),\n\t\tstringUriField STRING,\n\t\tstringUriReferenceField STRING,\n\t\tstringUriTemplateField STRING,\n\t\tstringUuidField STRING,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n"]
["connectorState",{"updated":{}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"INSERT INTO `estuary-theatre`.testing.data_types (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33 FROM flow_temp_table_3;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"INSERT INTO `estuary-theatre`.testing.not_simple (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16 FROM flow_temp_table_2;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"INSERT INTO `estuary-theatre`.testing.simple_delta (id, _meta_op, canary, flow_published_at, val, flow_document)\nSELECT c0, c1, c2, c3, c4, c5 FROM flow_temp_table_1;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"INSERT INTO `estuary-theatre`.testing.simple_standard (id, _meta_op, canary, flow_published_at, val, flow_document)\nSELECT c0, c1, c2, c3, c4, c5 FROM flow_temp_table_0;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]
["connectorState",{"updated":{}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"MERGE INTO `estuary-theatre`.testing.data_types AS l\nUSING flow_temp_table_3 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 4\nWHEN MATCHED AND TO_JSON_STRING(r.c33)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.arrayField = r.c1, l.boolField = r.c2, l.flow_published_at = r.c3, l.intField = r.c4, l.multipleField = r.c5, l.numField = r.c6, l.stringAndIntegerField = r.c7, l.stringAndNumberField = r.c8, l.stringDateField = r.c9, l.stringDateTimeField = r.c10, l.stringDurationField = r.c11, l.stringEmailField = r.c12, l.stringField = r.c13, l.stringHostnameField = r.c14, l.stringIntegerField = r.c15, l.stringIpv4Field = r.c16, l.stringIpv6Field = r.c17, l.stringIriField = r.c18, l.stringIriReferenceField = r.c19, l.stringJsonPointerField = r.c20, l.stringMacAddr8Field = r.c21, l.stringMacAddrField = r.c22, l.stringNumberField = r.c23, l.stringRegexField = r.c24, l.stringRelativeJsonPointerField = r.c25, l.stringTimeField = r.c26, l.stringUint32Field = r.c27, l.stringUint64Field = r.c28, l.stringUriField = r.c29, l.stringUriReferenceField = r.c30, l.stringUriTemplateField = r.c31, l.stringUuidField = r.c32, l.flow_document = r.c33\nWHEN NOT MATCHED THEN\n\tINSERT (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16, r.c17, r.c18, r.c19, r.c20, r.c21, r.c22, r.c23, r.c24, r.c25, r.c26, r.c27, r.c28, r.c29, r.c30, r.c31, r.c32, r.c33);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"MERGE INTO `estuary-theatre`.testing.not_simple AS l\nUSING flow_temp_table_2 AS r\nON \n\tl.`________-_problematicKey_______` = r.c0 AND l.`________-_problematicKey_______` \u003e= '\\\\he \\\\ \\' \" `llo`' AND l.`________-_problematicKey_______` \u003c= 'very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.'\n\tAND l._id = r.c1 AND l._id \u003e= 'doc_001' AND l._id \u003c= 'doc_003'\n\tAND l.binaryKey = r.c2\nWHEN MATCHED AND TO_JSON_STRING(r.c16)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.`________-_problematicField_______` = r.c3, l._dollar_signs = r.c4, l.`123` = r.c5, l.`123startsWithDigits` = r.c6, l.FIELDWITHDIFFERENTCAPS = r.c7, l.a_string_with_quote_characters = r.c8, l.field_with_separated_words = r.c9, l.`field-with-separated-words` = r.c10, l.`field_with-separated_words` = r.c11, l.flow_published_at = r.c12, l.longString = r.c13, l.testing___s_ = r.c14, l.unsignedBigint = r.c15, l.flow_document = r.c16\nWHEN NOT MATCHED THEN\n\tINSERT (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_delta AS l\nUSING flow_temp_table_1 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_standard AS l\nUSING flow_temp_table_0 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"MERGE INTO `estuary-theatre`.testing.data_types AS l\nUSING flow_temp_table_3 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 4\nWHEN MATCHED AND TO_JSON_STRING(r.c33)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.arrayField = r.c1, l.boolField = r.c2, l.flow_published_at = r.c3, l.intField = r.c4, l.multipleField = r.c5, l.numField = r.c6, l.stringAndIntegerField = r.c7, l.stringAndNumberField = r.c8, l.stringDateField = r.c9, l.stringDateTimeField = r.c10, l.stringDurationField = r.c11, l.stringEmailField = r.c12, l.stringField = r.c13, l.stringHostnameField = r.c14, l.stringIntegerField = r.c15, l.stringIpv4Field = r.c16, l.stringIpv6Field = r.c17, l.stringIriField = r.c18, l.stringIriReferenceField = r.c19, l.stringJsonPointerField = r.c20, l.stringMacAddr8Field = r.c21, l.stringMacAddrField = r.c22, l.stringNumberField = r.c23, l.stringRegexField = r.c24, l.stringRelativeJsonPointerField = r.c25, l.stringTimeField = r.c26, l.stringUint32Field = r.c27, l.stringUint64Field = r.c28, l.stringUriField = r.c29, l.stringUriReferenceField = r.c30, l.stringUriTemplateField = r.c31, l.stringUuidField = r.c32, l.flow_document = r.c33\nWHEN NOT MATCHED THEN\n\tINSERT (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16, r.c17, r.c18, r.c19, r.c20, r.c21, r.c22, r.c23, r.c24, r.c25, r.c26, r.c27, r.c28, r.c29, r.c30, r.c31, r.c32, r.c33);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"MERGE INTO `estuary-theatre`.testing.not_simple AS l\nUSING flow_temp_table_2 AS r\nON \n\tl.`________-_problematicKey_______` = r.c0 AND l.`________-_problematicKey_______` \u003e= '\\\\he \\\\ \\' \" `llo`' AND l.`________-_problematicKey_______` \u003c= 'very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.'\n\tAND l._id = r.c1 AND l._id \u003e= 'doc_001' AND l._id \u003c= 'doc_003'\n\tAND l.binaryKey = r.c2\nWHEN MATCHED AND TO_JSON_STRING(r.c16)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.`________-_problematicField_______` = r.c3, l._dollar_signs = r.c4, l.`123` = r.c5, l.`123startsWithDigits` = r.c6, l.FIELDWITHDIFFERENTCAPS = r.c7, l.a_string_with_quote_characters = r.c8, l.field_with_separated_words = r.c9, l.`field-with-separated-words` = r.c10, l.`field_with-separated_words` = r.c11, l.flow_published_at = r.c12, l.longString = r.c13, l.testing___s_ = r.c14, l.unsignedBigint = r.c15, l.flow_document = r.c16\nWHEN NOT MATCHED THEN\n\tINSERT (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_delta AS l\nUSING flow_temp_table_1 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_standard AS l\nUSING flow_temp_table_0 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]

{"Name":"_meta_op","Nullable":false,"Type":"STRING"}
{"Name":"canary","Nullable":false,"Type":"STRING"}
{"Name":"flow_document","Nullable":false,"Type":"JSON"}
{"Name":"flow_published_at","Nullable":false,"Type":"TIMESTAMP"}
{"Name":"id","Nullable":false,"Type":"INTEGER"}
{"Name":"val","Nullable":true,"Type":"INTEGER"}

Table Data:
{"_meta_op":"u","canary":"splatters","flow_document":{"_meta":{"op":"u","uuid":"3e2bc280-1deb-11b2-8000-071353030311"},"canary":"splatters","id":3,"val":3},"flow_published_at":"1970-01-01T03:00:09Z","id":3,"val":3}
{"_meta_op":"c","canary":"strengthen","flow_document":{"_meta":{"op":"c","uuid":"770f6b80-1dda-11b2-8000-071353030311"},"canary":"strengthen","id":4,"val":4},"flow_published_at":"1970-01-01T01:00:03Z","id":4,"val":4}
{"_meta_op":"c","canary":"Kringle's","flow_document":{"_meta":{"op":"c","uuid":"77a80200-1dda-11b2-8000-071353030311"},"canary":"Kringle's","id":5,"val":5},"flow_published_at":"1970-01-01T01:00:04Z","id":5,"val":5}
{"_meta_op":"c","canary":"grosbeak's","flow_document":{"_meta":{"op":"c","uuid":"78409880-1dda-11b2-8000-071353030311"},"canary":"grosbeak's","id":6,"val":6},"flow_published_at":"1970-01-01T01:00:05Z","id":6,"val":6}
{"_meta_op":"c","canary":"pieced","flow_document":{"_meta":{"op":"c","uuid":"38ce7800-1deb-11b2-8000-071353030311"},"canary":"pieced","id":7,"val":7},"flow_published_at":"1970-01-01T03:00:00Z","id":7,"val":7}
{"_meta_op":"c","canary":"roaches","flow_document":{"_meta":{"op":"c","uuid":"39670e80-1deb-11b2-8000-071353030311"},"canary":"roaches","id":8,"val":8},"flow_published_at":"1970-01-01T03:00:01Z","id":8,"val":8}
{"_meta_op":"c","canary":"devilish","flow_document":{"_meta":{"op":"c","uuid":"39ffa500-1deb-11b2-8000-071353030311"},"canary":"devilish","id":9,"val":9},"flow_published_at":"1970-01-01T03:00:02Z","id":9,"val":9}
{"_meta_op":"c","canary":"glucose's","flow_document":{"_meta":{"op":"c","uuid":"3a983b80-1deb-11b2-8000-071353030311"},"canary":"glucose's","id":10,"val":10},"flow_published_at":"1970-01-01T03:00:03Z","id":10,"val":10}
{"_meta_op":"d","canary":"asteroid","flow_document":{"_meta":{"op":"d","uuid":"3b30d200-1deb-11b2-8000-071353030311"},"canary":"asteroid","id":11,"val":11},"flow_published_at":"1970-01-01T03:00:04Z","id":11,"val":11}

Resource: estuary-theatre.testing.not_simple
["applied.actionDescription", "CREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.simple_standard (\n\t\tid INTEGER NOT NULL,\n\t\t_meta_op STRING NOT NULL,\n\t\tcanary STRING NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tval INTEGER,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.simple_delta (\n\t\tid INTEGER NOT NULL,\n\t\t_meta_op STRING NOT NULL,\n\t\tcanary STRING NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tval INTEGER,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.not_simple (\n\t\t`________-_problematicKey_______` STRING NOT NULL,\n\t\t_id STRING NOT NULL,\n\t\tbinaryKey STRING NOT NULL,\n\t\t`________-_problematicField_______` STRING,\n\t\t_dollar_signs STRING,\n\t\t`123` STRING,\n\t\t`123startsWithDigits` STRING,\n\t\tFIELDWITHDIFFERENTCAPS STRING,\n\t\ta_string_with_quote_characters STRING,\n\t\tfield_with_separated_words STRING,\n\t\t`field-with-separated-words` STRING,\n\t\t`field_with-separated_words` STRING,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tlongString STRING,\n\t\ttesting___s_ STRING,\n\t\tunsignedBigint BIGNUMERIC(38,0),\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY `________-_problematicKey_______`, _id, binaryKey;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.data_types (\n\t\tid INTEGER NOT NULL,\n\t\tarrayField JSON,\n\t\tboolField BOOLEAN,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tintField INTEGER,\n\t\tmultipleField JSON,\n\t\tnumField FLOAT64,\n\t\tstringAndIntegerField BIGNUMERIC(38,0),\n\t\tstringAndNumberField FLOAT64,\n\t\tstringDateField DATE,\n\t\tstringDateTimeField TIMESTAMP,\n\t\tstringDurationField STRING,\n\t\tstringEmailField STRING,\n\t\tstringField STRING,\n\t\tstringHostnameField STRING,\n\t\tstringIntegerField BIGNUMERIC(38,0),\n\t\tstringIpv4Field STRING,\n\t\tstringIpv6Field STRING,\n\t\tstringIriField STRING,\n\t\tstringIriReferenceField STRING,\n\t\tstringJsonPointerField STRING,\n\t\tstringMacAddr8Field STRING,\n\t\tstringMacAddrField STRING,\n\t\tstringNumberField FLOAT64,\n\t\tstringRegexField STRING,\n\t\tstringRelativeJsonPointerField STRING,\n\t\tstringTimeField STRING,\n\t\tstringUint32Field BIGNUMERIC(38,0),\n\t\tstringUint64Field BIGNUMERIC(38,0),\n\t\tstringUriField STRING,\n\t\tstringUriReferenceField STRING,\n\t\tstringUriTemplateField STRING,\n\t\tstringUuidField STRING,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n"]
["connectorState",{"updated":{}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"INSERT INTO `estuary-theatre`.testing.data_types (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33 FROM flow_temp_table_3;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"INSERT INTO `estuary-theatre`.testing.not_simple (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16 FROM flow_temp_table_2;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"INSERT INTO `estuary-theatre`.testing.simple_delta (id, _meta_op, canary, flow_published_at, val, flow_document)\nSELECT c0, c1, c2, c3, c4, c5 FROM flow_temp_table_1;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"INSERT INTO `estuary-theatre`.testing.simple_standard (id, _meta_op, canary, flow_published_at, val, flow_document)\nSELECT c0, c1, c2, c3, c4, c5 FROM flow_temp_table_0;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]
["connectorState",{"updated":{}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"MERGE INTO `estuary-theatre`.testing.data_types AS l\nUSING flow_temp_table_3 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 4\nWHEN MATCHED AND TO_JSON_STRING(r.c33)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.arrayField = r.c1, l.boolField = r.c2, l.flow_published_at = r.c3, l.intField = r.c4, l.multipleField = r.c5, l.numField = r.c6, l.stringAndIntegerField = r.c7, l.stringAndNumberField = r.c8, l.stringDateField = r.c9, l.stringDateTimeField = r.c10, l.stringDurationField = r.c11, l.stringEmailField = r.c12, l.stringField = r.c13, l.stringHostnameField = r.c14, l.stringIntegerField = r.c15, l.stringIpv4Field = r.c16, l.stringIpv6Field = r.c17, l.stringIriField = r.c18, l.stringIriReferenceField = r.c19, l.stringJsonPointerField = r.c20, l.stringMacAddr8Field = r.c21, l.stringMacAddrField = r.c22, l.stringNumberField = r.c23, l.stringRegexField = r.c24, l.stringRelativeJsonPointerField = r.c25, l.stringTimeField = r.c26, l.stringUint32Field = r.c27, l.stringUint64Field = r.c28, l.stringUriField = r.c29, l.stringUriReferenceField = r.c30, l.stringUriTemplateField = r.c31, l.stringUuidField = r.c32, l.flow_document = r.c33\nWHEN NOT MATCHED THEN\n\tINSERT (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16, r.c17, r.c18, r.c19, r.c20, r.c21, r.c22, r.c23, r.c24, r.c25, r.c26, r.c27, r.c28, r.c29, r.c30, r.c31, r.c32, r.c33);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"MERGE INTO `estuary-theatre`.testing.not_simple AS l\nUSING flow_temp_table_2 AS r\nON \n\tl.`________-_problematicKey_______` = r.c0 AND l.`________-_problematicKey_______` \u003e= '\\\\he \\\\ \\' \" `llo`' AND l.`________-_problematicKey_______` \u003c= 'very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.'\n\tAND l._id = r.c1 AND l._id \u003e= 'doc_001' AND l._id \u003c= 'doc_003'\n\tAND l.binaryKey = r.c2\nWHEN MATCHED AND TO_JSON_STRING(r.c16)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.`________-_problematicField_______` = r.c3, l._dollar_signs = r.c4, l.`123` = r.c5, l.`123startsWithDigits` = r.c6, l.FIELDWITHDIFFERENTCAPS = r.c7, l.a_string_with_quote_characters = r.c8, l.field_with_separated_words = r.c9, l.`field-with-separated-words` = r.c10, l.`field_with-separated_words` = r.c11, l.flow_published_at = r.c12, l.longString = r.c13, l.testing___s_ = r.c14, l.unsignedBigint = r.c15, l.flow_document = r.c16\nWHEN NOT MATCHED THEN\n\tINSERT (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_delta AS l\nUSING flow_temp_table_1 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_standard AS l\nUSING flow_temp_table_0 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"MERGE INTO `estuary-theatre`.testing.data_types AS l\nUSING flow_temp_table_3 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 4\nWHEN MATCHED AND TO_JSON_STRING(r.c33)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.arrayField = r.c1, l.boolField = r.c2, l.flow_published_at = r.c3, l.intField = r.c4, l.multipleField = r.c5, l.numField = r.c6, l.stringAndIntegerField = r.c7, l.stringAndNumberField = r.c8, l.stringDateField = r.c9, l.stringDateTimeField = r.c10, l.stringDurationField = r.c11, l.stringEmailField = r.c12, l.stringField = r.c13, l.stringHostnameField = r.c14, l.stringIntegerField = r.c15, l.stringIpv4Field = r.c16, l.stringIpv6Field = r.c17, l.stringIriField = r.c18, l.stringIriReferenceField = r.c19, l.stringJsonPointerField = r.c20, l.stringMacAddr8Field = r.c21, l.stringMacAddrField = r.c22, l.stringNumberField = r.c23, l.stringRegexField = r.c24, l.stringRelativeJsonPointerField = r.c25, l.stringTimeField = r.c26, l.stringUint32Field = r.c27, l.stringUint64Field = r.c28, l.stringUriField = r.c29, l.stringUriReferenceField = r.c30, l.stringUriTemplateField = r.c31, l.stringUuidField = r.c32, l.flow_document = r.c33\nWHEN NOT MATCHED THEN\n\tINSERT (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16, r.c17, r.c18, r.c19, r.c20, r.c21, r.c22, r.c23, r.c24, r.c25, r.c26, r.c27, r.c28, r.c29, r.c30, r.c31, r.c32, r.c33);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"MERGE INTO `estuary-theatre`.testing.not_simple AS l\nUSING flow_temp_table_2 AS r\nON \n\tl.`________-_problematicKey_______` = r.c0 AND l.`________-_problematicKey_______` \u003e= '\\\\he \\\\ \\' \" `llo`' AND l.`________-_problematicKey_______` \u003c= 'very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.'\n\tAND l._id = r.c1 AND l._id \u003e= 'doc_001' AND l._id \u003c= 'doc_003'\n\tAND l.binaryKey = r.c2\nWHEN MATCHED AND TO_JSON_STRING(r.c16)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.`________-_problematicField_______` = r.c3, l._dollar_signs = r.c4, l.`123` = r.c5, l.`123startsWithDigits` = r.c6, l.FIELDWITHDIFFERENTCAPS = r.c7, l.a_string_with_quote_characters = r.c8, l.field_with_separated_words = r.c9, l.`field-with-separated-words` = r.c10, l.`field_with-separated_words` = r.c11, l.flow_published_at = r.c12, l.longString = r.c13, l.testing___s_ = r.c14, l.unsignedBigint = r.c15, l.flow_document = r.c16\nWHEN NOT MATCHED THEN\n\tINSERT (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_delta AS l\nUSING flow_temp_table_1 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_standard AS l\nUSING flow_temp_table_0 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]

{"Name":"123","Nullable":true,"Type":"STRING"}
{"Name":"123startsWithDigits","Nullable":true,"Type":"STRING"}
{"Name":"FIELDWITHDIFFERENTCAPS","Nullable":true,"Type":"STRING"}
{"Name":"________-_problematicField_______","Nullable":true,"Type":"STRING"}
{"Name":"________-_problematicKey_______","Nullable":false,"Type":"STRING"}
{"Name":"_dollar_signs","Nullable":true,"Type":"STRING"}
{"Name":"_id","Nullable":false,"Type":"STRING"}
{"Name":"a_string_with_quote_characters","Nullable":true,"Type":"STRING"}
{"Name":"binaryKey","Nullable":false,"Type":"STRING"}
{"Name":"field-with-separated-words","Nullable":true,"Type":"STRING"}
{"Name":"field_with-separated_words","Nullable":true,"Type":"STRING"}
{"Name":"field_with_separated_words","Nullable":true,"Type":"STRING"}
{"Name":"flow_document","Nullable":false,"Type":"JSON"}
{"Name":"flow_published_at","Nullable":false,"Type":"TIMESTAMP"}
{"Name":"longString","Nullable":true,"Type":"STRING"}
{"Name":"testing___s_","Nullable":true,"Type":"STRING"}
{"Name":"unsignedBigint","Nullable":true,"Type":"BIGNUMERIC"}

Table Data:
{"123":"updated 123","123startsWithDigits":"updated numbers","FIELDWITHDIFFERENTCAPS":"UPDATED UPPERCASE","________-_problematicField_______":"updated special chars","________-_problematicKey_______":"\\he \\ ' \" `llo`","_dollar_signs":"updated dollars","_id":"doc_001","a_string_with_quote_characters":null,"binaryKey":"SGVsbG8gV29ybGQ=","field-with-separated-words":"updated dashes","field_with-separated_words":"updated mixed","field_with_separated_words":"updated spaces","flow_document":{" ,;{}().- problematicField � 𐀀 嶲 ":"updated special chars"," ,;{}().- problematicKey � 𐀀 嶲 ":"\\he \\ ' \" `llo`","$dollar$signs":"updated dollars","123":"updated 123","123startsWithDigits":"updated numbers","FIELDWITHDIFFERENTCAPS":"UPDATED UPPERCASE","_id":"doc_001","_meta":{"uuid":"3ec45900-1deb-11b2-8000-071353030311"},"a\"string`with`quote''characters":"updated quotes","binaryKey":"SGVsbG8gV29ybGQ=","field with separated words":"updated spaces","field-with-separated-words":"updated dashes","field.with-separated_words":"updated mixed","field.with.separated.words":"updated dots","fieldWithDifferentCaps":"updatedCamelCase","field_with_separated_words":"updated underscores","fieldwithdifferentcaps":"updated lowercase","longString":"Updated long string with more Unicode: 🎭🎨🎪🎯 αβγδε ñáéíóú 中文更新测试 العربية עברית русский 한국어 日本語","testing (%s)":"updated printf","unsignedBigint":18446744073709551615},"flow_published_at":"1970-01-01T03:00:10Z","longString":"Updated long string with more Unicode: 🎭🎨🎪🎯 αβγδε ñáéíóú 中文更新测试 العربية עברית русский 한국어 日本語","testing___s_":"updated printf","unsignedBigint":"18446744073709551615"}
{"123":"","123startsWithDigits":"","FIELDWITHDIFFERENTCAPS":"","________-_problematicField_______":"","________-_problematicKey_______":"test-key-2","_dollar_signs":"","_id":"doc_002","a_string_with_quote_characters":null,"binaryKey":"VGVzdERhdGE=","field-with-separated-words":"","field_with-separated_words":"","field_with_separated_words":"","flow_document":{" ,;{}().- problematicField � 𐀀 嶲 ":""," ,;{}().- problematicKey � 𐀀 嶲 ":"test-key-2","$dollar$signs":"","123":"","123startsWithDigits":"","FIELDWITHDIFFERENTCAPS":"","_id":"doc_002","_meta":{"uuid":"7971c580-1dda-11b2-8000-071353030311"},"a\"string`with`quote''characters":"","binaryKey":"VGVzdERhdGE=","field with separated words":"","field-with-separated-words":"","field.with-separated_words":"","field.with.separated.words":"","fieldWithDifferentCaps":"","field_with_separated_words":"","fieldwithdifferentcaps":"","longString":"","testing (%s)":"","unsignedBigint":0},"flow_published_at":"1970-01-01T01:00:07Z","longString":"","testing___s_":"","unsignedBigint":"0"}
{"123":999,"123startsWithDigits":"field starting with 123","FIELDWITHDIFFERENTCAPS":"ALL UPPERCASE VALUE","________-_problematicField_______":"symbols: !@#$%^\u0026*()_+-=[]{}|;':\",./\u003c\u003e?","________-_problematicKey_______":"very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.","_dollar_signs":"$100.50$","_id":"doc_003","a_string_with_quote_characters":null,"binaryKey":"QmluYXJ5VGVzdERhdGE=","field-with-separated-words":"hyphen-separated-values","field_with-separated_words":"mixed.separator-test_data","field_with_separated_words":"edge case testing","flow_document":{" ,;{}().- problematicField � 𐀀 嶲 ":"symbols: !@#$%^\u0026*()_+-=[]{}|;':\",./\u003c\u003e?"," ,;{}().- problematicKey � 𐀀 嶲 ":"very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.","$dollar$signs":"$100.50$","123":"999","123startsWithDigits":"field starting with 123","FIELDWITHDIFFERENTCAPS":"ALL UPPERCASE VALUE","_id":"doc_003","_meta":{"uuid":"7a0a5c00-1dda-11b2-8000-071353030311"},"a\"string`with`quote''characters":"testing \"quotes\" and `backticks` and 'apostrophes'","binaryKey":"QmluYXJ5VGVzdERhdGE=","field with separated words":"edge case testing","field-with-separated-words":"hyphen-separated-values","field.with-separated_words":"mixed.separator-test_data","field.with.separated.words":"system.test.data","fieldWithDifferentCaps":"CamelCaseValue","field_with_separated_words":"underscore_separated_values","fieldwithdifferentcaps":"all lowercase value","longString":"very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.","testing (%s)":"printf style format string test","unsignedBigint":18446744073709551615},"flow_published_at":"1970-01-01T01:00:08Z","longString":"very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.","testing___s_":"printf style format string test","unsignedBigint":"18446744073709551615"}

Resource: estuary-theatre.testing.data_types
["applied.actionDescription", "CREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.simple_standard (\n\t\tid INTEGER NOT NULL,\n\t\t_meta_op STRING NOT NULL,\n\t\tcanary STRING NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tval INTEGER,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.simple_delta (\n\t\tid INTEGER NOT NULL,\n\t\t_meta_op STRING NOT NULL,\n\t\tcanary STRING NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tval INTEGER,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.not_simple (\n\t\t`________-_problematicKey_______` STRING NOT NULL,\n\t\t_id STRING NOT NULL,\n\t\tbinaryKey STRING NOT NULL,\n\t\t`________-_problematicField_______` STRING,\n\t\t_dollar_signs STRING,\n\t\t`123` STRING,\n\t\t`123startsWithDigits` STRING,\n\t\tFIELDWITHDIFFERENTCAPS STRING,\n\t\ta_string_with_quote_characters STRING,\n\t\tfield_with_separated_words STRING,\n\t\t`field-with-separated-words` STRING,\n\t\t`field_with-separated_words` STRING,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tlongString STRING,\n\t\ttesting___s_ STRING,\n\t\tunsignedBigint BIGNUMERIC(38,0),\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY `________-_problematicKey_______`, _id, binaryKey;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.data_types (\n\t\tid INTEGER NOT NULL,\n\t\tarrayField JSON,\n\t\tboolField BOOLEAN,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tintField INTEGER,\n\t\tmultipleField JSON,\n\t\tnumField FLOAT64,\n\t\tstringAndIntegerField BIGNUMERIC(38,0),\n\t\tstringAndNumberField FLOAT64,\n\t\tstringDateField DATE,\n\t\tstringDateTimeField TIMESTAMP,\n\t\tstringDurationField STRING,\n\t\tstringEmailField STRING,\n\t\tstringField STRING,\n\t\tstringHostnameField STRING,\n\t\tstringIntegerField BIGNUMERIC(38,0),\n\t\tstringIpv4Field STRING,\n\t\tstringIpv6Field STRING,\n\t\tstringIriField STRING,\n\t\tstringIriReferenceField STRING,\n\t\tstringJsonPointerField STRING,\n\t\tstringMacAddr8Field STRING,\n\t\tstringMacAddrField STRING,\n\t\tstringNumberField FLOAT64,\n\t\tstringRegexField STRING,\n\t\tstringRelativeJsonPointerField STRING,\n\t\tstringTimeField STRING,\n\t\tstringUint32Field BIGNUMERIC(38,0),\n\t\tstringUint64Field BIGNUMERIC(38,0),\n\t\tstringUriField STRING,\n\t\tstringUriReferenceField STRING,\n\t\tstringUriTemplateField STRING,\n\t\tstringUuidField STRING,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n"]
["connectorState",{"updated":{}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"INSERT INTO `estuary-theatre`.testing.data_types (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33 FROM flow_temp_table_3;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"INSERT INTO `estuary-theatre`.testing.not_simple (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16 FROM flow_temp_table_2;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"INSERT INTO `estuary-theatre`.testing.simple_delta (id, _meta_op, canary, flow_published_at, val, flow_document)\nSELECT c0, c1, c2, c3, c4, c5 FROM flow_temp_table_1;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"INSERT INTO `estuary-theatre`.testing.simple_standard (id, _meta_op, canary, flow_published_at, val, flow_document)\nSELECT c0, c1, c2, c3, c4, c5 FROM flow_temp_table_0;\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]
["connectorState",{"updated":{}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"MERGE INTO `estuary-theatre`.testing.data_types AS l\nUSING flow_temp_table_3 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 4\nWHEN MATCHED AND TO_JSON_STRING(r.c33)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.arrayField = r.c1, l.boolField = r.c2, l.flow_published_at = r.c3, l.intField = r.c4, l.multipleField = r.c5, l.numField = r.c6, l.stringAndIntegerField = r.c7, l.stringAndNumberField = r.c8, l.stringDateField = r.c9, l.stringDateTimeField = r.c10, l.stringDurationField = r.c11, l.stringEmailField = r.c12, l.stringField = r.c13, l.stringHostnameField = r.c14, l.stringIntegerField = r.c15, l.stringIpv4Field = r.c16, l.stringIpv6Field = r.c17, l.stringIriField = r.c18, l.stringIriReferenceField = r.c19, l.stringJsonPointerField = r.c20, l.stringMacAddr8Field = r.c21, l.stringMacAddrField = r.c22, l.stringNumberField = r.c23, l.stringRegexField = r.c24, l.stringRelativeJsonPointerField = r.c25, l.stringTimeField = r.c26, l.stringUint32Field = r.c27, l.stringUint64Field = r.c28, l.stringUriField = r.c29, l.stringUriReferenceField = r.c30, l.stringUriTemplateField = r.c31, l.stringUuidField = r.c32, l.flow_document = r.c33\nWHEN NOT MATCHED THEN\n\tINSERT (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16, r.c17, r.c18, r.c19, r.c20, r.c21, r.c22, r.c23, r.c24, r.c25, r.c26, r.c27, r.c28, r.c29, r.c30, r.c31, r.c32, r.c33);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"MERGE INTO `estuary-theatre`.testing.not_simple AS l\nUSING flow_temp_table_2 AS r\nON \n\tl.`________-_problematicKey_______` = r.c0 AND l.`________-_problematicKey_______` \u003e= '\\\\he \\\\ \\' \" `llo`' AND l.`________-_problematicKey_______` \u003c= 'very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.'\n\tAND l._id = r.c1 AND l._id \u003e= 'doc_001' AND l._id \u003c= 'doc_003'\n\tAND l.binaryKey = r.c2\nWHEN MATCHED AND TO_JSON_STRING(r.c16)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.`________-_problematicField_______` = r.c3, l._dollar_signs = r.c4, l.`123` = r.c5, l.`123startsWithDigits` = r.c6, l.FIELDWITHDIFFERENTCAPS = r.c7, l.a_string_with_quote_characters = r.c8, l.field_with_separated_words = r.c9, l.`field-with-separated-words` = r.c10, l.`field_with-separated_words` = r.c11, l.flow_published_at = r.c12, l.longString = r.c13, l.testing___s_ = r.c14, l.unsignedBigint = r.c15, l.flow_document = r.c16\nWHEN NOT MATCHED THEN\n\tINSERT (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_delta AS l\nUSING flow_temp_table_1 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_standard AS l\nUSING flow_temp_table_0 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]
["connectorState",{"updated":{"estuary-theatre%2Ftesting%2Fdata_types":{"Query":"MERGE INTO `estuary-theatre`.testing.data_types AS l\nUSING flow_temp_table_3 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 4\nWHEN MATCHED AND TO_JSON_STRING(r.c33)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.arrayField = r.c1, l.boolField = r.c2, l.flow_published_at = r.c3, l.intField = r.c4, l.multipleField = r.c5, l.numField = r.c6, l.stringAndIntegerField = r.c7, l.stringAndNumberField = r.c8, l.stringDateField = r.c9, l.stringDateTimeField = r.c10, l.stringDurationField = r.c11, l.stringEmailField = r.c12, l.stringField = r.c13, l.stringHostnameField = r.c14, l.stringIntegerField = r.c15, l.stringIpv4Field = r.c16, l.stringIpv6Field = r.c17, l.stringIriField = r.c18, l.stringIriReferenceField = r.c19, l.stringJsonPointerField = r.c20, l.stringMacAddr8Field = r.c21, l.stringMacAddrField = r.c22, l.stringNumberField = r.c23, l.stringRegexField = r.c24, l.stringRelativeJsonPointerField = r.c25, l.stringTimeField = r.c26, l.stringUint32Field = r.c27, l.stringUint64Field = r.c28, l.stringUriField = r.c29, l.stringUriReferenceField = r.c30, l.stringUriTemplateField = r.c31, l.stringUuidField = r.c32, l.flow_document = r.c33\nWHEN NOT MATCHED THEN\n\tINSERT (id, arrayField, boolField, flow_published_at, intField, multipleField, numField, stringAndIntegerField, stringAndNumberField, stringDateField, stringDateTimeField, stringDurationField, stringEmailField, stringField, stringHostnameField, stringIntegerField, stringIpv4Field, stringIpv6Field, stringIriField, stringIriReferenceField, stringJsonPointerField, stringMacAddr8Field, stringMacAddrField, stringNumberField, stringRegexField, stringRelativeJsonPointerField, stringTimeField, stringUint32Field, stringUint64Field, stringUriField, stringUriReferenceField, stringUriTemplateField, stringUuidField, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16, r.c17, r.c18, r.c19, r.c20, r.c21, r.c22, r.c23, r.c24, r.c25, r.c26, r.c27, r.c28, r.c29, r.c30, r.c31, r.c32, r.c33);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_3"},"estuary-theatre%2Ftesting%2Fnot_simple":{"Query":"MERGE INTO `estuary-theatre`.testing.not_simple AS l\nUSING flow_temp_table_2 AS r\nON \n\tl.`________-_problematicKey_______` = r.c0 AND l.`________-_problematicKey_______` \u003e= '\\\\he \\\\ \\' \" `llo`' AND l.`________-_problematicKey_______` \u003c= 'very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.'\n\tAND l._id = r.c1 AND l._id \u003e= 'doc_001' AND l._id \u003c= 'doc_003'\n\tAND l.binaryKey = r.c2\nWHEN MATCHED AND TO_JSON_STRING(r.c16)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.`________-_problematicField_______` = r.c3, l._dollar_signs = r.c4, l.`123` = r.c5, l.`123startsWithDigits` = r.c6, l.FIELDWITHDIFFERENTCAPS = r.c7, l.a_string_with_quote_characters = r.c8, l.field_with_separated_words = r.c9, l.`field-with-separated-words` = r.c10, l.`field_with-separated_words` = r.c11, l.flow_published_at = r.c12, l.longString = r.c13, l.testing___s_ = r.c14, l.unsignedBigint = r.c15, l.flow_document = r.c16\nWHEN NOT MATCHED THEN\n\tINSERT (`________-_problematicKey_______`, _id, binaryKey, `________-_problematicField_______`, _dollar_signs, `123`, `123startsWithDigits`, FIELDWITHDIFFERENTCAPS, a_string_with_quote_characters, field_with_separated_words, `field-with-separated-words`, `field_with-separated_words`, flow_published_at, longString, testing___s_, unsignedBigint, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10, r.c11, r.c12, r.c13, r.c14, r.c15, r.c16);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_2"},"estuary-theatre%2Ftesting%2Fsimple_delta":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_delta AS l\nUSING flow_temp_table_1 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_1"},"estuary-theatre%2Ftesting%2Fsimple_standard":{"Query":"MERGE INTO `estuary-theatre`.testing.simple_standard AS l\nUSING flow_temp_table_0 AS r\nON \n\tl.id = r.c0 AND l.id \u003e= 1 AND l.id \u003c= 11\nWHEN MATCHED AND TO_JSON_STRING(r.c5)='\"delete\"' THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.canary = r.c2, l.flow_published_at = r.c3, l.val = r.c4, l.flow_document = r.c5\nWHEN NOT MATCHED THEN\n\tINSERT (id, _meta_op, canary, flow_published_at, val, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5);\n","SourceURIs":["gs://[bucket]/<uuid>"],"JobPrefix": "<uuid>","TempTableName":"flow_temp_table_0"}}}]

{"Name":"arrayField","Nullable":true,"Type":"JSON"}
{"Name":"boolField","Nullable":true,"Type":"BOOLEAN"}
{"Name":"flow_document","Nullable":false,"Type":"JSON"}
{"Name":"flow_published_at","Nullable":false,"Type":"TIMESTAMP"}
{"Name":"id","Nullable":false,"Type":"INTEGER"}
{"Name":"intField","Nullable":true,"Type":"INTEGER"}
{"Name":"multipleField","Nullable":true,"Type":"JSON"}
{"Name":"numField","Nullable":true,"Type":"FLOAT"}
{"Name":"stringAndIntegerField","Nullable":true,"Type":"BIGNUMERIC"}
{"Name":"stringAndNumberField","Nullable":true,"Type":"FLOAT"}
{"Name":"stringDateField","Nullable":true,"Type":"DATE"}
{"Name":"stringDateTimeField","Nullable":true,"Type":"TIMESTAMP"}
{"Name":"stringDurationField","Nullable":true,"Type":"STRING"}
{"Name":"stringEmailField","Nullable":true,"Type":"STRING"}
{"Name":"stringField","Nullable":true,"Type":"STRING"}
{"Name":"stringHostnameField","Nullable":true,"Type":"STRING"}
{"Name":"stringIntegerField","Nullable":true,"Type":"BIGNUMERIC"}
{"Name":"stringIpv4Field","Nullable":true,"Type":"STRING"}
{"Name":"stringIpv6Field","Nullable":true,"Type":"STRING"}
{"Name":"stringIriField","Nullable":true,"Type":"STRING"}
{"Name":"stringIriReferenceField","Nullable":true,"Type":"STRING"}
{"Name":"stringJsonPointerField","Nullable":true,"Type":"STRING"}
{"Name":"stringMacAddr8Field","Nullable":true,"Type":"STRING"}
{"Name":"stringMacAddrField","Nullable":true,"Type":"STRING"}
{"Name":"stringNumberField","Nullable":true,"Type":"FLOAT"}
{"Name":"stringRegexField","Nullable":true,"Type":"STRING"}
{"Name":"stringRelativeJsonPointerField","Nullable":true,"Type":"STRING"}
{"Name":"stringTimeField","Nullable":true,"Type":"STRING"}
{"Name":"stringUint32Field","Nullable":true,"Type":"BIGNUMERIC"}
{"Name":"stringUint64Field","Nullable":true,"Type":"BIGNUMERIC"}
{"Name":"stringUriField","Nullable":true,"Type":"STRING"}
{"Name":"stringUriReferenceField","Nullable":true,"Type":"STRING"}
{"Name":"stringUriTemplateField","Nullable":true,"Type":"STRING"}
{"Name":"stringUuidField","Nullable":true,"Type":"STRING"}

Table Data:
{"arrayField":[1,"two",3,true,null],"boolField":true,"flow_document":{"_meta":{"uuid":"3ff58600-1deb-11b2-8000-071353030311"},"arrayField":[1,"two",3,true,null],"boolField":true,"id":1,"intField":42,"multipleField":"string value","nullField":null,"numField":3.14159,"objField":{"count":123,"nested":"value"},"stringAndIntegerField":"1.0","stringAndNumberField":"123.456","stringDateField":"2023-01-15","stringDateTimeField":"2023-01-15T10:30:45Z","stringDurationField":"P1Y2M3DT4H5M6S","stringEmailField":"test@example.com","stringField":"hello world","stringHostnameField":"example.com","stringIntegerField":"1.0","stringIpv4Field":"192.168.1.1","stringIpv6Field":"2001:db8::1","stringIriField":"https://例え.テスト","stringIriReferenceField":"/例え/テスト","stringJsonPointerField":"/path/to/field","stringMacAddr8Field":"00:14:22:ff:fe:01:23:45","stringMacAddrField":"00:14:22:01:23:45","stringNumberField":"123.456","stringRegexField":"^[a-zA-Z0-9]+$","stringRelativeJsonPointerField":"1/name","stringTimeField":"14:30:00+00:00","stringUint32Field":"4294967295","stringUint64Field":"18446744073709551615","stringUriField":"https://example.com/path","stringUriReferenceField":"/relative/path","stringUriTemplateField":"https://api.example.com/{id}","stringUuidField":"550e8400-e29b-41d4-a716-446655440000"},"flow_published_at":"1970-01-01T03:00:12Z","id":1,"intField":42,"multipleField":"string value","numField":3.14159,"stringAndIntegerField":"1","stringAndNumberField":123.456,"stringDateField":"2023-01-15","stringDateTimeField":"2023-01-15T10:30:45Z","stringDurationField":"P1Y2M3DT4H5M6S","stringEmailField":"test@example.com","stringField":"hello world","stringHostnameField":"example.com","stringIntegerField":"1","stringIpv4Field":"192.168.1.1","stringIpv6Field":"2001:db8::1","stringIriField":"https://例え.テスト","stringIriReferenceField":"/例え/テスト","stringJsonPointerField":"/path/to/field","stringMacAddr8Field":"00:14:22:ff:fe:01:23:45","stringMacAddrField":"00:14:22:01:23:45","stringNumberField":123.456,"stringRegexField":"^[a-zA-Z0-9]+$","stringRelativeJsonPointerField":"1/name","stringTimeField":"14:30:00+00:00","stringUint32Field":"4294967295","stringUint64Field":"18446744073709551615","stringUriField":"https://example.com/path","stringUriReferenceField":"/relative/path","stringUriTemplateField":"https://api.example.com/{id}","stringUuidField":"550e8400-e29b-41d4-a716-446655440000"}
{"arrayField":[],"boolField":false,"flow_document":{"_meta":{"uuid":"408e1c80-1deb-11b2-8000-071353030311"},"arrayField":[],"boolField":false,"id":2,"intField":-999,"multipleField":42,"nullField":null,"numField":-2.718281828,"objField":{},"stringAndIntegerField":-123,"stringAndNumberField":-456.789,"stringDateField":"1999-12-31","stringDateTimeField":"1999-12-31T23:59:59.999Z","stringDurationField":"PT30M","stringEmailField":"admin@localhost","stringField":"","stringHostnameField":"localhost","stringIntegerField":"-123","stringIpv4Field":"127.0.0.1","stringIpv6Field":"::1","stringIriField":"http://localhost","stringIriReferenceField":"/","stringJsonPointerField":"/0","stringMacAddr8Field":"ff:ff:ff:ff:ff:ff:ff:ff","stringMacAddrField":"ff:ff:ff:ff:ff:ff","stringNumberField":"-456.789","stringRegexField":".*","stringRelativeJsonPointerField":"0","stringTimeField":"00:00:00+00:00","stringUint32Field":"0","stringUint64Field":"0","stringUriField":"http://localhost:8080","stringUriReferenceField":"#fragment","stringUriTemplateField":"http://example.com/~{username}/","stringUuidField":"00000000-0000-0000-0000-000000000000"},"flow_published_at":"1970-01-01T03:00:13Z","id":2,"intField":-999,"multipleField":42,"numField":-2.718281828,"stringAndIntegerField":"-123","stringAndNumberField":-456.789,"stringDateField":"1999-12-31","stringDateTimeField":"1999-12-31T23:59:59.999Z","stringDurationField":"PT30M","stringEmailField":"admin@localhost","stringField":"","stringHostnameField":"localhost","stringIntegerField":"-123","stringIpv4Field":"127.0.0.1","stringIpv6Field":"::1","stringIriField":"http://localhost","stringIriReferenceField":"/","stringJsonPointerField":"/0","stringMacAddr8Field":"ff:ff:ff:ff:ff:ff:ff:ff","stringMacAddrField":"ff:ff:ff:ff:ff:ff","stringNumberField":-456.789,"stringRegexField":".*","stringRelativeJsonPointerField":0,"stringTimeField":"00:00:00+00:00","stringUint32Field":"0","stringUint64Field":"0","stringUriField":"http://localhost:8080","stringUriReferenceField":"#fragment","stringUriTemplateField":"http://example.com/~{username}/","stringUuidField":"00000000-0000-0000-0000-000000000000"}
{"arrayField":[{"obj":"in array"},[1,[2,[3]]],"mixed types"],"boolField":true,"flow_document":{"_meta":{"uuid":"7bd41f80-1dda-11b2-8000-071353030311"},"arrayField":[{"obj":"in array"},[1,[2,[3]]],"mixed types"],"boolField":true,"id":3,"intField":0,"multipleField":{"object":"value"},"nullField":null,"numField":0,"objField":{"array":[1,2,3],"nested":{"deep":"value"}},"stringAndIntegerField":"2147483647","stringAndNumberField":"0","stringDateField":"2024-02-29","stringDateTimeField":"2024-02-29T12:00:00.000000000Z","stringDurationField":"P0D","stringEmailField":"user+tag@sub.domain.com","stringField":"special chars: !@#$%^\u0026*()[]{}|\\:;\"'\u003c\u003e?/.,","stringHostnameField":"sub.domain.example.org","stringIntegerField":"2147483647","stringIpv4Field":"10.0.0.1","stringIpv6Field":"2001:0db8:0000:0000:0000:ff00:0042:8329","stringIriField":"https://москва.рф/path","stringIriReferenceField":"/москва/путь","stringJsonPointerField":"/nested/array/0/field","stringMacAddr8Field":"01:23:45:67:89:ab:cd:ef","stringMacAddrField":"01:23:45:67:89:ab","stringNumberField":"0","stringRegexField":"[0-9]{3}-[0-9]{2}-[0-9]{4}","stringRelativeJsonPointerField":"2/nested/field","stringTimeField":"23:59:59.999-01:15","stringUint32Field":"2147483648","stringUint64Field":"9223372036854775808","stringUriField":"ftp://user:pass@host.com:21/path?query=value","stringUriReferenceField":"?query=value\u0026other=param","stringUriTemplateField":"https://{host}{/path*}{?query*}","stringUuidField":"f47ac10b-58cc-4372-a567-0e02b2c3d479"},"flow_published_at":"1970-01-01T01:00:11Z","id":3,"intField":0,"multipleField":{"object":"value"},"numField":0,"stringAndIntegerField":"2147483647","stringAndNumberField":0,"stringDateField":"2024-02-29","stringDateTimeField":"2024-02-29T12:00:00Z","stringDurationField":"P0D","stringEmailField":"user+tag@sub.domain.com","stringField":"special chars: !@#$%^\u0026*()[]{}|\\:;\"'\u003c\u003e?/.,","stringHostnameField":"sub.domain.example.org","stringIntegerField":"2147483647","stringIpv4Field":"10.0.0.1","stringIpv6Field":"2001:0db8:0000:0000:0000:ff00:0042:8329","stringIriField":"https://москва.рф/path","stringIriReferenceField":"/москва/путь","stringJsonPointerField":"/nested/array/0/field","stringMacAddr8Field":"01:23:45:67:89:ab:cd:ef","stringMacAddrField":"01:23:45:67:89:ab","stringNumberField":0,"stringRegexField":"[0-9]{3}-[0-9]{2}-[0-9]{4}","stringRelativeJsonPointerField":"2/nested/field","stringTimeField":"23:59:59.999-01:15","stringUint32Field":"2147483648","stringUint64Field":"9223372036854775808","stringUriField":"ftp://user:pass@host.com:21/path?query=value","stringUriReferenceField":"?query=value\u0026other=param","stringUriTemplateField":"https://{host}{/path*}{?query*}","stringUuidField":"f47ac10b-58cc-4372-a567-0e02b2c3d479"}
{"arrayField":["updated","array","values"],"boolField":false,"flow_document":{"_meta":{"uuid":"3f5cef80-1deb-11b2-8000-071353030311"},"arrayField":["updated","array","values"],"boolField":false,"id":4,"intField":2147483647,"multipleField":999,"nullField":null,"numField":12345678900,"objField":{"timestamp":"2024-01-01","updated":true},"stringAndIntegerField":999,"stringAndNumberField":999.999,"stringDateField":"2024-12-25","stringDateTimeField":"2024-12-25T00:00:00Z","stringDurationField":"P1D","stringEmailField":"updated@test.org","stringField":"updated value","stringHostnameField":"api.example.org","stringIntegerField":"999","stringIpv4Field":"8.8.8.8","stringIpv6Field":"2001:4860:4860::8888","stringIriField":"https://テスト.例","stringIriReferenceField":"/テスト/例","stringJsonPointerField":"/data/items/0/name","stringMacAddr8Field":"aa:bb:cc:dd:ee:ff:00:11","stringMacAddrField":"aa:bb:cc:dd:ee:ff","stringNumberField":"999.999","stringRegexField":"^\\d{4}-\\d{2}-\\d{2}$","stringRelativeJsonPointerField":"3/updated","stringTimeField":"12:00:00z","stringUint32Field":"1000000000","stringUint64Field":"1000000000000000000","stringUriField":"https://api.example.org/v1/resource","stringUriReferenceField":"../parent/resource","stringUriTemplateField":"/api/v{version}/users/{id}","stringUuidField":"123e4567-e89b-12d3-a456-426614174000"},"flow_published_at":"1970-01-01T03:00:11Z","id":4,"intField":2147483647,"multipleField":999,"numField":12345678900,"stringAndIntegerField":"999","stringAndNumberField":999.999,"stringDateField":"2024-12-25","stringDateTimeField":"2024-12-25T00:00:00Z","stringDurationField":"P1D","stringEmailField":"updated@test.org","stringField":"updated value","stringHostnameField":"api.example.org","stringIntegerField":"999","stringIpv4Field":"8.8.8.8","stringIpv6Field":"2001:4860:4860::8888","stringIriField":"https://テスト.例","stringIriReferenceField":"/テスト/例","stringJsonPointerField":"/data/items/0/name","stringMacAddr8Field":"aa:bb:cc:dd:ee:ff:00:11","stringMacAddrField":"aa:bb:cc:dd:ee:ff","stringNumberField":999.999,"stringRegexField":"^\\d{4}-\\d{2}-\\d{2}$","stringRelativeJsonPointerField":"3/updated","stringTimeField":"12:00:00z","stringUint32Field":"1000000000","stringUint64Field":"1000000000000000000","stringUriField":"https://api.example.org/v1/resource","stringUriReferenceField":"../parent/resource","stringUriTemplateField":"/api/v{version}/users/{id}","stringUuidField":"123e4567-e89b-12d3-a456-426614174000"}


