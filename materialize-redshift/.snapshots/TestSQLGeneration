--- Begin "a-schema".target_table createTargetTable ---

CREATE TABLE IF NOT EXISTS "a-schema".target_table (
		key1 BIGINT NOT NULL,
		"key!2" BOOLEAN NOT NULL,
		nullableKey VARCHAR(max),
		Camel_Case BIGINT,
		"a Time" TIMESTAMPTZ,
		"array" SUPER,
		lower_case BIGINT,
		value VARCHAR(max),
		flow_document SUPER NOT NULL,

		-- TODO: Sort key? Primary key here doesn't do what you might think it does.
		PRIMARY KEY (key1, "key!2", nullableKey)
);

COMMENT ON TABLE "a-schema".target_table IS 'Generated for materialization test/sqlite of collection key/value';
COMMENT ON COLUMN "a-schema".target_table.key1 IS 'Key One Title
Key One Description
auto-generated projection of JSON at: /key1 with inferred types: [integer]';
COMMENT ON COLUMN "a-schema".target_table."key!2" IS 'auto-generated projection of JSON at: /key!2 with inferred types: [boolean]';
COMMENT ON COLUMN "a-schema".target_table.nullableKey IS 'auto-generated projection of JSON at: /nullableKey with inferred types: [string null]';
COMMENT ON COLUMN "a-schema".target_table.Camel_Case IS 'auto-generated projection of JSON at: /Camel_Case with inferred types: [integer]';
COMMENT ON COLUMN "a-schema".target_table."a Time" IS 'auto-generated projection of JSON at: /a Time with inferred types: [string]';
COMMENT ON COLUMN "a-schema".target_table."array" IS 'This is an array!
auto-generated projection of JSON at: /array with inferred types: [array]';
COMMENT ON COLUMN "a-schema".target_table.lower_case IS 'auto-generated projection of JSON at: /lower_case with inferred types: [integer]';
COMMENT ON COLUMN "a-schema".target_table.value IS 'auto-generated projection of JSON at: /value with inferred types: [string]';
COMMENT ON COLUMN "a-schema".target_table.flow_document IS 'user-provided projection of JSON at:  with inferred types: [object]';
--- End "a-schema".target_table createTargetTable ---

--- Begin "Delta Updates" createTargetTable ---

CREATE TABLE IF NOT EXISTS "Delta Updates" (
		theKey VARCHAR(max) NOT NULL,
		nullableKey VARCHAR(max),
		aValue BIGINT
);

COMMENT ON TABLE "Delta Updates" IS 'Generated for materialization test/sqlite of collection delta/updates';
COMMENT ON COLUMN "Delta Updates".theKey IS 'auto-generated projection of JSON at: /theKey with inferred types: [string]';
COMMENT ON COLUMN "Delta Updates".nullableKey IS 'auto-generated projection of JSON at: /nullableKey with inferred types: [string null]';
COMMENT ON COLUMN "Delta Updates".aValue IS 'A super-awesome value.
auto-generated projection of JSON at: /aValue with inferred types: [integer]';
--- End "Delta Updates" createTargetTable ---

--- Begin "a-schema".target_table createLoadTable ---

CREATE TEMPORARY TABLE IF NOT EXISTS flow_temp_table_0 (
		key1 BIGINT NOT NULL,
		"key!2" BOOLEAN NOT NULL,
		nullableKey VARCHAR(max)
);
--- End "a-schema".target_table createLoadTable ---

--- Begin "Delta Updates" createLoadTable ---

CREATE TEMPORARY TABLE IF NOT EXISTS flow_temp_table_1 (
		theKey VARCHAR(max) NOT NULL,
		nullableKey VARCHAR(max)
);
--- End "Delta Updates" createLoadTable ---

--- Begin "a-schema".target_table createStoreTable ---

CREATE TEMPORARY TABLE IF NOT EXISTS flow_temp_table_0 (
	LIKE "a-schema".target_table
);
--- End "a-schema".target_table createStoreTable ---

--- Begin "Delta Updates" createStoreTable ---

CREATE TEMPORARY TABLE IF NOT EXISTS flow_temp_table_1 (
	LIKE "Delta Updates"
);
--- End "Delta Updates" createStoreTable ---

--- Begin "a-schema".target_table truncateTempTable ---

TRUNCATE flow_temp_table_0;
--- End "a-schema".target_table truncateTempTable ---

--- Begin "Delta Updates" truncateTempTable ---

TRUNCATE flow_temp_table_1;
--- End "Delta Updates" truncateTempTable ---

--- Begin "a-schema".target_table storeUpdateDeleteExisting ---

DELETE FROM "a-schema".target_table
USING flow_temp_table_0
WHERE "a-schema".target_table.key1 = flow_temp_table_0.key1 AND "a-schema".target_table."key!2" = flow_temp_table_0."key!2" AND "a-schema".target_table.nullableKey = flow_temp_table_0.nullableKey;
--- End "a-schema".target_table storeUpdateDeleteExisting ---

--- Begin "Delta Updates" storeUpdateDeleteExisting ---

DELETE FROM "Delta Updates"
USING flow_temp_table_1
WHERE "Delta Updates".theKey = flow_temp_table_1.theKey AND "Delta Updates".nullableKey = flow_temp_table_1.nullableKey;
--- End "Delta Updates" storeUpdateDeleteExisting ---

--- Begin "a-schema".target_table storeUpdate ---

INSERT INTO "a-schema".target_table  
SELECT * FROM flow_temp_table_0;
--- End "a-schema".target_table storeUpdate ---

--- Begin "Delta Updates" storeUpdate ---

INSERT INTO "Delta Updates"  
SELECT * FROM flow_temp_table_1;
--- End "Delta Updates" storeUpdate ---

--- Begin "a-schema".target_table loadQuery ---

SELECT 0, r.flow_document
	FROM flow_temp_table_0 AS l
	JOIN "a-schema".target_table AS r
		 ON  l.key1 = r.key1
		 AND l."key!2" = r."key!2"
		 AND l.nullableKey = r.nullableKey

--- End "a-schema".target_table loadQuery ---

--- Begin "Delta Updates" loadQuery ---

SELECT * FROM (SELECT -1, CAST(NULL AS SUPER) LIMIT 0) as nodoc

--- End "Delta Updates" loadQuery ---

--- Begin Fence Get ---

SELECT 1 FROM path."To".checkpoints WHERE
	materialization = 'some/Materialization'
	AND   key_begin = 1122867
	AND   key_end   = 4293844428
	AND   fence     = 123;
--- End Fence Get ---
--- Begin Fence Update ---

UPDATE path."To".checkpoints
	SET   checkpoint = 'AAECAwQFBgcICQ=='
	WHERE materialization = 'some/Materialization'
	AND   key_begin = 1122867
	AND   key_end   = 4293844428
	AND   fence     = 123;
--- End Fence Update ---
--- Begin Copy From S3 ---

COPY my_temp_table
FROM 's3://some_bucket'
CREDENTIALS 'aws_access_key_id=accessKeyID;aws_secret_access_key=secretKey'
REGION 'us-somewhere-1'
json 'auto';
--- End Copy From S3 ---

