--- Begin "a-schema".target_table createTargetTable ---
CREATE TABLE IF NOT EXISTS "a-schema".target_table (
	key1 BIGINT,
	"key!2" BOOLEAN,
	Camel_Case BIGINT,
	"a Time" TIMESTAMPTZ,
	"array" SUPER,
	lower_case BIGINT,
	value TEXT,
	flow_document SUPER
);

COMMENT ON TABLE "a-schema".target_table IS 'Generated for materialization test/sqlite of collection key/value';
COMMENT ON COLUMN "a-schema".target_table.key1 IS 'Key One Title
Key One Description
auto-generated projection of JSON at: /key1 with inferred types: [integer]';
COMMENT ON COLUMN "a-schema".target_table."key!2" IS 'auto-generated projection of JSON at: /key!2 with inferred types: [boolean]';
COMMENT ON COLUMN "a-schema".target_table.Camel_Case IS 'auto-generated projection of JSON at: /Camel_Case with inferred types: [integer]';
COMMENT ON COLUMN "a-schema".target_table."a Time" IS 'auto-generated projection of JSON at: /a Time with inferred types: [string]';
COMMENT ON COLUMN "a-schema".target_table."array" IS 'This is an array!
auto-generated projection of JSON at: /array with inferred types: [array]';
COMMENT ON COLUMN "a-schema".target_table.lower_case IS 'auto-generated projection of JSON at: /lower_case with inferred types: [integer]';
COMMENT ON COLUMN "a-schema".target_table.value IS 'auto-generated projection of JSON at: /value with inferred types: [string]';
COMMENT ON COLUMN "a-schema".target_table.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';
--- End "a-schema".target_table createTargetTable ---

--- Begin "Delta Updates" createTargetTable ---
CREATE TABLE IF NOT EXISTS "Delta Updates" (
	theKey TEXT,
	aValue BIGINT
);

COMMENT ON TABLE "Delta Updates" IS 'Generated for materialization test/sqlite of collection delta/updates';
COMMENT ON COLUMN "Delta Updates".theKey IS 'auto-generated projection of JSON at: /theKey with inferred types: [string]';
COMMENT ON COLUMN "Delta Updates".aValue IS 'A super-awesome value.
auto-generated projection of JSON at: /aValue with inferred types: [integer]';
--- End "Delta Updates" createTargetTable ---

--- Begin "a-schema".target_table createStoreTable ---
CREATE TEMPORARY TABLE flow_temp_table_0 (
	LIKE "a-schema".target_table
);
--- End "a-schema".target_table createStoreTable ---

--- Begin "Delta Updates" createStoreTable ---
CREATE TEMPORARY TABLE flow_temp_table_1 (
	LIKE "Delta Updates"
);
--- End "Delta Updates" createStoreTable ---

--- Begin "a-schema".target_table mergeInto ---
MERGE INTO "a-schema".target_table
USING flow_temp_table_0 AS r
ON "a-schema".target_table.key1 = r.key1 AND "a-schema".target_table."key!2" = r."key!2"
WHEN MATCHED THEN
	UPDATE SET Camel_Case = r.Camel_Case, "a Time" = r."a Time", "array" = r."array", lower_case = r.lower_case, value = r.value, flow_document = r.flow_document
WHEN NOT MATCHED THEN
	INSERT (key1, "key!2", Camel_Case, "a Time", "array", lower_case, value, flow_document)
	VALUES (r.key1, r."key!2", r.Camel_Case, r."a Time", r."array", r.lower_case, r.value, r.flow_document);
--- End "a-schema".target_table mergeInto ---

--- Begin "Delta Updates" mergeInto ---
MERGE INTO "Delta Updates"
USING flow_temp_table_1 AS r
ON "Delta Updates".theKey = r.theKey
WHEN MATCHED THEN
	UPDATE SET aValue = r.aValue
WHEN NOT MATCHED THEN
	INSERT (theKey, aValue)
	VALUES (r.theKey, r.aValue);
--- End "Delta Updates" mergeInto ---

--- Begin "a-schema".target_table loadQuery ---
SELECT 0, r.flow_document
	FROM flow_temp_table_0 AS l
	JOIN "a-schema".target_table AS r
		 ON  l.key1 = r.key1
		 AND l."key!2" = r."key!2"
--- End "a-schema".target_table loadQuery ---

--- Begin "Delta Updates" loadQuery ---
SELECT * FROM (SELECT -1, CAST(NULL AS SUPER) LIMIT 0) as nodoc
--- End "Delta Updates" loadQuery ---

--- Begin "a-schema".target_table createLoadTable (no varchar length) ---
CREATE TEMPORARY TABLE flow_temp_table_0 (
	key1 BIGINT,
	"key!2" BOOLEAN
);
--- End "a-schema".target_table createLoadTable (no varchar length) ---

--- Begin "Delta Updates" createLoadTable (no varchar length) ---
CREATE TEMPORARY TABLE flow_temp_table_1 (
	theKey TEXT
);
--- End "Delta Updates" createLoadTable (no varchar length) ---

--- Begin "a-schema".target_table createLoadTable (with varchar length) ---
CREATE TEMPORARY TABLE flow_temp_table_0 (
	key1 BIGINT,
	"key!2" BOOLEAN
);
--- End "a-schema".target_table createLoadTable (with varchar length) ---

--- Begin "Delta Updates" createLoadTable (with varchar length) ---
CREATE TEMPORARY TABLE flow_temp_table_1 (
	theKey VARCHAR(400)
);
--- End "Delta Updates" createLoadTable (with varchar length) ---

--- Begin Fence Update ---
UPDATE path."To".checkpoints
	SET   checkpoint = 'AAECAwQFBgcICQ=='
	WHERE materialization = 'some/Materialization'
	AND   key_begin = 1122867
	AND   key_end   = 4293844428
	AND   fence     = 123;
--- End Fence Update ---

--- Begin Copy From S3 With Truncation---
COPY my_temp_table
FROM 's3://some_bucket'
CREDENTIALS 'aws_access_key_id=accessKeyID;aws_secret_access_key=secretKey'
REGION 'us-somewhere-1'
JSON 'auto ignorecase'
DATEFORMAT 'auto'
TIMEFORMAT 'auto'
TRUNCATECOLUMNS;
--- End Copy From S3 With Truncation ---

--- Begin Copy From S3 Without Truncation---
COPY my_temp_table
FROM 's3://some_bucket'
CREDENTIALS 'aws_access_key_id=accessKeyID;aws_secret_access_key=secretKey'
REGION 'us-somewhere-1'
JSON 'auto ignorecase'
DATEFORMAT 'auto'
TIMEFORMAT 'auto';
--- End Copy From S3 Without Truncation ---
