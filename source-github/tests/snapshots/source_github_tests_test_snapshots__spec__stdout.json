[
  {
    "configSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "properties": {
        "api_url": {
          "default": "https://api.github.com/",
          "description": "Please enter your basic URL from self-hosted GitHub instance or leave it empty to use GitHub.",
          "examples": [
            "https://github.com",
            "https://github.company.org"
          ],
          "order": 3,
          "title": "API URL",
          "type": "string"
        },
        "branches": {
          "description": "List of GitHub repository branches to pull commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified for a repository, the default branch will be pulled.",
          "examples": [
            "airbytehq/airbyte/master",
            "airbytehq/airbyte/my-branch"
          ],
          "items": {
            "type": "string"
          },
          "order": 4,
          "title": "Branches",
          "type": "array"
        },
        "credentials": {
          "discriminator": {
            "propertyName": "option_title"
          },
          "oneOf": [
            {
              "properties": {
                "access_token": {
                  "airbyte_secret": true,
                  "description": "OAuth access token",
                  "title": "Access Token",
                  "type": "string"
                },
                "client_id": {
                  "airbyte_secret": true,
                  "description": "client_id",
                  "title": "client_id",
                  "type": "string"
                },
                "client_secret": {
                  "airbyte_secret": true,
                  "description": "client_secret",
                  "title": "client_secret",
                  "type": "string"
                },
                "option_title": {
                  "const": "OAuth Credentials",
                  "default": "OAuth Credentials",
                  "order": 0,
                  "type": "string"
                }
              },
              "required": [
                "access_token"
              ],
              "title": "OAuth",
              "type": "object",
              "x-oauth2-provider": "github"
            },
            {
              "properties": {
                "option_title": {
                  "const": "PAT Credentials",
                  "default": "PAT Credentials",
                  "order": 0,
                  "type": "string"
                },
                "personal_access_token": {
                  "airbyte_secret": true,
                  "description": "Log into GitHub and then generate a personal access token: https://github.com/settings/tokens. To load balance your API quota consumption across multiple API tokens, input multipletokens separated with \",\"",
                  "title": "Personal Access Tokens",
                  "type": "string"
                }
              },
              "required": [
                "personal_access_token"
              ],
              "title": "Personal Access Token",
              "type": "object"
            }
          ],
          "order": 5
        },
        "repositories": {
          "description": "List of GitHub organizations/repositories, e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get all repositories from organization and `airbytehq/a* for matching multiple repositories by pattern.",
          "examples": [
            "estuary/flow",
            "estuary/*",
            "estuary/connectors"
          ],
          "items": {
            "pattern": "^[\\w.-]+/(([\\w.-]*\\*)|[\\w.-]+(?<!\\.git))$",
            "type": "string"
          },
          "minItems": 1,
          "order": 1,
          "title": "GitHub Repositories",
          "type": "array"
        },
        "start_date": {
          "description": "The date from which you'd like to replicate data from GitHub in the format YYYY-MM-DDT00:00:00Z. For the streams which support this configuration, only data generated on or after the startdate will be replicated. This field doesn't apply to all streams, see the docs for more info: https://go.estuary.dev/xLGlPL",
          "examples": [
            "2017-01-25T00:00:00Z"
          ],
          "format": "date-time",
          "order": 0,
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
          "title": "Start Date",
          "type": "string"
        }
      },
      "required": [
        "start_date",
        "repositories",
        "credentials"
      ],
      "title": "GitHub Source Spec",
      "type": "object"
    },
    "documentationUrl": "https://go.estuary.dev/xLGlPL",
    "oauth2": {
      "accessTokenBody": "{\"client_id\": \"{{{ client_id }}}\", \"client_secret\": \"{{{ client_secret }}}\", \"redirect_uri\": \"{{{ redirect_uri }}}\", \"code\": \"{{{ code }}}\"}",
      "accessTokenHeaders": {
        "Accept": "application/json"
      },
      "accessTokenResponseMap": {
        "access_token": "/access_token"
      },
      "accessTokenUrlTemplate": "https://github.com/login/oauth/access_token",
      "authUrlTemplate": "https://github.com/login/oauth/authorize?client_id={{#urlencode}}{{{ client_id }}}{{/urlencode}}&redirect_uri={{#urlencode}}{{{ redirect_uri }}}{{/urlencode}}&scope=repo%20read:org%20read:repo_hook%20read:user%20read:discussion%20workflow&state={{#urlencode}}{{{ state }}}{{/urlencode}}",
      "provider": "github"
    },
    "protocol": 3032023,
    "resourceConfigSchema": {
      "additionalProperties": false,
      "description": "ResourceConfig encodes a configured resource stream",
      "properties": {
        "cursorField": {
          "items": {
            "type": "string"
          },
          "title": "Cursor Field",
          "type": "array"
        },
        "namespace": {
          "description": "Enclosing schema namespace of this resource",
          "title": "Namespace",
          "type": "string"
        },
        "stream": {
          "description": "Name of this stream",
          "title": "Stream",
          "type": "string"
        },
        "syncMode": {
          "description": "Sync this resource incrementally, or fully refresh it every run",
          "enum": [
            "full_refresh",
            "incremental"
          ],
          "title": "Sync Mode",
          "type": "string"
        }
      },
      "required": [
        "stream",
        "syncMode"
      ],
      "title": "ResourceConfig",
      "type": "object"
    },
    "resourcePathPointers": [
      "/namespace",
      "/stream"
    ]
  }
]
