[
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of an application role.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "defaultGroups": {
          "description": "The groups that are granted default access for this application role.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "defaultGroupsDetails": {
          "description": "Details of default groups assigned to application roles.",
          "items": {
            "description": "Information about a specific default group.",
            "properties": {
              "groupId": {
                "description": "The unique identifier of the group.",
                "type": [
                  "null",
                  "string"
                ]
              },
              "name": {
                "description": "The name of the group.",
                "type": [
                  "null",
                  "string"
                ]
              },
              "self": {
                "description": "The URL for accessing the group details.",
                "type": [
                  "null",
                  "string"
                ]
              }
            },
            "type": [
              "null",
              "object"
            ]
          },
          "type": [
            "null",
            "array"
          ]
        },
        "defined": {
          "description": "Deprecated.",
          "type": "boolean"
        },
        "groupDetails": {
          "description": "Details about the groups associated with the application role.",
          "items": {
            "type": [
              "null",
              "object"
            ]
          },
          "type": [
            "null",
            "array"
          ]
        },
        "groups": {
          "description": "The groups associated with the application role.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "hasUnlimitedSeats": {
          "description": "Indicates if the application role has unlimited user seats.",
          "type": "boolean"
        },
        "key": {
          "description": "The key identifier of the application role.",
          "type": "string"
        },
        "name": {
          "description": "The display name of the application role.",
          "type": "string"
        },
        "numberOfSeats": {
          "description": "The maximum count of users allowed on the license.",
          "type": "integer"
        },
        "platform": {
          "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
          "type": "boolean"
        },
        "remainingSeats": {
          "description": "The count of remaining user seats on the license.",
          "type": "integer"
        },
        "selectedByDefault": {
          "description": "Determines if this application role should be selected by default on user creation.",
          "type": "boolean"
        },
        "userCount": {
          "description": "The total count of users that are counted against the license limit.",
          "type": "integer"
        },
        "userCountDescription": {
          "description": "Describes the type of users being counted against your license. For more information, refer to the provided link.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/key"
    ],
    "recommendedName": "application_roles",
    "resourceConfig": {
      "stream": "application_roles",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "List of system avatars.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "fileName": {
          "description": "The file name of the avatar icon. Returned for system avatars.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the avatar.",
          "type": "string"
        },
        "isDeletable": {
          "description": "Whether the avatar can be deleted.",
          "readOnly": true,
          "type": "boolean"
        },
        "isSelected": {
          "description": "Whether the avatar is used in Jira. For example, shown as a project's avatar.",
          "readOnly": true,
          "type": "boolean"
        },
        "isSystemAvatar": {
          "description": "Whether the avatar is a system avatar.",
          "readOnly": true,
          "type": "boolean"
        },
        "owner": {
          "description": "The owner of the avatar. For a system avatar, the owner is null (and nothing is returned). For non-system avatars, this is the appropriate identifier, such as the ID for a project or the account ID for a user.",
          "readOnly": true,
          "type": "string"
        },
        "urls": {
          "additionalProperties": true,
          "description": "The list of avatar icon URLs.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "avatars",
    "resourceConfig": {
      "stream": "avatars",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "id": {
          "description": "Unique identifier of the board.",
          "type": [
            "null",
            "integer"
          ]
        },
        "location": {
          "description": "Information about the location of the board.",
          "properties": {
            "avatarURI": {
              "description": "URI for the avatar of the board location.",
              "type": [
                "null",
                "string"
              ]
            },
            "displayName": {
              "description": "Display name of the board location.",
              "type": [
                "null",
                "string"
              ]
            },
            "name": {
              "description": "Name of the board location.",
              "type": [
                "null",
                "string"
              ]
            },
            "projectId": {
              "description": "ID of the project to which the board location belongs.",
              "type": [
                "null",
                "integer"
              ]
            },
            "projectKey": {
              "description": "Key of the project to which the board location belongs.",
              "type": [
                "null",
                "string"
              ]
            },
            "projectName": {
              "description": "Name of the project to which the board location belongs.",
              "type": [
                "null",
                "string"
              ]
            },
            "projectTypeKey": {
              "description": "Type key of the project to which the board location belongs.",
              "type": [
                "null",
                "string"
              ]
            },
            "userAccountId": {
              "description": "Account ID of the user associated with the board location.",
              "type": [
                "null",
                "string"
              ]
            },
            "userId": {
              "description": "ID of the user associated with the board location.",
              "type": [
                "null",
                "integer"
              ]
            }
          },
          "type": [
            "null",
            "object"
          ]
        },
        "name": {
          "description": "Name of the board.",
          "type": [
            "null",
            "string"
          ]
        },
        "projectId": {
          "description": "ID of the project to which the board belongs.",
          "type": [
            "null",
            "string"
          ]
        },
        "projectKey": {
          "description": "Key of the project to which the board belongs.",
          "type": [
            "null",
            "string"
          ]
        },
        "self": {
          "description": "URI that points to the board data.",
          "type": [
            "null",
            "string"
          ]
        },
        "type": {
          "description": "Type of the board.",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "boards",
    "resourceConfig": {
      "stream": "boards",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "boardId": {
          "description": "The unique identifier of the board where the issue belongs",
          "type": "integer"
        },
        "created": {
          "description": "The date and time when the issue was created",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "expand": {
          "description": "A parameter indicating the details to be included in the response",
          "type": "string"
        },
        "fields": {
          "description": "Fields associated with the issues on the board",
          "properties": {
            "closedSprints": {
              "description": "List of sprints that are closed related to the issue",
              "type": [
                "null",
                "object"
              ]
            },
            "comment": {
              "description": "Comments made on the issue",
              "items": {
                "type": "object"
              },
              "type": [
                "null",
                "array"
              ]
            },
            "created": {
              "description": "The date and time when the issue was created",
              "format": "date-time",
              "type": [
                "null",
                "string"
              ]
            },
            "description": {
              "description": "Description of the issue",
              "type": [
                "null",
                "string"
              ]
            },
            "epic": {
              "description": "Information about the epic the issue belongs to",
              "type": [
                "null",
                "object"
              ]
            },
            "flagged": {
              "description": "Indicator if the issue is flagged for attention",
              "type": [
                "null",
                "boolean"
              ]
            },
            "project": {
              "description": "Details of the project to which the issue is associated",
              "type": [
                "null",
                "object"
              ]
            },
            "sprint": {
              "description": "Details of the sprint in which the issue resides",
              "type": [
                "null",
                "object"
              ]
            },
            "timetracking": {
              "description": "Information related to time tracking for the issue",
              "type": [
                "null",
                "object"
              ]
            },
            "updated": {
              "description": "The date and time when the issue was last updated",
              "format": "date-time",
              "type": [
                "null",
                "string"
              ]
            },
            "worklog": {
              "description": "Log of work done on the issue",
              "items": {
                "type": "object"
              },
              "type": [
                "null",
                "array"
              ]
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The unique identifier of the issue",
          "type": "string"
        },
        "key": {
          "description": "The unique key of the issue",
          "type": "string"
        },
        "self": {
          "description": "URL of the issue",
          "type": "string"
        },
        "updated": {
          "description": "The date and time when the issue was last updated",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "board_issues",
    "resourceConfig": {
      "cursorField": [
        "updated"
      ],
      "stream": "board_issues",
      "syncMode": "incremental"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of a dashboard.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the dashboard.",
          "type": "string"
        },
        "editPermissions": {
          "description": "Details about the users/groups who have edit permissions for the dashboard.",
          "items": {
            "description": "List of edit permissions for the dashboard.",
            "type": [
              "null",
              "object"
            ]
          },
          "type": [
            "null",
            "array"
          ]
        },
        "editpermission": {
          "description": "List of items representing the specific edit permissions assigned for the dashboard.",
          "items": {
            "properties": {
              "group": {
                "description": "The group associated with the edit permission.",
                "type": [
                  "null",
                  "object"
                ]
              },
              "id": {
                "description": "The ID of the edit permission.",
                "type": [
                  "null",
                  "integer"
                ]
              },
              "project": {
                "description": "The project associated with the edit permission.",
                "type": [
                  "null",
                  "object"
                ]
              },
              "role": {
                "description": "The role associated with the edit permission.",
                "type": [
                  "null",
                  "object"
                ]
              },
              "type": {
                "description": "The type of edit permission.",
                "type": [
                  "null",
                  "string"
                ]
              },
              "user": {
                "description": "The user associated with the edit permission.",
                "type": [
                  "null",
                  "object"
                ]
              }
            },
            "type": [
              "null",
              "object"
            ]
          },
          "type": [
            "null",
            "array"
          ]
        },
        "id": {
          "description": "The ID of the dashboard.",
          "type": "string"
        },
        "isFavourite": {
          "description": "Indicates whether the dashboard is marked as a favorite by the user.",
          "type": "boolean"
        },
        "isWritable": {
          "description": "Indicates whether the dashboard is writable.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "name": {
          "description": "The name of the dashboard.",
          "type": "string"
        },
        "owner": {
          "description": "Details of the owner of the dashboard.",
          "properties": {
            "accountId": {
              "description": "The account ID of the dashboard owner.",
              "maxLength": 128,
              "type": "string"
            },
            "active": {
              "description": "Indicates whether the owner is an active user.",
              "type": "boolean"
            },
            "avatarUrls": {
              "description": "The avatars of the dashboard owner.",
              "properties": {
                "16x16": {
                  "description": "The URL of the user's 16x16 pixel avatar.",
                  "type": "string"
                },
                "24x24": {
                  "description": "The URL of the user's 24x24 pixel avatar.",
                  "type": "string"
                },
                "32x32": {
                  "description": "The URL of the user's 32x32 pixel avatar.",
                  "type": "string"
                },
                "48x48": {
                  "description": "The URL of the user's 48x48 pixel avatar.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "displayName": {
              "description": "The display name of the dashboard owner. Privacy settings may affect the display value.",
              "type": "string"
            },
            "key": {
              "description": "Deprecated. Use `accountId` for privacy reasons.",
              "type": "string"
            },
            "name": {
              "description": "Deprecated. Use `accountId` for privacy reasons.",
              "type": "string"
            },
            "self": {
              "description": "The URL of the dashboard owner details.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "popularity": {
          "description": "The number of users who have marked this dashboard as a favorite.",
          "type": "integer"
        },
        "rank": {
          "description": "The rank of the dashboard.",
          "type": "integer"
        },
        "self": {
          "description": "The URL of the dashboard details.",
          "type": "string"
        },
        "sharePermissions": {
          "description": "Details of any share permissions for the dashboard.",
          "items": {
            "properties": {
              "group": {
                "description": "The group that the filter is shared with.",
                "properties": {
                  "name": {
                    "description": "The name of group.",
                    "type": "string"
                  },
                  "self": {
                    "description": "The URL for these group details.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "The unique identifier of the share permission.",
                "type": "integer"
              },
              "project": {
                "description": "The project that the filter is shared with.",
                "properties": {
                  "archived": {
                    "description": "Whether the project is archived.",
                    "type": "boolean"
                  },
                  "archivedBy": {
                    "description": "The user who archived the project.",
                    "properties": {
                      "accountId": {
                        "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                        "maxLength": 128,
                        "type": "string"
                      },
                      "accountType": {
                        "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                        "enum": [
                          "atlassian",
                          "app",
                          "customer",
                          "unknown"
                        ],
                        "type": "string"
                      },
                      "active": {
                        "description": "Whether the user is active.",
                        "type": "boolean"
                      },
                      "applicationRoles": {
                        "description": "The application roles the user is assigned to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "defaultGroups": {
                                  "description": "The groups that are granted default access for this application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "defined": {
                                  "description": "Deprecated.",
                                  "type": "boolean"
                                },
                                "groups": {
                                  "description": "The groups associated with the application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "hasUnlimitedSeats": {
                                  "type": "boolean"
                                },
                                "key": {
                                  "description": "The key of the application role.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The display name of the application role.",
                                  "type": "string"
                                },
                                "numberOfSeats": {
                                  "description": "The maximum count of users on your license.",
                                  "type": "integer"
                                },
                                "platform": {
                                  "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                  "type": "boolean"
                                },
                                "remainingSeats": {
                                  "description": "The count of users remaining on your license.",
                                  "type": "integer"
                                },
                                "selectedByDefault": {
                                  "description": "Determines whether this application role should be selected by default on user creation.",
                                  "type": "boolean"
                                },
                                "userCount": {
                                  "description": "The number of users counting against your license.",
                                  "type": "integer"
                                },
                                "userCountDescription": {
                                  "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "avatarUrls": {
                        "description": "The avatars of the user.",
                        "properties": {
                          "16x16": {
                            "description": "The URL of the item's 16x16 pixel avatar.",
                            "type": "string"
                          },
                          "24x24": {
                            "description": "The URL of the item's 24x24 pixel avatar.",
                            "type": "string"
                          },
                          "32x32": {
                            "description": "The URL of the item's 32x32 pixel avatar.",
                            "type": "string"
                          },
                          "48x48": {
                            "description": "The URL of the item's 48x48 pixel avatar.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "displayName": {
                        "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                        "type": "string"
                      },
                      "emailAddress": {
                        "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "type": "string"
                      },
                      "expand": {
                        "description": "Expand options that include additional user details in the response.",
                        "type": "string"
                      },
                      "groups": {
                        "description": "The groups that the user belongs to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "The name of group.",
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL for these group details.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "key": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "type": "string"
                      },
                      "name": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL of the user.",
                        "type": "string"
                      },
                      "timeZone": {
                        "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "archivedDate": {
                    "description": "The date when the project was archived.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "assigneeType": {
                    "description": "The default assignee when creating issues for this project.",
                    "enum": [
                      "PROJECT_LEAD",
                      "UNASSIGNED"
                    ],
                    "type": "string"
                  },
                  "avatarUrls": {
                    "description": "The URLs of the project's avatars.",
                    "properties": {
                      "16x16": {
                        "description": "The URL of the item's 16x16 pixel avatar.",
                        "type": "string"
                      },
                      "24x24": {
                        "description": "The URL of the item's 24x24 pixel avatar.",
                        "type": "string"
                      },
                      "32x32": {
                        "description": "The URL of the item's 32x32 pixel avatar.",
                        "type": "string"
                      },
                      "48x48": {
                        "description": "The URL of the item's 48x48 pixel avatar.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "components": {
                    "description": "List of the components contained in the project.",
                    "items": {
                      "properties": {
                        "assignee": {
                          "description": "The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.",
                          "properties": {
                            "accountId": {
                              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                              "maxLength": 128,
                              "type": "string"
                            },
                            "accountType": {
                              "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                              "enum": [
                                "atlassian",
                                "app",
                                "customer",
                                "unknown"
                              ],
                              "type": "string"
                            },
                            "active": {
                              "description": "Whether the user is active.",
                              "type": "boolean"
                            },
                            "applicationRoles": {
                              "description": "The application roles the user is assigned to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "defaultGroups": {
                                        "description": "The groups that are granted default access for this application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "defined": {
                                        "description": "Deprecated.",
                                        "type": "boolean"
                                      },
                                      "groups": {
                                        "description": "The groups associated with the application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "hasUnlimitedSeats": {
                                        "type": "boolean"
                                      },
                                      "key": {
                                        "description": "The key of the application role.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The display name of the application role.",
                                        "type": "string"
                                      },
                                      "numberOfSeats": {
                                        "description": "The maximum count of users on your license.",
                                        "type": "integer"
                                      },
                                      "platform": {
                                        "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                        "type": "boolean"
                                      },
                                      "remainingSeats": {
                                        "description": "The count of users remaining on your license.",
                                        "type": "integer"
                                      },
                                      "selectedByDefault": {
                                        "description": "Determines whether this application role should be selected by default on user creation.",
                                        "type": "boolean"
                                      },
                                      "userCount": {
                                        "description": "The number of users counting against your license.",
                                        "type": "integer"
                                      },
                                      "userCountDescription": {
                                        "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "avatarUrls": {
                              "description": "The avatars of the user.",
                              "properties": {
                                "16x16": {
                                  "description": "The URL of the item's 16x16 pixel avatar.",
                                  "type": "string"
                                },
                                "24x24": {
                                  "description": "The URL of the item's 24x24 pixel avatar.",
                                  "type": "string"
                                },
                                "32x32": {
                                  "description": "The URL of the item's 32x32 pixel avatar.",
                                  "type": "string"
                                },
                                "48x48": {
                                  "description": "The URL of the item's 48x48 pixel avatar.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "displayName": {
                              "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                              "type": "string"
                            },
                            "emailAddress": {
                              "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "type": "string"
                            },
                            "expand": {
                              "description": "Expand options that include additional user details in the response.",
                              "type": "string"
                            },
                            "groups": {
                              "description": "The groups that the user belongs to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "name": {
                                        "description": "The name of group.",
                                        "type": "string"
                                      },
                                      "self": {
                                        "description": "The URL for these group details.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "key": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "locale": {
                              "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "type": "string"
                            },
                            "name": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "self": {
                              "description": "The URL of the user.",
                              "type": "string"
                            },
                            "timeZone": {
                              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "assigneeType": {
                          "description": "The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:\n\n *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.\n *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.\n *  `UNASSIGNED` an assignee is not set for issues created with this component.\n *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.\n\nDefault value: `PROJECT_DEFAULT`.  \nOptional when creating or updating a component.",
                          "enum": [
                            "PROJECT_DEFAULT",
                            "COMPONENT_LEAD",
                            "PROJECT_LEAD",
                            "UNASSIGNED"
                          ],
                          "type": "string"
                        },
                        "description": {
                          "description": "The description for the component. Optional when creating or updating a component.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The unique identifier for the component.",
                          "type": "string"
                        },
                        "isAssigneeTypeValid": {
                          "description": "Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.",
                          "type": "boolean"
                        },
                        "lead": {
                          "description": "The user details for the component's lead user.",
                          "properties": {
                            "accountId": {
                              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                              "maxLength": 128,
                              "type": "string"
                            },
                            "accountType": {
                              "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                              "enum": [
                                "atlassian",
                                "app",
                                "customer",
                                "unknown"
                              ],
                              "type": "string"
                            },
                            "active": {
                              "description": "Whether the user is active.",
                              "type": "boolean"
                            },
                            "applicationRoles": {
                              "description": "The application roles the user is assigned to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "defaultGroups": {
                                        "description": "The groups that are granted default access for this application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "defined": {
                                        "description": "Deprecated.",
                                        "type": "boolean"
                                      },
                                      "groups": {
                                        "description": "The groups associated with the application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "hasUnlimitedSeats": {
                                        "type": "boolean"
                                      },
                                      "key": {
                                        "description": "The key of the application role.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The display name of the application role.",
                                        "type": "string"
                                      },
                                      "numberOfSeats": {
                                        "description": "The maximum count of users on your license.",
                                        "type": "integer"
                                      },
                                      "platform": {
                                        "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                        "type": "boolean"
                                      },
                                      "remainingSeats": {
                                        "description": "The count of users remaining on your license.",
                                        "type": "integer"
                                      },
                                      "selectedByDefault": {
                                        "description": "Determines whether this application role should be selected by default on user creation.",
                                        "type": "boolean"
                                      },
                                      "userCount": {
                                        "description": "The number of users counting against your license.",
                                        "type": "integer"
                                      },
                                      "userCountDescription": {
                                        "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "avatarUrls": {
                              "description": "The avatars of the user.",
                              "properties": {
                                "16x16": {
                                  "description": "The URL of the item's 16x16 pixel avatar.",
                                  "type": "string"
                                },
                                "24x24": {
                                  "description": "The URL of the item's 24x24 pixel avatar.",
                                  "type": "string"
                                },
                                "32x32": {
                                  "description": "The URL of the item's 32x32 pixel avatar.",
                                  "type": "string"
                                },
                                "48x48": {
                                  "description": "The URL of the item's 48x48 pixel avatar.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "displayName": {
                              "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                              "type": "string"
                            },
                            "emailAddress": {
                              "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "type": "string"
                            },
                            "expand": {
                              "description": "Expand options that include additional user details in the response.",
                              "type": "string"
                            },
                            "groups": {
                              "description": "The groups that the user belongs to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "name": {
                                        "description": "The name of group.",
                                        "type": "string"
                                      },
                                      "self": {
                                        "description": "The URL for these group details.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "key": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "locale": {
                              "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "type": "string"
                            },
                            "name": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "self": {
                              "description": "The URL of the user.",
                              "type": "string"
                            },
                            "timeZone": {
                              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "leadAccountId": {
                          "description": "The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
                          "maxLength": 128,
                          "type": "string",
                          "writeOnly": true
                        },
                        "leadUserName": {
                          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.",
                          "type": "string"
                        },
                        "project": {
                          "description": "The key of the project the component is assigned to. Required when creating a component. Can't be updated.",
                          "type": "string"
                        },
                        "projectId": {
                          "description": "The ID of the project the component is assigned to.",
                          "type": "integer"
                        },
                        "realAssignee": {
                          "description": "The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.",
                          "properties": {
                            "accountId": {
                              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                              "maxLength": 128,
                              "type": "string"
                            },
                            "accountType": {
                              "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                              "enum": [
                                "atlassian",
                                "app",
                                "customer",
                                "unknown"
                              ],
                              "type": "string"
                            },
                            "active": {
                              "description": "Whether the user is active.",
                              "type": "boolean"
                            },
                            "applicationRoles": {
                              "description": "The application roles the user is assigned to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "defaultGroups": {
                                        "description": "The groups that are granted default access for this application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "defined": {
                                        "description": "Deprecated.",
                                        "type": "boolean"
                                      },
                                      "groups": {
                                        "description": "The groups associated with the application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "hasUnlimitedSeats": {
                                        "type": "boolean"
                                      },
                                      "key": {
                                        "description": "The key of the application role.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The display name of the application role.",
                                        "type": "string"
                                      },
                                      "numberOfSeats": {
                                        "description": "The maximum count of users on your license.",
                                        "type": "integer"
                                      },
                                      "platform": {
                                        "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                        "type": "boolean"
                                      },
                                      "remainingSeats": {
                                        "description": "The count of users remaining on your license.",
                                        "type": "integer"
                                      },
                                      "selectedByDefault": {
                                        "description": "Determines whether this application role should be selected by default on user creation.",
                                        "type": "boolean"
                                      },
                                      "userCount": {
                                        "description": "The number of users counting against your license.",
                                        "type": "integer"
                                      },
                                      "userCountDescription": {
                                        "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "avatarUrls": {
                              "description": "The avatars of the user.",
                              "properties": {
                                "16x16": {
                                  "description": "The URL of the item's 16x16 pixel avatar.",
                                  "type": "string"
                                },
                                "24x24": {
                                  "description": "The URL of the item's 24x24 pixel avatar.",
                                  "type": "string"
                                },
                                "32x32": {
                                  "description": "The URL of the item's 32x32 pixel avatar.",
                                  "type": "string"
                                },
                                "48x48": {
                                  "description": "The URL of the item's 48x48 pixel avatar.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "displayName": {
                              "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                              "type": "string"
                            },
                            "emailAddress": {
                              "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "type": "string"
                            },
                            "expand": {
                              "description": "Expand options that include additional user details in the response.",
                              "type": "string"
                            },
                            "groups": {
                              "description": "The groups that the user belongs to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "name": {
                                        "description": "The name of group.",
                                        "type": "string"
                                      },
                                      "self": {
                                        "description": "The URL for these group details.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "key": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "locale": {
                              "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "type": "string"
                            },
                            "name": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "self": {
                              "description": "The URL of the user.",
                              "type": "string"
                            },
                            "timeZone": {
                              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "realAssigneeType": {
                          "description": "The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:\n\n *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.\n *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.\n *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.\n *  `PROJECT_DEFAULT` when none of the preceding cases are true.",
                          "enum": [
                            "PROJECT_DEFAULT",
                            "COMPONENT_LEAD",
                            "PROJECT_LEAD",
                            "UNASSIGNED"
                          ],
                          "type": "string"
                        },
                        "self": {
                          "description": "The URL of the component.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "deleted": {
                    "description": "Whether the project is marked as deleted.",
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "description": "The user who marked the project as deleted.",
                    "properties": {
                      "accountId": {
                        "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                        "maxLength": 128,
                        "type": "string"
                      },
                      "accountType": {
                        "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                        "enum": [
                          "atlassian",
                          "app",
                          "customer",
                          "unknown"
                        ],
                        "type": "string"
                      },
                      "active": {
                        "description": "Whether the user is active.",
                        "type": "boolean"
                      },
                      "applicationRoles": {
                        "description": "The application roles the user is assigned to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "defaultGroups": {
                                  "description": "The groups that are granted default access for this application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "defined": {
                                  "description": "Deprecated.",
                                  "type": "boolean"
                                },
                                "groups": {
                                  "description": "The groups associated with the application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "hasUnlimitedSeats": {
                                  "type": "boolean"
                                },
                                "key": {
                                  "description": "The key of the application role.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The display name of the application role.",
                                  "type": "string"
                                },
                                "numberOfSeats": {
                                  "description": "The maximum count of users on your license.",
                                  "type": "integer"
                                },
                                "platform": {
                                  "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                  "type": "boolean"
                                },
                                "remainingSeats": {
                                  "description": "The count of users remaining on your license.",
                                  "type": "integer"
                                },
                                "selectedByDefault": {
                                  "description": "Determines whether this application role should be selected by default on user creation.",
                                  "type": "boolean"
                                },
                                "userCount": {
                                  "description": "The number of users counting against your license.",
                                  "type": "integer"
                                },
                                "userCountDescription": {
                                  "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "avatarUrls": {
                        "description": "The avatars of the user.",
                        "properties": {
                          "16x16": {
                            "description": "The URL of the item's 16x16 pixel avatar.",
                            "type": "string"
                          },
                          "24x24": {
                            "description": "The URL of the item's 24x24 pixel avatar.",
                            "type": "string"
                          },
                          "32x32": {
                            "description": "The URL of the item's 32x32 pixel avatar.",
                            "type": "string"
                          },
                          "48x48": {
                            "description": "The URL of the item's 48x48 pixel avatar.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "displayName": {
                        "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                        "type": "string"
                      },
                      "emailAddress": {
                        "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "type": "string"
                      },
                      "expand": {
                        "description": "Expand options that include additional user details in the response.",
                        "type": "string"
                      },
                      "groups": {
                        "description": "The groups that the user belongs to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "The name of group.",
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL for these group details.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "key": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "type": "string"
                      },
                      "name": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL of the user.",
                        "type": "string"
                      },
                      "timeZone": {
                        "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "deletedDate": {
                    "description": "The date when the project was marked as deleted.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "A brief description of the project.",
                    "type": "string"
                  },
                  "email": {
                    "description": "An email address associated with the project.",
                    "type": "string"
                  },
                  "expand": {
                    "description": "Expand options that include additional project details in the response.",
                    "type": "string"
                  },
                  "favourite": {
                    "description": "Whether the project is selected as a favorite.",
                    "type": "boolean"
                  },
                  "id": {
                    "description": "The ID of the project.",
                    "type": "string"
                  },
                  "insight": {
                    "description": "Insights about the project.",
                    "properties": {
                      "lastIssueUpdateTime": {
                        "description": "The last issue update time.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "totalIssueCount": {
                        "description": "Total issue count.",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "isPrivate": {
                    "description": "Whether the project is private.",
                    "type": "boolean"
                  },
                  "issueTypeHierarchy": {
                    "description": "The issue type hierarchy for the project",
                    "properties": {
                      "level": {
                        "items": {
                          "properties": {
                            "aboveLevelId": {
                              "type": "integer"
                            },
                            "belowLevelId": {
                              "type": "integer"
                            },
                            "externalUuid": {
                              "type": "string"
                            },
                            "globalHierarchyLevel": {
                              "enum": [
                                "SUBTASK",
                                "BASE",
                                "EPIC"
                              ],
                              "type": "string"
                            },
                            "id": {
                              "type": "integer"
                            },
                            "issueTypeIds": {
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "level": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "projectConfigurationId": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "issueTypes": {
                    "description": "List of the issue types available in the project.",
                    "items": {
                      "properties": {
                        "avatarId": {
                          "description": "The ID of the issue type's avatar.",
                          "type": "integer"
                        },
                        "description": {
                          "description": "The description of the issue type.",
                          "type": "string"
                        },
                        "entityId": {
                          "description": "Unique ID for next-gen projects.",
                          "type": "string"
                        },
                        "hierarchyLevel": {
                          "description": "Hierarchy level of the issue type.",
                          "type": "integer"
                        },
                        "iconUrl": {
                          "description": "The URL of the issue type's avatar.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The ID of the issue type.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the issue type.",
                          "type": "string"
                        },
                        "scope": {
                          "description": "Details of the next-gen projects the issue type is available in.",
                          "properties": {
                            "project": {
                              "description": "The project the item has scope in.",
                              "properties": {
                                "avatarUrls": {
                                  "description": "The URLs of the project's avatars.",
                                  "properties": {
                                    "16x16": {
                                      "description": "The URL of the item's 16x16 pixel avatar.",
                                      "type": "string"
                                    },
                                    "24x24": {
                                      "description": "The URL of the item's 24x24 pixel avatar.",
                                      "type": "string"
                                    },
                                    "32x32": {
                                      "description": "The URL of the item's 32x32 pixel avatar.",
                                      "type": "string"
                                    },
                                    "48x48": {
                                      "description": "The URL of the item's 48x48 pixel avatar.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "id": {
                                  "description": "The ID of the project.",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "The key of the project.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the project.",
                                  "type": "string"
                                },
                                "projectCategory": {
                                  "description": "The category the project belongs to.",
                                  "properties": {
                                    "description": {
                                      "description": "The name of the project category.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The ID of the project category.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The description of the project category.",
                                      "type": "string"
                                    },
                                    "self": {
                                      "description": "The URL of the project category.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "projectTypeKey": {
                                  "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                                  "enum": [
                                    "software",
                                    "service_desk",
                                    "business"
                                  ],
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL of the project details.",
                                  "type": "string"
                                },
                                "simplified": {
                                  "description": "Whether or not the project is simplified.",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "description": "The type of scope.",
                              "enum": [
                                "PROJECT",
                                "TEMPLATE"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "self": {
                          "description": "The URL of these issue type details.",
                          "type": "string"
                        },
                        "subtask": {
                          "description": "Whether this issue type is used to create subtasks.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "key": {
                    "description": "The key of the project.",
                    "type": "string"
                  },
                  "lead": {
                    "description": "The username of the project lead.",
                    "properties": {
                      "accountId": {
                        "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                        "maxLength": 128,
                        "type": "string"
                      },
                      "accountType": {
                        "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                        "enum": [
                          "atlassian",
                          "app",
                          "customer",
                          "unknown"
                        ],
                        "type": "string"
                      },
                      "active": {
                        "description": "Whether the user is active.",
                        "type": "boolean"
                      },
                      "applicationRoles": {
                        "description": "The application roles the user is assigned to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "defaultGroups": {
                                  "description": "The groups that are granted default access for this application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "defined": {
                                  "description": "Deprecated.",
                                  "type": "boolean"
                                },
                                "groups": {
                                  "description": "The groups associated with the application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "hasUnlimitedSeats": {
                                  "type": "boolean"
                                },
                                "key": {
                                  "description": "The key of the application role.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The display name of the application role.",
                                  "type": "string"
                                },
                                "numberOfSeats": {
                                  "description": "The maximum count of users on your license.",
                                  "type": "integer"
                                },
                                "platform": {
                                  "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                  "type": "boolean"
                                },
                                "remainingSeats": {
                                  "description": "The count of users remaining on your license.",
                                  "type": "integer"
                                },
                                "selectedByDefault": {
                                  "description": "Determines whether this application role should be selected by default on user creation.",
                                  "type": "boolean"
                                },
                                "userCount": {
                                  "description": "The number of users counting against your license.",
                                  "type": "integer"
                                },
                                "userCountDescription": {
                                  "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "avatarUrls": {
                        "description": "The avatars of the user.",
                        "properties": {
                          "16x16": {
                            "description": "The URL of the item's 16x16 pixel avatar.",
                            "type": "string"
                          },
                          "24x24": {
                            "description": "The URL of the item's 24x24 pixel avatar.",
                            "type": "string"
                          },
                          "32x32": {
                            "description": "The URL of the item's 32x32 pixel avatar.",
                            "type": "string"
                          },
                          "48x48": {
                            "description": "The URL of the item's 48x48 pixel avatar.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "displayName": {
                        "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                        "type": "string"
                      },
                      "emailAddress": {
                        "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "type": "string"
                      },
                      "expand": {
                        "description": "Expand options that include additional user details in the response.",
                        "type": "string"
                      },
                      "groups": {
                        "description": "The groups that the user belongs to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "The name of group.",
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL for these group details.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "key": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "type": "string"
                      },
                      "name": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL of the user.",
                        "type": "string"
                      },
                      "timeZone": {
                        "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "name": {
                    "description": "The name of the project.",
                    "type": "string"
                  },
                  "permissions": {
                    "description": "User permissions on the project",
                    "properties": {
                      "canEdit": {
                        "description": "Whether the logged user can edit the project.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "projectCategory": {
                    "description": "The category the project belongs to.",
                    "properties": {
                      "description": {
                        "description": "The description of the project category. Required on create, optional on update.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The ID of the project category.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the project category. Required on create, optional on update.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL of the project category.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "projectTypeKey": {
                    "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                    "enum": [
                      "software",
                      "service_desk",
                      "business"
                    ],
                    "type": "string"
                  },
                  "properties": {
                    "description": "Map of project properties",
                    "type": "object"
                  },
                  "retentionTillDate": {
                    "description": "The date when the project is deleted permanently.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "roles": {
                    "additionalProperties": true,
                    "description": "The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).",
                    "type": "object"
                  },
                  "self": {
                    "description": "The URL of the project details.",
                    "type": "string"
                  },
                  "simplified": {
                    "description": "Whether the project is simplified.",
                    "type": "boolean"
                  },
                  "style": {
                    "description": "The type of the project.",
                    "enum": [
                      "classic",
                      "next-gen"
                    ],
                    "type": "string"
                  },
                  "url": {
                    "description": "A link to information about this project, such as project documentation.",
                    "type": "string"
                  },
                  "uuid": {
                    "description": "Unique ID for next-gen projects.",
                    "type": "string"
                  },
                  "versions": {
                    "description": "The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).",
                    "items": {
                      "properties": {
                        "archived": {
                          "description": "Indicates that the version is archived. Optional when creating or updating a version.",
                          "type": "boolean"
                        },
                        "description": {
                          "description": "The description of the version. Optional when creating or updating a version.",
                          "type": "string"
                        },
                        "expand": {
                          "description": "Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.\n\nOptional for create and update.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The ID of the version.",
                          "type": "string"
                        },
                        "issuesStatusForFixVersion": {
                          "description": "If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.",
                          "properties": {
                            "done": {
                              "description": "Count of issues with status *done*.",
                              "type": "integer"
                            },
                            "inProgress": {
                              "description": "Count of issues with status *in progress*.",
                              "type": "integer"
                            },
                            "toDo": {
                              "description": "Count of issues with status *to do*.",
                              "type": "integer"
                            },
                            "unmapped": {
                              "description": "Count of issues with a status other than *to do*, *in progress*, and *done*.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "moveUnfixedIssuesTo": {
                          "description": "The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.",
                          "type": "string"
                        },
                        "operations": {
                          "description": "If the expand option `operations` is used, returns the list of operations available for this version.",
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              },
                              "iconClass": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "label": {
                                "type": "string"
                              },
                              "styleClass": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "weight": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "overdue": {
                          "description": "Indicates that the version is overdue.",
                          "type": "boolean"
                        },
                        "project": {
                          "description": "Deprecated. Use `projectId`.",
                          "type": "string"
                        },
                        "projectId": {
                          "description": "The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.",
                          "type": "integer"
                        },
                        "releaseDate": {
                          "description": "The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
                          "format": "date",
                          "type": "string"
                        },
                        "released": {
                          "description": "Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.",
                          "type": "boolean"
                        },
                        "self": {
                          "description": "The URL of the version.",
                          "type": "string"
                        },
                        "startDate": {
                          "description": "The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
                          "format": "date",
                          "type": "string"
                        },
                        "userReleaseDate": {
                          "description": "The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.",
                          "type": "string"
                        },
                        "userStartDate": {
                          "description": "The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "role": {
                "description": "The project role that the filter is shared with.  \nFor a request, specify the `id` for the role. You must also specify the `project` object and `id` for the project that the role is in.",
                "properties": {
                  "actors": {
                    "description": "The list of users who act in this role.",
                    "items": {
                      "properties": {
                        "actorGroup": {
                          "properties": {
                            "displayName": {
                              "description": "The display name of the group.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the group",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "actorUser": {
                          "properties": {
                            "accountId": {
                              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.",
                              "maxLength": 128,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "avatarUrl": {
                          "description": "The avatar of the role actor.",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "The display name of the role actor. For users, depending on the user\u2019s privacy setting, this may return an alternative value for the user's name.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The ID of the role actor.",
                          "type": "integer"
                        },
                        "name": {
                          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of role actor.",
                          "enum": [
                            "atlassian-group-role-actor",
                            "atlassian-user-role-actor"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "admin": {
                    "description": "Whether this role is the admin role for the project.",
                    "type": "boolean"
                  },
                  "currentUserRole": {
                    "description": "Whether the calling user is part of this role.",
                    "type": "boolean"
                  },
                  "default": {
                    "description": "Whether this role is the default role for the project",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "The description of the project role.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The ID of the project role.",
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the project role.",
                    "type": "string"
                  },
                  "roleConfigurable": {
                    "description": "Whether the roles are configurable for this project.",
                    "type": "boolean"
                  },
                  "scope": {
                    "description": "The scope of the role. Indicated for roles associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).",
                    "properties": {
                      "project": {
                        "description": "The project the item has scope in.",
                        "properties": {
                          "avatarUrls": {
                            "description": "The URLs of the project's avatars.",
                            "properties": {
                              "16x16": {
                                "description": "The URL of the item's 16x16 pixel avatar.",
                                "type": "string"
                              },
                              "24x24": {
                                "description": "The URL of the item's 24x24 pixel avatar.",
                                "type": "string"
                              },
                              "32x32": {
                                "description": "The URL of the item's 32x32 pixel avatar.",
                                "type": "string"
                              },
                              "48x48": {
                                "description": "The URL of the item's 48x48 pixel avatar.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "The ID of the project.",
                            "type": "string"
                          },
                          "key": {
                            "description": "The key of the project.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the project.",
                            "type": "string"
                          },
                          "projectCategory": {
                            "description": "The category the project belongs to.",
                            "properties": {
                              "description": {
                                "description": "The name of the project category.",
                                "type": "string"
                              },
                              "id": {
                                "description": "The ID of the project category.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The description of the project category.",
                                "type": "string"
                              },
                              "self": {
                                "description": "The URL of the project category.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "projectTypeKey": {
                            "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                            "enum": [
                              "software",
                              "service_desk",
                              "business"
                            ],
                            "type": "string"
                          },
                          "self": {
                            "description": "The URL of the project details.",
                            "type": "string"
                          },
                          "simplified": {
                            "description": "Whether or not the project is simplified.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "type": {
                        "description": "The type of scope.",
                        "enum": [
                          "PROJECT",
                          "TEMPLATE"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "self": {
                    "description": "The URL the project role details.",
                    "type": "string"
                  },
                  "translatedName": {
                    "description": "The translated name of the project role.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": {
                "description": "The type of share permission:\n\n *  `group` Shared with a group. If set in a request, then specify `sharePermission.group` as well.\n *  `project` Shared with a project. If set in a request, then specify `sharePermission.project` as well.\n *  `projectRole` Share with a project role in a project. This value is not returned in responses. It is used in requests, where it needs to be specify with `projectId` and `projectRoleId`.\n *  `global` Shared globally. If set in a request, no other `sharePermission` properties need to be specified.\n *  `loggedin` Shared with all logged-in users. Note: This value is set in a request by specifying `authenticated` as the `type`.\n *  `project-unknown` Shared with a project that the user does not have access to. Cannot be set in a request.",
                "enum": [
                  "group",
                  "project",
                  "projectRole",
                  "global",
                  "loggedin",
                  "authenticated",
                  "project-unknown"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "systemDashboard": {
          "description": "Information about the system dashboard.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "view": {
          "description": "The URL of the dashboard.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "dashboards",
    "resourceConfig": {
      "stream": "dashboards",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of a filter.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "approximateLastUsed": {
          "description": "The approximate last time the filter was used",
          "format": "date-time",
          "type": [
            "null",
            "string"
          ]
        },
        "description": {
          "description": "A description of the filter.",
          "type": "string"
        },
        "expand": {
          "description": "Expands the additional information about the filter",
          "type": "string"
        },
        "favourite": {
          "description": "Whether the filter is selected as a favorite by any users, not including the filter owner.",
          "readOnly": true,
          "type": "boolean"
        },
        "favouritedCount": {
          "description": "The count of how many users have selected this filter as a favorite, including the filter owner.",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "The unique identifier for the filter.",
          "readOnly": true,
          "type": "string"
        },
        "isWritable": {
          "description": "Indicates if the filter is writable or read-only",
          "type": "boolean"
        },
        "jql": {
          "description": "The JQL query for the filter. For example, *project = SSP AND issuetype = Bug*.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the filter. Must be unique.",
          "type": "string"
        },
        "owner": {
          "description": "The user who owns the filter. This is defaulted to the creator of the filter, however Jira administrators can change the owner of a shared filter in the admin settings.",
          "properties": {
            "accountId": {
              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
              "maxLength": 128,
              "type": "string"
            },
            "accountType": {
              "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
              "enum": [
                "atlassian",
                "app",
                "customer",
                "unknown"
              ],
              "readOnly": true,
              "type": "string"
            },
            "active": {
              "description": "Whether the user is active.",
              "readOnly": true,
              "type": "boolean"
            },
            "applicationRoles": {
              "description": "The application roles the user is assigned to.",
              "properties": {
                "callback": {
                  "type": "object"
                },
                "items": {
                  "items": {
                    "properties": {
                      "defaultGroups": {
                        "description": "The groups that are granted default access for this application role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true
                      },
                      "defined": {
                        "description": "Deprecated.",
                        "type": "boolean"
                      },
                      "groups": {
                        "description": "The groups associated with the application role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true
                      },
                      "hasUnlimitedSeats": {
                        "type": "boolean"
                      },
                      "key": {
                        "description": "The key of the application role.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The display name of the application role.",
                        "type": "string"
                      },
                      "numberOfSeats": {
                        "description": "The maximum count of users on your license.",
                        "type": "integer"
                      },
                      "platform": {
                        "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                        "type": "boolean"
                      },
                      "remainingSeats": {
                        "description": "The count of users remaining on your license.",
                        "type": "integer"
                      },
                      "selectedByDefault": {
                        "description": "Determines whether this application role should be selected by default on user creation.",
                        "type": "boolean"
                      },
                      "userCount": {
                        "description": "The number of users counting against your license.",
                        "type": "integer"
                      },
                      "userCountDescription": {
                        "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "max-results": {
                  "type": "integer"
                },
                "pagingCallback": {
                  "type": "object"
                },
                "size": {
                  "type": "integer"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "avatarUrls": {
              "description": "The avatars of the user.",
              "properties": {
                "16x16": {
                  "description": "The URL of the item's 16x16 pixel avatar.",
                  "type": "string"
                },
                "24x24": {
                  "description": "The URL of the item's 24x24 pixel avatar.",
                  "type": "string"
                },
                "32x32": {
                  "description": "The URL of the item's 32x32 pixel avatar.",
                  "type": "string"
                },
                "48x48": {
                  "description": "The URL of the item's 48x48 pixel avatar.",
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "displayName": {
              "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
              "readOnly": true,
              "type": "string"
            },
            "emailAddress": {
              "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            },
            "expand": {
              "description": "Expand options that include additional user details in the response.",
              "readOnly": true,
              "type": "string"
            },
            "groups": {
              "description": "The groups that the user belongs to.",
              "properties": {
                "callback": {
                  "type": "object"
                },
                "items": {
                  "items": {
                    "properties": {
                      "name": {
                        "description": "The name of group.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL for these group details.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "max-results": {
                  "type": "integer"
                },
                "pagingCallback": {
                  "type": "object"
                },
                "size": {
                  "type": "integer"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "key": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "string"
            },
            "locale": {
              "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "string"
            },
            "self": {
              "description": "The URL of the user.",
              "readOnly": true,
              "type": "string"
            },
            "timeZone": {
              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "searchUrl": {
          "description": "A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-3-filter-search-get) operation with the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the filter.",
          "readOnly": true,
          "type": "string"
        },
        "sharePermissions": {
          "description": "The groups and projects that the filter is shared with. This can be specified when updating a filter, but not when creating a filter.",
          "items": {
            "properties": {
              "group": {
                "description": "The group that the filter is shared with. For a request, specify the `name` property for the group.",
                "properties": {
                  "groupId": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "name": {
                    "description": "The name of group.",
                    "type": "string"
                  },
                  "self": {
                    "description": "The URL for these group details.",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "The unique identifier of the share permission.",
                "readOnly": true,
                "type": "integer"
              },
              "project": {
                "description": "The project that the filter is shared with. This is similar to the project object returned by [Get project](#api-rest-api-3-project-projectIdOrKey-get) but it contains a subset of the properties, which are: `self`, `id`, `key`, `assigneeType`, `name`, `roles`, `avatarUrls`, `projectType`, `simplified`.  \nFor a request, specify the `id` for the project.",
                "properties": {
                  "archived": {
                    "description": "Whether the project is archived.",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "archivedBy": {
                    "description": "The user who archived the project.",
                    "properties": {
                      "accountId": {
                        "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                        "maxLength": 128,
                        "type": "string"
                      },
                      "accountType": {
                        "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                        "enum": [
                          "atlassian",
                          "app",
                          "customer",
                          "unknown"
                        ],
                        "readOnly": true,
                        "type": "string"
                      },
                      "active": {
                        "description": "Whether the user is active.",
                        "readOnly": true,
                        "type": "boolean"
                      },
                      "applicationRoles": {
                        "description": "The application roles the user is assigned to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "defaultGroups": {
                                  "description": "The groups that are granted default access for this application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "defined": {
                                  "description": "Deprecated.",
                                  "type": "boolean"
                                },
                                "groups": {
                                  "description": "The groups associated with the application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "hasUnlimitedSeats": {
                                  "type": "boolean"
                                },
                                "key": {
                                  "description": "The key of the application role.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The display name of the application role.",
                                  "type": "string"
                                },
                                "numberOfSeats": {
                                  "description": "The maximum count of users on your license.",
                                  "type": "integer"
                                },
                                "platform": {
                                  "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                  "type": "boolean"
                                },
                                "remainingSeats": {
                                  "description": "The count of users remaining on your license.",
                                  "type": "integer"
                                },
                                "selectedByDefault": {
                                  "description": "Determines whether this application role should be selected by default on user creation.",
                                  "type": "boolean"
                                },
                                "userCount": {
                                  "description": "The number of users counting against your license.",
                                  "type": "integer"
                                },
                                "userCountDescription": {
                                  "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "avatarUrls": {
                        "description": "The avatars of the user.",
                        "properties": {
                          "16x16": {
                            "description": "The URL of the item's 16x16 pixel avatar.",
                            "type": "string"
                          },
                          "24x24": {
                            "description": "The URL of the item's 24x24 pixel avatar.",
                            "type": "string"
                          },
                          "32x32": {
                            "description": "The URL of the item's 32x32 pixel avatar.",
                            "type": "string"
                          },
                          "48x48": {
                            "description": "The URL of the item's 48x48 pixel avatar.",
                            "type": "string"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "displayName": {
                        "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "emailAddress": {
                        "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "expand": {
                        "description": "Expand options that include additional user details in the response.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The groups that the user belongs to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "The name of group.",
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL for these group details.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "key": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL of the user.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "timeZone": {
                        "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "archivedDate": {
                    "description": "The date when the project was archived.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "assigneeType": {
                    "description": "The default assignee when creating issues for this project.",
                    "enum": [
                      "PROJECT_LEAD",
                      "UNASSIGNED"
                    ],
                    "readOnly": true,
                    "type": "string"
                  },
                  "avatarUrls": {
                    "description": "The URLs of the project's avatars.",
                    "properties": {
                      "16x16": {
                        "description": "The URL of the item's 16x16 pixel avatar.",
                        "type": "string"
                      },
                      "24x24": {
                        "description": "The URL of the item's 24x24 pixel avatar.",
                        "type": "string"
                      },
                      "32x32": {
                        "description": "The URL of the item's 32x32 pixel avatar.",
                        "type": "string"
                      },
                      "48x48": {
                        "description": "The URL of the item's 48x48 pixel avatar.",
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "components": {
                    "description": "List of the components contained in the project.",
                    "items": {
                      "properties": {
                        "assignee": {
                          "description": "The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.",
                          "properties": {
                            "accountId": {
                              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                              "maxLength": 128,
                              "type": "string"
                            },
                            "accountType": {
                              "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                              "enum": [
                                "atlassian",
                                "app",
                                "customer",
                                "unknown"
                              ],
                              "readOnly": true,
                              "type": "string"
                            },
                            "active": {
                              "description": "Whether the user is active.",
                              "readOnly": true,
                              "type": "boolean"
                            },
                            "applicationRoles": {
                              "description": "The application roles the user is assigned to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "defaultGroups": {
                                        "description": "The groups that are granted default access for this application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "defined": {
                                        "description": "Deprecated.",
                                        "type": "boolean"
                                      },
                                      "groups": {
                                        "description": "The groups associated with the application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "hasUnlimitedSeats": {
                                        "type": "boolean"
                                      },
                                      "key": {
                                        "description": "The key of the application role.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The display name of the application role.",
                                        "type": "string"
                                      },
                                      "numberOfSeats": {
                                        "description": "The maximum count of users on your license.",
                                        "type": "integer"
                                      },
                                      "platform": {
                                        "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                        "type": "boolean"
                                      },
                                      "remainingSeats": {
                                        "description": "The count of users remaining on your license.",
                                        "type": "integer"
                                      },
                                      "selectedByDefault": {
                                        "description": "Determines whether this application role should be selected by default on user creation.",
                                        "type": "boolean"
                                      },
                                      "userCount": {
                                        "description": "The number of users counting against your license.",
                                        "type": "integer"
                                      },
                                      "userCountDescription": {
                                        "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "avatarUrls": {
                              "description": "The avatars of the user.",
                              "properties": {
                                "16x16": {
                                  "description": "The URL of the item's 16x16 pixel avatar.",
                                  "type": "string"
                                },
                                "24x24": {
                                  "description": "The URL of the item's 24x24 pixel avatar.",
                                  "type": "string"
                                },
                                "32x32": {
                                  "description": "The URL of the item's 32x32 pixel avatar.",
                                  "type": "string"
                                },
                                "48x48": {
                                  "description": "The URL of the item's 48x48 pixel avatar.",
                                  "type": "string"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "displayName": {
                              "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "emailAddress": {
                              "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "expand": {
                              "description": "Expand options that include additional user details in the response.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "groups": {
                              "description": "The groups that the user belongs to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "name": {
                                        "description": "The name of group.",
                                        "type": "string"
                                      },
                                      "self": {
                                        "description": "The URL for these group details.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "key": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "locale": {
                              "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "self": {
                              "description": "The URL of the user.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "timeZone": {
                              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "assigneeType": {
                          "description": "The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:\n\n *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.\n *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.\n *  `UNASSIGNED` an assignee is not set for issues created with this component.\n *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.\n\nDefault value: `PROJECT_DEFAULT`.  \nOptional when creating or updating a component.",
                          "enum": [
                            "PROJECT_DEFAULT",
                            "COMPONENT_LEAD",
                            "PROJECT_LEAD",
                            "UNASSIGNED"
                          ],
                          "type": "string"
                        },
                        "description": {
                          "description": "The description for the component. Optional when creating or updating a component.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The unique identifier for the component.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "isAssigneeTypeValid": {
                          "description": "Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.",
                          "readOnly": true,
                          "type": "boolean"
                        },
                        "lead": {
                          "description": "The user details for the component's lead user.",
                          "properties": {
                            "accountId": {
                              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                              "maxLength": 128,
                              "type": "string"
                            },
                            "accountType": {
                              "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                              "enum": [
                                "atlassian",
                                "app",
                                "customer",
                                "unknown"
                              ],
                              "readOnly": true,
                              "type": "string"
                            },
                            "active": {
                              "description": "Whether the user is active.",
                              "readOnly": true,
                              "type": "boolean"
                            },
                            "applicationRoles": {
                              "description": "The application roles the user is assigned to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "defaultGroups": {
                                        "description": "The groups that are granted default access for this application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "defined": {
                                        "description": "Deprecated.",
                                        "type": "boolean"
                                      },
                                      "groups": {
                                        "description": "The groups associated with the application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "hasUnlimitedSeats": {
                                        "type": "boolean"
                                      },
                                      "key": {
                                        "description": "The key of the application role.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The display name of the application role.",
                                        "type": "string"
                                      },
                                      "numberOfSeats": {
                                        "description": "The maximum count of users on your license.",
                                        "type": "integer"
                                      },
                                      "platform": {
                                        "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                        "type": "boolean"
                                      },
                                      "remainingSeats": {
                                        "description": "The count of users remaining on your license.",
                                        "type": "integer"
                                      },
                                      "selectedByDefault": {
                                        "description": "Determines whether this application role should be selected by default on user creation.",
                                        "type": "boolean"
                                      },
                                      "userCount": {
                                        "description": "The number of users counting against your license.",
                                        "type": "integer"
                                      },
                                      "userCountDescription": {
                                        "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "avatarUrls": {
                              "description": "The avatars of the user.",
                              "properties": {
                                "16x16": {
                                  "description": "The URL of the item's 16x16 pixel avatar.",
                                  "type": "string"
                                },
                                "24x24": {
                                  "description": "The URL of the item's 24x24 pixel avatar.",
                                  "type": "string"
                                },
                                "32x32": {
                                  "description": "The URL of the item's 32x32 pixel avatar.",
                                  "type": "string"
                                },
                                "48x48": {
                                  "description": "The URL of the item's 48x48 pixel avatar.",
                                  "type": "string"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "displayName": {
                              "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "emailAddress": {
                              "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "expand": {
                              "description": "Expand options that include additional user details in the response.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "groups": {
                              "description": "The groups that the user belongs to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "name": {
                                        "description": "The name of group.",
                                        "type": "string"
                                      },
                                      "self": {
                                        "description": "The URL for these group details.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "key": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "locale": {
                              "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "self": {
                              "description": "The URL of the user.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "timeZone": {
                              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "leadAccountId": {
                          "description": "The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
                          "maxLength": 128,
                          "type": "string",
                          "writeOnly": true
                        },
                        "leadUserName": {
                          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.",
                          "type": "string"
                        },
                        "project": {
                          "description": "The key of the project the component is assigned to. Required when creating a component. Can't be updated.",
                          "type": "string"
                        },
                        "projectId": {
                          "description": "The ID of the project the component is assigned to.",
                          "readOnly": true,
                          "type": "integer"
                        },
                        "realAssignee": {
                          "description": "The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.",
                          "properties": {
                            "accountId": {
                              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                              "maxLength": 128,
                              "type": "string"
                            },
                            "accountType": {
                              "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                              "enum": [
                                "atlassian",
                                "app",
                                "customer",
                                "unknown"
                              ],
                              "readOnly": true,
                              "type": "string"
                            },
                            "active": {
                              "description": "Whether the user is active.",
                              "readOnly": true,
                              "type": "boolean"
                            },
                            "applicationRoles": {
                              "description": "The application roles the user is assigned to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "defaultGroups": {
                                        "description": "The groups that are granted default access for this application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "defined": {
                                        "description": "Deprecated.",
                                        "type": "boolean"
                                      },
                                      "groups": {
                                        "description": "The groups associated with the application role.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true
                                      },
                                      "hasUnlimitedSeats": {
                                        "type": "boolean"
                                      },
                                      "key": {
                                        "description": "The key of the application role.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The display name of the application role.",
                                        "type": "string"
                                      },
                                      "numberOfSeats": {
                                        "description": "The maximum count of users on your license.",
                                        "type": "integer"
                                      },
                                      "platform": {
                                        "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                        "type": "boolean"
                                      },
                                      "remainingSeats": {
                                        "description": "The count of users remaining on your license.",
                                        "type": "integer"
                                      },
                                      "selectedByDefault": {
                                        "description": "Determines whether this application role should be selected by default on user creation.",
                                        "type": "boolean"
                                      },
                                      "userCount": {
                                        "description": "The number of users counting against your license.",
                                        "type": "integer"
                                      },
                                      "userCountDescription": {
                                        "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "avatarUrls": {
                              "description": "The avatars of the user.",
                              "properties": {
                                "16x16": {
                                  "description": "The URL of the item's 16x16 pixel avatar.",
                                  "type": "string"
                                },
                                "24x24": {
                                  "description": "The URL of the item's 24x24 pixel avatar.",
                                  "type": "string"
                                },
                                "32x32": {
                                  "description": "The URL of the item's 32x32 pixel avatar.",
                                  "type": "string"
                                },
                                "48x48": {
                                  "description": "The URL of the item's 48x48 pixel avatar.",
                                  "type": "string"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "displayName": {
                              "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "emailAddress": {
                              "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "expand": {
                              "description": "Expand options that include additional user details in the response.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "groups": {
                              "description": "The groups that the user belongs to.",
                              "properties": {
                                "callback": {
                                  "type": "object"
                                },
                                "items": {
                                  "items": {
                                    "properties": {
                                      "name": {
                                        "description": "The name of group.",
                                        "type": "string"
                                      },
                                      "self": {
                                        "description": "The URL for these group details.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "max-results": {
                                  "type": "integer"
                                },
                                "pagingCallback": {
                                  "type": "object"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "key": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "locale": {
                              "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                              "type": "string"
                            },
                            "self": {
                              "description": "The URL of the user.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "timeZone": {
                              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "realAssigneeType": {
                          "description": "The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:\n\n *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.\n *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.\n *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.\n *  `PROJECT_DEFAULT` when none of the preceding cases are true.",
                          "enum": [
                            "PROJECT_DEFAULT",
                            "COMPONENT_LEAD",
                            "PROJECT_LEAD",
                            "UNASSIGNED"
                          ],
                          "readOnly": true,
                          "type": "string"
                        },
                        "self": {
                          "description": "The URL of the component.",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "deleted": {
                    "description": "Whether the project is marked as deleted.",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "description": "The user who marked the project as deleted.",
                    "properties": {
                      "accountId": {
                        "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                        "maxLength": 128,
                        "type": "string"
                      },
                      "accountType": {
                        "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                        "enum": [
                          "atlassian",
                          "app",
                          "customer",
                          "unknown"
                        ],
                        "readOnly": true,
                        "type": "string"
                      },
                      "active": {
                        "description": "Whether the user is active.",
                        "readOnly": true,
                        "type": "boolean"
                      },
                      "applicationRoles": {
                        "description": "The application roles the user is assigned to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "defaultGroups": {
                                  "description": "The groups that are granted default access for this application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "defined": {
                                  "description": "Deprecated.",
                                  "type": "boolean"
                                },
                                "groups": {
                                  "description": "The groups associated with the application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "hasUnlimitedSeats": {
                                  "type": "boolean"
                                },
                                "key": {
                                  "description": "The key of the application role.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The display name of the application role.",
                                  "type": "string"
                                },
                                "numberOfSeats": {
                                  "description": "The maximum count of users on your license.",
                                  "type": "integer"
                                },
                                "platform": {
                                  "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                  "type": "boolean"
                                },
                                "remainingSeats": {
                                  "description": "The count of users remaining on your license.",
                                  "type": "integer"
                                },
                                "selectedByDefault": {
                                  "description": "Determines whether this application role should be selected by default on user creation.",
                                  "type": "boolean"
                                },
                                "userCount": {
                                  "description": "The number of users counting against your license.",
                                  "type": "integer"
                                },
                                "userCountDescription": {
                                  "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "avatarUrls": {
                        "description": "The avatars of the user.",
                        "properties": {
                          "16x16": {
                            "description": "The URL of the item's 16x16 pixel avatar.",
                            "type": "string"
                          },
                          "24x24": {
                            "description": "The URL of the item's 24x24 pixel avatar.",
                            "type": "string"
                          },
                          "32x32": {
                            "description": "The URL of the item's 32x32 pixel avatar.",
                            "type": "string"
                          },
                          "48x48": {
                            "description": "The URL of the item's 48x48 pixel avatar.",
                            "type": "string"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "displayName": {
                        "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "emailAddress": {
                        "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "expand": {
                        "description": "Expand options that include additional user details in the response.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The groups that the user belongs to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "The name of group.",
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL for these group details.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "key": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL of the user.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "timeZone": {
                        "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "deletedDate": {
                    "description": "The date when the project was marked as deleted.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "description": {
                    "description": "A brief description of the project.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "email": {
                    "description": "An email address associated with the project.",
                    "type": "string"
                  },
                  "expand": {
                    "description": "Expand options that include additional project details in the response.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "favourite": {
                    "description": "Whether the project is selected as a favorite.",
                    "type": "boolean"
                  },
                  "id": {
                    "description": "The ID of the project.",
                    "type": "string"
                  },
                  "insight": {
                    "description": "Insights about the project.",
                    "properties": {
                      "lastIssueUpdateTime": {
                        "description": "The last issue update time.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "totalIssueCount": {
                        "description": "Total issue count.",
                        "readOnly": true,
                        "type": "integer"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "isPrivate": {
                    "description": "Whether the project is private.",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "issueTypeHierarchy": {
                    "description": "The issue type hierarchy for the project",
                    "properties": {
                      "level": {
                        "items": {
                          "properties": {
                            "aboveLevelId": {
                              "type": "integer"
                            },
                            "belowLevelId": {
                              "type": "integer"
                            },
                            "externalUuid": {
                              "type": "string"
                            },
                            "globalHierarchyLevel": {
                              "enum": [
                                "SUBTASK",
                                "BASE",
                                "EPIC"
                              ],
                              "type": "string"
                            },
                            "id": {
                              "type": "integer"
                            },
                            "issueTypeIds": {
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "level": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "projectConfigurationId": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "issueTypes": {
                    "description": "List of the issue types available in the project.",
                    "items": {
                      "properties": {
                        "avatarId": {
                          "description": "The ID of the issue type's avatar.",
                          "readOnly": true,
                          "type": "integer"
                        },
                        "description": {
                          "description": "The description of the issue type.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "entityId": {
                          "description": "Unique ID for next-gen projects.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "hierarchyLevel": {
                          "description": "Hierarchy level of the issue type.",
                          "readOnly": true,
                          "type": "integer"
                        },
                        "iconUrl": {
                          "description": "The URL of the issue type's avatar.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "id": {
                          "description": "The ID of the issue type.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the issue type.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "scope": {
                          "description": "Details of the next-gen projects the issue type is available in.",
                          "properties": {
                            "project": {
                              "description": "The project the item has scope in.",
                              "properties": {
                                "avatarUrls": {
                                  "description": "The URLs of the project's avatars.",
                                  "properties": {
                                    "16x16": {
                                      "description": "The URL of the item's 16x16 pixel avatar.",
                                      "type": "string"
                                    },
                                    "24x24": {
                                      "description": "The URL of the item's 24x24 pixel avatar.",
                                      "type": "string"
                                    },
                                    "32x32": {
                                      "description": "The URL of the item's 32x32 pixel avatar.",
                                      "type": "string"
                                    },
                                    "48x48": {
                                      "description": "The URL of the item's 48x48 pixel avatar.",
                                      "type": "string"
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "id": {
                                  "description": "The ID of the project.",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "The key of the project.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the project.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "projectCategory": {
                                  "description": "The category the project belongs to.",
                                  "properties": {
                                    "description": {
                                      "description": "The name of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The ID of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The description of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "self": {
                                      "description": "The URL of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "projectTypeKey": {
                                  "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                                  "enum": [
                                    "software",
                                    "service_desk",
                                    "business"
                                  ],
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL of the project details.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "simplified": {
                                  "description": "Whether or not the project is simplified.",
                                  "readOnly": true,
                                  "type": "boolean"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "type": {
                              "description": "The type of scope.",
                              "enum": [
                                "PROJECT",
                                "TEMPLATE"
                              ],
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "self": {
                          "description": "The URL of these issue type details.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "subtask": {
                          "description": "Whether this issue type is used to create subtasks.",
                          "readOnly": true,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "key": {
                    "description": "The key of the project.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "lead": {
                    "description": "The username of the project lead.",
                    "properties": {
                      "accountId": {
                        "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                        "maxLength": 128,
                        "type": "string"
                      },
                      "accountType": {
                        "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                        "enum": [
                          "atlassian",
                          "app",
                          "customer",
                          "unknown"
                        ],
                        "readOnly": true,
                        "type": "string"
                      },
                      "active": {
                        "description": "Whether the user is active.",
                        "readOnly": true,
                        "type": "boolean"
                      },
                      "applicationRoles": {
                        "description": "The application roles the user is assigned to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "defaultGroups": {
                                  "description": "The groups that are granted default access for this application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "defined": {
                                  "description": "Deprecated.",
                                  "type": "boolean"
                                },
                                "groups": {
                                  "description": "The groups associated with the application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "hasUnlimitedSeats": {
                                  "type": "boolean"
                                },
                                "key": {
                                  "description": "The key of the application role.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The display name of the application role.",
                                  "type": "string"
                                },
                                "numberOfSeats": {
                                  "description": "The maximum count of users on your license.",
                                  "type": "integer"
                                },
                                "platform": {
                                  "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                  "type": "boolean"
                                },
                                "remainingSeats": {
                                  "description": "The count of users remaining on your license.",
                                  "type": "integer"
                                },
                                "selectedByDefault": {
                                  "description": "Determines whether this application role should be selected by default on user creation.",
                                  "type": "boolean"
                                },
                                "userCount": {
                                  "description": "The number of users counting against your license.",
                                  "type": "integer"
                                },
                                "userCountDescription": {
                                  "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "avatarUrls": {
                        "description": "The avatars of the user.",
                        "properties": {
                          "16x16": {
                            "description": "The URL of the item's 16x16 pixel avatar.",
                            "type": "string"
                          },
                          "24x24": {
                            "description": "The URL of the item's 24x24 pixel avatar.",
                            "type": "string"
                          },
                          "32x32": {
                            "description": "The URL of the item's 32x32 pixel avatar.",
                            "type": "string"
                          },
                          "48x48": {
                            "description": "The URL of the item's 48x48 pixel avatar.",
                            "type": "string"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "displayName": {
                        "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "emailAddress": {
                        "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "expand": {
                        "description": "Expand options that include additional user details in the response.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The groups that the user belongs to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "The name of group.",
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL for these group details.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "key": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL of the user.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "timeZone": {
                        "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "name": {
                    "description": "The name of the project.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "permissions": {
                    "description": "User permissions on the project",
                    "properties": {
                      "canEdit": {
                        "description": "Whether the logged user can edit the project.",
                        "readOnly": true,
                        "type": "boolean"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "projectCategory": {
                    "description": "The category the project belongs to.",
                    "properties": {
                      "description": {
                        "description": "The description of the project category. Required on create, optional on update.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The ID of the project category.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the project category. Required on create, optional on update.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL of the project category.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "projectTypeKey": {
                    "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                    "enum": [
                      "software",
                      "service_desk",
                      "business"
                    ],
                    "readOnly": true,
                    "type": "string"
                  },
                  "properties": {
                    "additionalProperties": true,
                    "description": "Map of project properties",
                    "readOnly": true,
                    "type": "object"
                  },
                  "retentionTillDate": {
                    "description": "The date when the project is deleted permanently.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "roles": {
                    "additionalProperties": true,
                    "description": "The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).",
                    "readOnly": true,
                    "type": "object"
                  },
                  "self": {
                    "description": "The URL of the project details.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "simplified": {
                    "description": "Whether the project is simplified.",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "style": {
                    "description": "The type of the project.",
                    "enum": [
                      "classic",
                      "next-gen"
                    ],
                    "readOnly": true,
                    "type": "string"
                  },
                  "url": {
                    "description": "A link to information about this project, such as project documentation.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "uuid": {
                    "description": "Unique ID for next-gen projects.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "versions": {
                    "description": "The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).",
                    "items": {
                      "properties": {
                        "archived": {
                          "description": "Indicates that the version is archived. Optional when creating or updating a version.",
                          "type": "boolean"
                        },
                        "description": {
                          "description": "The description of the version. Optional when creating or updating a version.",
                          "type": "string"
                        },
                        "expand": {
                          "description": "Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.\n\nOptional for create and update.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The ID of the version.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "issuesStatusForFixVersion": {
                          "description": "If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.",
                          "properties": {
                            "done": {
                              "description": "Count of issues with status *done*.",
                              "readOnly": true,
                              "type": "integer"
                            },
                            "inProgress": {
                              "description": "Count of issues with status *in progress*.",
                              "readOnly": true,
                              "type": "integer"
                            },
                            "toDo": {
                              "description": "Count of issues with status *to do*.",
                              "readOnly": true,
                              "type": "integer"
                            },
                            "unmapped": {
                              "description": "Count of issues with a status other than *to do*, *in progress*, and *done*.",
                              "readOnly": true,
                              "type": "integer"
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "moveUnfixedIssuesTo": {
                          "description": "The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.",
                          "type": "string"
                        },
                        "operations": {
                          "description": "If the expand option `operations` is used, returns the list of operations available for this version.",
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              },
                              "iconClass": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "label": {
                                "type": "string"
                              },
                              "styleClass": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "weight": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "readOnly": true,
                          "type": "array"
                        },
                        "overdue": {
                          "description": "Indicates that the version is overdue.",
                          "readOnly": true,
                          "type": "boolean"
                        },
                        "project": {
                          "description": "Deprecated. Use `projectId`.",
                          "type": "string"
                        },
                        "projectId": {
                          "description": "The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.",
                          "type": "integer"
                        },
                        "releaseDate": {
                          "description": "The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
                          "format": "date",
                          "type": "string"
                        },
                        "released": {
                          "description": "Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.",
                          "type": "boolean"
                        },
                        "self": {
                          "description": "The URL of the version.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "startDate": {
                          "description": "The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
                          "format": "date",
                          "type": "string"
                        },
                        "userReleaseDate": {
                          "description": "The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "userStartDate": {
                          "description": "The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "readOnly": true,
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "role": {
                "description": "The project role that the filter is shared with.  \nFor a request, specify the `id` for the role. You must also specify the `project` object and `id` for the project that the role is in.",
                "properties": {
                  "actors": {
                    "description": "The list of users who act in this role.",
                    "items": {
                      "properties": {
                        "actorGroup": {
                          "properties": {
                            "displayName": {
                              "description": "The display name of the group.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the group",
                              "type": "string"
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "actorUser": {
                          "properties": {
                            "accountId": {
                              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.",
                              "maxLength": 128,
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "avatarUrl": {
                          "description": "The avatar of the role actor.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "displayName": {
                          "description": "The display name of the role actor. For users, depending on the user\u2019s privacy setting, this may return an alternative value for the user's name.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "id": {
                          "description": "The ID of the role actor.",
                          "readOnly": true,
                          "type": "integer"
                        },
                        "name": {
                          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of role actor.",
                          "enum": [
                            "atlassian-group-role-actor",
                            "atlassian-user-role-actor"
                          ],
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "admin": {
                    "description": "Whether this role is the admin role for the project.",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "currentUserRole": {
                    "description": "Whether the calling user is part of this role.",
                    "type": "boolean"
                  },
                  "default": {
                    "description": "Whether this role is the default role for the project",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "description": {
                    "description": "The description of the project role.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "id": {
                    "description": "The ID of the project role.",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the project role.",
                    "type": "string"
                  },
                  "roleConfigurable": {
                    "description": "Whether the roles are configurable for this project.",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "scope": {
                    "description": "The scope of the role. Indicated for roles associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).",
                    "properties": {
                      "project": {
                        "description": "The project the item has scope in.",
                        "properties": {
                          "avatarUrls": {
                            "description": "The URLs of the project's avatars.",
                            "properties": {
                              "16x16": {
                                "description": "The URL of the item's 16x16 pixel avatar.",
                                "type": "string"
                              },
                              "24x24": {
                                "description": "The URL of the item's 24x24 pixel avatar.",
                                "type": "string"
                              },
                              "32x32": {
                                "description": "The URL of the item's 32x32 pixel avatar.",
                                "type": "string"
                              },
                              "48x48": {
                                "description": "The URL of the item's 48x48 pixel avatar.",
                                "type": "string"
                              }
                            },
                            "readOnly": true,
                            "type": "object"
                          },
                          "id": {
                            "description": "The ID of the project.",
                            "type": "string"
                          },
                          "key": {
                            "description": "The key of the project.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the project.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "projectCategory": {
                            "description": "The category the project belongs to.",
                            "properties": {
                              "description": {
                                "description": "The name of the project category.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "id": {
                                "description": "The ID of the project category.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "name": {
                                "description": "The description of the project category.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "self": {
                                "description": "The URL of the project category.",
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "readOnly": true,
                            "type": "object"
                          },
                          "projectTypeKey": {
                            "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                            "enum": [
                              "software",
                              "service_desk",
                              "business"
                            ],
                            "readOnly": true,
                            "type": "string"
                          },
                          "self": {
                            "description": "The URL of the project details.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "simplified": {
                            "description": "Whether or not the project is simplified.",
                            "readOnly": true,
                            "type": "boolean"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "type": {
                        "description": "The type of scope.",
                        "enum": [
                          "PROJECT",
                          "TEMPLATE"
                        ],
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "self": {
                    "description": "The URL the project role details.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "translatedName": {
                    "description": "The translated name of the project role.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": {
                "description": "The type of share permission:\n\n *  `group` Shared with a group. If set in a request, then specify `sharePermission.group` as well.\n *  `project` Shared with a project. If set in a request, then specify `sharePermission.project` as well.\n *  `projectRole` Share with a project role in a project. This value is not returned in responses. It is used in requests, where it needs to be specify with `projectId` and `projectRoleId`.\n *  `global` Shared globally. If set in a request, no other `sharePermission` properties need to be specified.\n *  `loggedin` Shared with all logged-in users. Note: This value is set in a request by specifying `authenticated` as the `type`.\n *  `project-unknown` Shared with a project that the user does not have access to. Cannot be set in a request.",
                "enum": [
                  "group",
                  "project",
                  "projectRole",
                  "global",
                  "loggedin",
                  "authenticated",
                  "project-unknown"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "subscriptions": {
          "description": "The users that are subscribed to the filter.",
          "items": {
            "properties": {
              "group": {
                "description": "The group subscribing to filter.",
                "properties": {
                  "name": {
                    "description": "The name of group.",
                    "type": "string"
                  },
                  "self": {
                    "description": "The URL for these group details.",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "id": {
                "description": "The ID of the filter subscription.",
                "readOnly": true,
                "type": "integer"
              },
              "user": {
                "description": "The user subscribing to filter.",
                "properties": {
                  "accountId": {
                    "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                    "maxLength": 128,
                    "type": "string"
                  },
                  "accountType": {
                    "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                    "enum": [
                      "atlassian",
                      "app",
                      "customer",
                      "unknown"
                    ],
                    "readOnly": true,
                    "type": "string"
                  },
                  "active": {
                    "description": "Whether the user is active.",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "applicationRoles": {
                    "description": "The application roles the user is assigned to.",
                    "properties": {
                      "callback": {
                        "type": "object"
                      },
                      "items": {
                        "items": {
                          "properties": {
                            "defaultGroups": {
                              "description": "The groups that are granted default access for this application role.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "uniqueItems": true
                            },
                            "defined": {
                              "description": "Deprecated.",
                              "type": "boolean"
                            },
                            "groups": {
                              "description": "The groups associated with the application role.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "uniqueItems": true
                            },
                            "hasUnlimitedSeats": {
                              "type": "boolean"
                            },
                            "key": {
                              "description": "The key of the application role.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The display name of the application role.",
                              "type": "string"
                            },
                            "numberOfSeats": {
                              "description": "The maximum count of users on your license.",
                              "type": "integer"
                            },
                            "platform": {
                              "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                              "type": "boolean"
                            },
                            "remainingSeats": {
                              "description": "The count of users remaining on your license.",
                              "type": "integer"
                            },
                            "selectedByDefault": {
                              "description": "Determines whether this application role should be selected by default on user creation.",
                              "type": "boolean"
                            },
                            "userCount": {
                              "description": "The number of users counting against your license.",
                              "type": "integer"
                            },
                            "userCountDescription": {
                              "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "max-results": {
                        "type": "integer"
                      },
                      "pagingCallback": {
                        "type": "object"
                      },
                      "size": {
                        "type": "integer"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "avatarUrls": {
                    "description": "The avatars of the user.",
                    "properties": {
                      "16x16": {
                        "description": "The URL of the item's 16x16 pixel avatar.",
                        "type": "string"
                      },
                      "24x24": {
                        "description": "The URL of the item's 24x24 pixel avatar.",
                        "type": "string"
                      },
                      "32x32": {
                        "description": "The URL of the item's 32x32 pixel avatar.",
                        "type": "string"
                      },
                      "48x48": {
                        "description": "The URL of the item's 48x48 pixel avatar.",
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "displayName": {
                    "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "emailAddress": {
                    "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "expand": {
                    "description": "Expand options that include additional user details in the response.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "groups": {
                    "description": "The groups that the user belongs to.",
                    "properties": {
                      "callback": {
                        "type": "object"
                      },
                      "items": {
                        "items": {
                          "properties": {
                            "name": {
                              "description": "The name of group.",
                              "type": "string"
                            },
                            "self": {
                              "description": "The URL for these group details.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "max-results": {
                        "type": "integer"
                      },
                      "pagingCallback": {
                        "type": "object"
                      },
                      "size": {
                        "type": "integer"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "key": {
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                    "type": "string"
                  },
                  "locale": {
                    "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                    "type": "string"
                  },
                  "self": {
                    "description": "The URL of the user.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "timeZone": {
                    "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            },
            "type": "object"
          },
          "readOnly": true,
          "type": "array"
        },
        "viewUrl": {
          "description": "A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "filters",
    "resourceConfig": {
      "stream": "filters",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of a share permission for the filter.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "filterId": {
          "description": "Id of the related filter",
          "type": [
            "null",
            "string"
          ]
        },
        "group": {
          "description": "The group that the filter is shared with. For a request, specify the `name` property for the group.",
          "properties": {
            "groupId": {
              "type": [
                "null",
                "string"
              ]
            },
            "name": {
              "description": "The name of group.",
              "type": "string"
            },
            "self": {
              "description": "The URL for these group details.",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The unique identifier of the share permission.",
          "readOnly": true,
          "type": "integer"
        },
        "project": {
          "description": "The project that the filter is shared with. This is similar to the project object returned by [Get project](#api-rest-api-3-project-projectIdOrKey-get) but it contains a subset of the properties, which are: `self`, `id`, `key`, `assigneeType`, `name`, `roles`, `avatarUrls`, `projectType`, `simplified`.  \nFor a request, specify the `id` for the project.",
          "properties": {
            "archived": {
              "description": "Whether the project is archived.",
              "readOnly": true,
              "type": "boolean"
            },
            "archivedBy": {
              "description": "The user who archived the project.",
              "properties": {
                "accountId": {
                  "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                  "maxLength": 128,
                  "type": "string"
                },
                "accountType": {
                  "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                  "enum": [
                    "atlassian",
                    "app",
                    "customer",
                    "unknown"
                  ],
                  "readOnly": true,
                  "type": "string"
                },
                "active": {
                  "description": "Whether the user is active.",
                  "readOnly": true,
                  "type": "boolean"
                },
                "applicationRoles": {
                  "description": "The application roles the user is assigned to.",
                  "properties": {
                    "callback": {
                      "type": "object"
                    },
                    "items": {
                      "items": {
                        "properties": {
                          "defaultGroups": {
                            "description": "The groups that are granted default access for this application role.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                          },
                          "defined": {
                            "description": "Deprecated.",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "The groups associated with the application role.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                          },
                          "hasUnlimitedSeats": {
                            "type": "boolean"
                          },
                          "key": {
                            "description": "The key of the application role.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The display name of the application role.",
                            "type": "string"
                          },
                          "numberOfSeats": {
                            "description": "The maximum count of users on your license.",
                            "type": "integer"
                          },
                          "platform": {
                            "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                            "type": "boolean"
                          },
                          "remainingSeats": {
                            "description": "The count of users remaining on your license.",
                            "type": "integer"
                          },
                          "selectedByDefault": {
                            "description": "Determines whether this application role should be selected by default on user creation.",
                            "type": "boolean"
                          },
                          "userCount": {
                            "description": "The number of users counting against your license.",
                            "type": "integer"
                          },
                          "userCountDescription": {
                            "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "max-results": {
                      "type": "integer"
                    },
                    "pagingCallback": {
                      "type": "object"
                    },
                    "size": {
                      "type": "integer"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "avatarUrls": {
                  "description": "The avatars of the user.",
                  "properties": {
                    "16x16": {
                      "description": "The URL of the item's 16x16 pixel avatar.",
                      "type": "string"
                    },
                    "24x24": {
                      "description": "The URL of the item's 24x24 pixel avatar.",
                      "type": "string"
                    },
                    "32x32": {
                      "description": "The URL of the item's 32x32 pixel avatar.",
                      "type": "string"
                    },
                    "48x48": {
                      "description": "The URL of the item's 48x48 pixel avatar.",
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "displayName": {
                  "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                  "readOnly": true,
                  "type": "string"
                },
                "emailAddress": {
                  "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                  "readOnly": true,
                  "type": "string"
                },
                "expand": {
                  "description": "Expand options that include additional user details in the response.",
                  "readOnly": true,
                  "type": "string"
                },
                "groups": {
                  "description": "The groups that the user belongs to.",
                  "properties": {
                    "callback": {
                      "type": "object"
                    },
                    "items": {
                      "items": {
                        "properties": {
                          "name": {
                            "description": "The name of group.",
                            "type": "string"
                          },
                          "self": {
                            "description": "The URL for these group details.",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "max-results": {
                      "type": "integer"
                    },
                    "pagingCallback": {
                      "type": "object"
                    },
                    "size": {
                      "type": "integer"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "key": {
                  "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                  "type": "string"
                },
                "locale": {
                  "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                  "type": "string"
                },
                "self": {
                  "description": "The URL of the user.",
                  "readOnly": true,
                  "type": "string"
                },
                "timeZone": {
                  "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "archivedDate": {
              "description": "The date when the project was archived.",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "assigneeType": {
              "description": "The default assignee when creating issues for this project.",
              "enum": [
                "PROJECT_LEAD",
                "UNASSIGNED"
              ],
              "readOnly": true,
              "type": "string"
            },
            "avatarUrls": {
              "description": "The URLs of the project's avatars.",
              "properties": {
                "16x16": {
                  "description": "The URL of the item's 16x16 pixel avatar.",
                  "type": "string"
                },
                "24x24": {
                  "description": "The URL of the item's 24x24 pixel avatar.",
                  "type": "string"
                },
                "32x32": {
                  "description": "The URL of the item's 32x32 pixel avatar.",
                  "type": "string"
                },
                "48x48": {
                  "description": "The URL of the item's 48x48 pixel avatar.",
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "components": {
              "description": "List of the components contained in the project.",
              "items": {
                "properties": {
                  "assignee": {
                    "description": "The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.",
                    "properties": {
                      "accountId": {
                        "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                        "maxLength": 128,
                        "type": "string"
                      },
                      "accountType": {
                        "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                        "enum": [
                          "atlassian",
                          "app",
                          "customer",
                          "unknown"
                        ],
                        "readOnly": true,
                        "type": "string"
                      },
                      "active": {
                        "description": "Whether the user is active.",
                        "readOnly": true,
                        "type": "boolean"
                      },
                      "applicationRoles": {
                        "description": "The application roles the user is assigned to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "defaultGroups": {
                                  "description": "The groups that are granted default access for this application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "defined": {
                                  "description": "Deprecated.",
                                  "type": "boolean"
                                },
                                "groups": {
                                  "description": "The groups associated with the application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "hasUnlimitedSeats": {
                                  "type": "boolean"
                                },
                                "key": {
                                  "description": "The key of the application role.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The display name of the application role.",
                                  "type": "string"
                                },
                                "numberOfSeats": {
                                  "description": "The maximum count of users on your license.",
                                  "type": "integer"
                                },
                                "platform": {
                                  "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                  "type": "boolean"
                                },
                                "remainingSeats": {
                                  "description": "The count of users remaining on your license.",
                                  "type": "integer"
                                },
                                "selectedByDefault": {
                                  "description": "Determines whether this application role should be selected by default on user creation.",
                                  "type": "boolean"
                                },
                                "userCount": {
                                  "description": "The number of users counting against your license.",
                                  "type": "integer"
                                },
                                "userCountDescription": {
                                  "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "avatarUrls": {
                        "description": "The avatars of the user.",
                        "properties": {
                          "16x16": {
                            "description": "The URL of the item's 16x16 pixel avatar.",
                            "type": "string"
                          },
                          "24x24": {
                            "description": "The URL of the item's 24x24 pixel avatar.",
                            "type": "string"
                          },
                          "32x32": {
                            "description": "The URL of the item's 32x32 pixel avatar.",
                            "type": "string"
                          },
                          "48x48": {
                            "description": "The URL of the item's 48x48 pixel avatar.",
                            "type": "string"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "displayName": {
                        "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "emailAddress": {
                        "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "expand": {
                        "description": "Expand options that include additional user details in the response.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The groups that the user belongs to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "The name of group.",
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL for these group details.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "key": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL of the user.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "timeZone": {
                        "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "assigneeType": {
                    "description": "The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:\n\n *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.\n *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.\n *  `UNASSIGNED` an assignee is not set for issues created with this component.\n *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.\n\nDefault value: `PROJECT_DEFAULT`.  \nOptional when creating or updating a component.",
                    "enum": [
                      "PROJECT_DEFAULT",
                      "COMPONENT_LEAD",
                      "PROJECT_LEAD",
                      "UNASSIGNED"
                    ],
                    "type": "string"
                  },
                  "description": {
                    "description": "The description for the component. Optional when creating or updating a component.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The unique identifier for the component.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "isAssigneeTypeValid": {
                    "description": "Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "lead": {
                    "description": "The user details for the component's lead user.",
                    "properties": {
                      "accountId": {
                        "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                        "maxLength": 128,
                        "type": "string"
                      },
                      "accountType": {
                        "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                        "enum": [
                          "atlassian",
                          "app",
                          "customer",
                          "unknown"
                        ],
                        "readOnly": true,
                        "type": "string"
                      },
                      "active": {
                        "description": "Whether the user is active.",
                        "readOnly": true,
                        "type": "boolean"
                      },
                      "applicationRoles": {
                        "description": "The application roles the user is assigned to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "defaultGroups": {
                                  "description": "The groups that are granted default access for this application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "defined": {
                                  "description": "Deprecated.",
                                  "type": "boolean"
                                },
                                "groups": {
                                  "description": "The groups associated with the application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "hasUnlimitedSeats": {
                                  "type": "boolean"
                                },
                                "key": {
                                  "description": "The key of the application role.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The display name of the application role.",
                                  "type": "string"
                                },
                                "numberOfSeats": {
                                  "description": "The maximum count of users on your license.",
                                  "type": "integer"
                                },
                                "platform": {
                                  "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                  "type": "boolean"
                                },
                                "remainingSeats": {
                                  "description": "The count of users remaining on your license.",
                                  "type": "integer"
                                },
                                "selectedByDefault": {
                                  "description": "Determines whether this application role should be selected by default on user creation.",
                                  "type": "boolean"
                                },
                                "userCount": {
                                  "description": "The number of users counting against your license.",
                                  "type": "integer"
                                },
                                "userCountDescription": {
                                  "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "avatarUrls": {
                        "description": "The avatars of the user.",
                        "properties": {
                          "16x16": {
                            "description": "The URL of the item's 16x16 pixel avatar.",
                            "type": "string"
                          },
                          "24x24": {
                            "description": "The URL of the item's 24x24 pixel avatar.",
                            "type": "string"
                          },
                          "32x32": {
                            "description": "The URL of the item's 32x32 pixel avatar.",
                            "type": "string"
                          },
                          "48x48": {
                            "description": "The URL of the item's 48x48 pixel avatar.",
                            "type": "string"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "displayName": {
                        "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "emailAddress": {
                        "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "expand": {
                        "description": "Expand options that include additional user details in the response.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The groups that the user belongs to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "The name of group.",
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL for these group details.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "key": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL of the user.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "timeZone": {
                        "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "leadAccountId": {
                    "description": "The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
                    "maxLength": 128,
                    "type": "string",
                    "writeOnly": true
                  },
                  "leadUserName": {
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.",
                    "type": "string"
                  },
                  "project": {
                    "description": "The key of the project the component is assigned to. Required when creating a component. Can't be updated.",
                    "type": "string"
                  },
                  "projectId": {
                    "description": "The ID of the project the component is assigned to.",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "realAssignee": {
                    "description": "The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.",
                    "properties": {
                      "accountId": {
                        "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                        "maxLength": 128,
                        "type": "string"
                      },
                      "accountType": {
                        "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                        "enum": [
                          "atlassian",
                          "app",
                          "customer",
                          "unknown"
                        ],
                        "readOnly": true,
                        "type": "string"
                      },
                      "active": {
                        "description": "Whether the user is active.",
                        "readOnly": true,
                        "type": "boolean"
                      },
                      "applicationRoles": {
                        "description": "The application roles the user is assigned to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "defaultGroups": {
                                  "description": "The groups that are granted default access for this application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "defined": {
                                  "description": "Deprecated.",
                                  "type": "boolean"
                                },
                                "groups": {
                                  "description": "The groups associated with the application role.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "hasUnlimitedSeats": {
                                  "type": "boolean"
                                },
                                "key": {
                                  "description": "The key of the application role.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The display name of the application role.",
                                  "type": "string"
                                },
                                "numberOfSeats": {
                                  "description": "The maximum count of users on your license.",
                                  "type": "integer"
                                },
                                "platform": {
                                  "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                                  "type": "boolean"
                                },
                                "remainingSeats": {
                                  "description": "The count of users remaining on your license.",
                                  "type": "integer"
                                },
                                "selectedByDefault": {
                                  "description": "Determines whether this application role should be selected by default on user creation.",
                                  "type": "boolean"
                                },
                                "userCount": {
                                  "description": "The number of users counting against your license.",
                                  "type": "integer"
                                },
                                "userCountDescription": {
                                  "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "avatarUrls": {
                        "description": "The avatars of the user.",
                        "properties": {
                          "16x16": {
                            "description": "The URL of the item's 16x16 pixel avatar.",
                            "type": "string"
                          },
                          "24x24": {
                            "description": "The URL of the item's 24x24 pixel avatar.",
                            "type": "string"
                          },
                          "32x32": {
                            "description": "The URL of the item's 32x32 pixel avatar.",
                            "type": "string"
                          },
                          "48x48": {
                            "description": "The URL of the item's 48x48 pixel avatar.",
                            "type": "string"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "displayName": {
                        "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "emailAddress": {
                        "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "expand": {
                        "description": "Expand options that include additional user details in the response.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The groups that the user belongs to.",
                        "properties": {
                          "callback": {
                            "type": "object"
                          },
                          "items": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "The name of group.",
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL for these group details.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max-results": {
                            "type": "integer"
                          },
                          "pagingCallback": {
                            "type": "object"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "key": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL of the user.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "timeZone": {
                        "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "realAssigneeType": {
                    "description": "The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:\n\n *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.\n *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.\n *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.\n *  `PROJECT_DEFAULT` when none of the preceding cases are true.",
                    "enum": [
                      "PROJECT_DEFAULT",
                      "COMPONENT_LEAD",
                      "PROJECT_LEAD",
                      "UNASSIGNED"
                    ],
                    "readOnly": true,
                    "type": "string"
                  },
                  "self": {
                    "description": "The URL of the component.",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "readOnly": true,
              "type": "array"
            },
            "deleted": {
              "description": "Whether the project is marked as deleted.",
              "readOnly": true,
              "type": "boolean"
            },
            "deletedBy": {
              "description": "The user who marked the project as deleted.",
              "properties": {
                "accountId": {
                  "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                  "maxLength": 128,
                  "type": "string"
                },
                "accountType": {
                  "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                  "enum": [
                    "atlassian",
                    "app",
                    "customer",
                    "unknown"
                  ],
                  "readOnly": true,
                  "type": "string"
                },
                "active": {
                  "description": "Whether the user is active.",
                  "readOnly": true,
                  "type": "boolean"
                },
                "applicationRoles": {
                  "description": "The application roles the user is assigned to.",
                  "properties": {
                    "callback": {
                      "type": "object"
                    },
                    "items": {
                      "items": {
                        "properties": {
                          "defaultGroups": {
                            "description": "The groups that are granted default access for this application role.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                          },
                          "defined": {
                            "description": "Deprecated.",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "The groups associated with the application role.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                          },
                          "hasUnlimitedSeats": {
                            "type": "boolean"
                          },
                          "key": {
                            "description": "The key of the application role.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The display name of the application role.",
                            "type": "string"
                          },
                          "numberOfSeats": {
                            "description": "The maximum count of users on your license.",
                            "type": "integer"
                          },
                          "platform": {
                            "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                            "type": "boolean"
                          },
                          "remainingSeats": {
                            "description": "The count of users remaining on your license.",
                            "type": "integer"
                          },
                          "selectedByDefault": {
                            "description": "Determines whether this application role should be selected by default on user creation.",
                            "type": "boolean"
                          },
                          "userCount": {
                            "description": "The number of users counting against your license.",
                            "type": "integer"
                          },
                          "userCountDescription": {
                            "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "max-results": {
                      "type": "integer"
                    },
                    "pagingCallback": {
                      "type": "object"
                    },
                    "size": {
                      "type": "integer"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "avatarUrls": {
                  "description": "The avatars of the user.",
                  "properties": {
                    "16x16": {
                      "description": "The URL of the item's 16x16 pixel avatar.",
                      "type": "string"
                    },
                    "24x24": {
                      "description": "The URL of the item's 24x24 pixel avatar.",
                      "type": "string"
                    },
                    "32x32": {
                      "description": "The URL of the item's 32x32 pixel avatar.",
                      "type": "string"
                    },
                    "48x48": {
                      "description": "The URL of the item's 48x48 pixel avatar.",
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "displayName": {
                  "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                  "readOnly": true,
                  "type": "string"
                },
                "emailAddress": {
                  "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                  "readOnly": true,
                  "type": "string"
                },
                "expand": {
                  "description": "Expand options that include additional user details in the response.",
                  "readOnly": true,
                  "type": "string"
                },
                "groups": {
                  "description": "The groups that the user belongs to.",
                  "properties": {
                    "callback": {
                      "type": "object"
                    },
                    "items": {
                      "items": {
                        "properties": {
                          "name": {
                            "description": "The name of group.",
                            "type": "string"
                          },
                          "self": {
                            "description": "The URL for these group details.",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "max-results": {
                      "type": "integer"
                    },
                    "pagingCallback": {
                      "type": "object"
                    },
                    "size": {
                      "type": "integer"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "key": {
                  "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                  "type": "string"
                },
                "locale": {
                  "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                  "type": "string"
                },
                "self": {
                  "description": "The URL of the user.",
                  "readOnly": true,
                  "type": "string"
                },
                "timeZone": {
                  "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "deletedDate": {
              "description": "The date when the project was marked as deleted.",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "description": {
              "description": "A brief description of the project.",
              "readOnly": true,
              "type": "string"
            },
            "email": {
              "description": "An email address associated with the project.",
              "type": "string"
            },
            "expand": {
              "description": "Expand options that include additional project details in the response.",
              "readOnly": true,
              "type": "string"
            },
            "favourite": {
              "description": "Whether the project is selected as a favorite.",
              "type": "boolean"
            },
            "id": {
              "description": "The ID of the project.",
              "type": "string"
            },
            "insight": {
              "description": "Insights about the project.",
              "properties": {
                "lastIssueUpdateTime": {
                  "description": "The last issue update time.",
                  "format": "date-time",
                  "readOnly": true,
                  "type": "string"
                },
                "totalIssueCount": {
                  "description": "Total issue count.",
                  "readOnly": true,
                  "type": "integer"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "isPrivate": {
              "description": "Whether the project is private.",
              "readOnly": true,
              "type": "boolean"
            },
            "issueTypeHierarchy": {
              "description": "The issue type hierarchy for the project",
              "properties": {
                "level": {
                  "items": {
                    "properties": {
                      "aboveLevelId": {
                        "type": "integer"
                      },
                      "belowLevelId": {
                        "type": "integer"
                      },
                      "externalUuid": {
                        "type": "string"
                      },
                      "globalHierarchyLevel": {
                        "enum": [
                          "SUBTASK",
                          "BASE",
                          "EPIC"
                        ],
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "issueTypeIds": {
                        "items": {
                          "type": "integer"
                        },
                        "type": "array"
                      },
                      "level": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "projectConfigurationId": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "issueTypes": {
              "description": "List of the issue types available in the project.",
              "items": {
                "properties": {
                  "avatarId": {
                    "description": "The ID of the issue type's avatar.",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "description": {
                    "description": "The description of the issue type.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "entityId": {
                    "description": "Unique ID for next-gen projects.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "hierarchyLevel": {
                    "description": "Hierarchy level of the issue type.",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "iconUrl": {
                    "description": "The URL of the issue type's avatar.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "id": {
                    "description": "The ID of the issue type.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the issue type.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "scope": {
                    "description": "Details of the next-gen projects the issue type is available in.",
                    "properties": {
                      "project": {
                        "description": "The project the item has scope in.",
                        "properties": {
                          "avatarUrls": {
                            "description": "The URLs of the project's avatars.",
                            "properties": {
                              "16x16": {
                                "description": "The URL of the item's 16x16 pixel avatar.",
                                "type": "string"
                              },
                              "24x24": {
                                "description": "The URL of the item's 24x24 pixel avatar.",
                                "type": "string"
                              },
                              "32x32": {
                                "description": "The URL of the item's 32x32 pixel avatar.",
                                "type": "string"
                              },
                              "48x48": {
                                "description": "The URL of the item's 48x48 pixel avatar.",
                                "type": "string"
                              }
                            },
                            "readOnly": true,
                            "type": "object"
                          },
                          "id": {
                            "description": "The ID of the project.",
                            "type": "string"
                          },
                          "key": {
                            "description": "The key of the project.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the project.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "projectCategory": {
                            "description": "The category the project belongs to.",
                            "properties": {
                              "description": {
                                "description": "The name of the project category.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "id": {
                                "description": "The ID of the project category.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "name": {
                                "description": "The description of the project category.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "self": {
                                "description": "The URL of the project category.",
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "readOnly": true,
                            "type": "object"
                          },
                          "projectTypeKey": {
                            "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                            "enum": [
                              "software",
                              "service_desk",
                              "business"
                            ],
                            "readOnly": true,
                            "type": "string"
                          },
                          "self": {
                            "description": "The URL of the project details.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "simplified": {
                            "description": "Whether or not the project is simplified.",
                            "readOnly": true,
                            "type": "boolean"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "type": {
                        "description": "The type of scope.",
                        "enum": [
                          "PROJECT",
                          "TEMPLATE"
                        ],
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "self": {
                    "description": "The URL of these issue type details.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "subtask": {
                    "description": "Whether this issue type is used to create subtasks.",
                    "readOnly": true,
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "readOnly": true,
              "type": "array"
            },
            "key": {
              "description": "The key of the project.",
              "readOnly": true,
              "type": "string"
            },
            "lead": {
              "description": "The username of the project lead.",
              "properties": {
                "accountId": {
                  "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                  "maxLength": 128,
                  "type": "string"
                },
                "accountType": {
                  "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                  "enum": [
                    "atlassian",
                    "app",
                    "customer",
                    "unknown"
                  ],
                  "readOnly": true,
                  "type": "string"
                },
                "active": {
                  "description": "Whether the user is active.",
                  "readOnly": true,
                  "type": "boolean"
                },
                "applicationRoles": {
                  "description": "The application roles the user is assigned to.",
                  "properties": {
                    "callback": {
                      "type": "object"
                    },
                    "items": {
                      "items": {
                        "properties": {
                          "defaultGroups": {
                            "description": "The groups that are granted default access for this application role.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                          },
                          "defined": {
                            "description": "Deprecated.",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "The groups associated with the application role.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                          },
                          "hasUnlimitedSeats": {
                            "type": "boolean"
                          },
                          "key": {
                            "description": "The key of the application role.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The display name of the application role.",
                            "type": "string"
                          },
                          "numberOfSeats": {
                            "description": "The maximum count of users on your license.",
                            "type": "integer"
                          },
                          "platform": {
                            "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                            "type": "boolean"
                          },
                          "remainingSeats": {
                            "description": "The count of users remaining on your license.",
                            "type": "integer"
                          },
                          "selectedByDefault": {
                            "description": "Determines whether this application role should be selected by default on user creation.",
                            "type": "boolean"
                          },
                          "userCount": {
                            "description": "The number of users counting against your license.",
                            "type": "integer"
                          },
                          "userCountDescription": {
                            "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "max-results": {
                      "type": "integer"
                    },
                    "pagingCallback": {
                      "type": "object"
                    },
                    "size": {
                      "type": "integer"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "avatarUrls": {
                  "description": "The avatars of the user.",
                  "properties": {
                    "16x16": {
                      "description": "The URL of the item's 16x16 pixel avatar.",
                      "type": "string"
                    },
                    "24x24": {
                      "description": "The URL of the item's 24x24 pixel avatar.",
                      "type": "string"
                    },
                    "32x32": {
                      "description": "The URL of the item's 32x32 pixel avatar.",
                      "type": "string"
                    },
                    "48x48": {
                      "description": "The URL of the item's 48x48 pixel avatar.",
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "displayName": {
                  "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
                  "readOnly": true,
                  "type": "string"
                },
                "emailAddress": {
                  "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                  "readOnly": true,
                  "type": "string"
                },
                "expand": {
                  "description": "Expand options that include additional user details in the response.",
                  "readOnly": true,
                  "type": "string"
                },
                "groups": {
                  "description": "The groups that the user belongs to.",
                  "properties": {
                    "callback": {
                      "type": "object"
                    },
                    "items": {
                      "items": {
                        "properties": {
                          "name": {
                            "description": "The name of group.",
                            "type": "string"
                          },
                          "self": {
                            "description": "The URL for these group details.",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "max-results": {
                      "type": "integer"
                    },
                    "pagingCallback": {
                      "type": "object"
                    },
                    "size": {
                      "type": "integer"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "key": {
                  "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                  "type": "string"
                },
                "locale": {
                  "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                  "type": "string"
                },
                "self": {
                  "description": "The URL of the user.",
                  "readOnly": true,
                  "type": "string"
                },
                "timeZone": {
                  "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "name": {
              "description": "The name of the project.",
              "readOnly": true,
              "type": "string"
            },
            "permissions": {
              "description": "User permissions on the project",
              "properties": {
                "canEdit": {
                  "description": "Whether the logged user can edit the project.",
                  "readOnly": true,
                  "type": "boolean"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "projectCategory": {
              "description": "The category the project belongs to.",
              "properties": {
                "description": {
                  "description": "The description of the project category. Required on create, optional on update.",
                  "type": "string"
                },
                "id": {
                  "description": "The ID of the project category.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the project category. Required on create, optional on update.",
                  "type": "string"
                },
                "self": {
                  "description": "The URL of the project category.",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "projectTypeKey": {
              "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
              "enum": [
                "software",
                "service_desk",
                "business"
              ],
              "readOnly": true,
              "type": "string"
            },
            "properties": {
              "additionalProperties": true,
              "description": "Map of project properties",
              "readOnly": true,
              "type": "object"
            },
            "retentionTillDate": {
              "description": "The date when the project is deleted permanently.",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "roles": {
              "additionalProperties": true,
              "description": "The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).",
              "readOnly": true,
              "type": "object"
            },
            "self": {
              "description": "The URL of the project details.",
              "readOnly": true,
              "type": "string"
            },
            "simplified": {
              "description": "Whether the project is simplified.",
              "readOnly": true,
              "type": "boolean"
            },
            "style": {
              "description": "The type of the project.",
              "enum": [
                "classic",
                "next-gen"
              ],
              "readOnly": true,
              "type": "string"
            },
            "url": {
              "description": "A link to information about this project, such as project documentation.",
              "readOnly": true,
              "type": "string"
            },
            "uuid": {
              "description": "Unique ID for next-gen projects.",
              "readOnly": true,
              "type": "string"
            },
            "versions": {
              "description": "The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).",
              "items": {
                "properties": {
                  "archived": {
                    "description": "Indicates that the version is archived. Optional when creating or updating a version.",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "The description of the version. Optional when creating or updating a version.",
                    "type": "string"
                  },
                  "expand": {
                    "description": "Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.\n\nOptional for create and update.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The ID of the version.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "issuesStatusForFixVersion": {
                    "description": "If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.",
                    "properties": {
                      "done": {
                        "description": "Count of issues with status *done*.",
                        "readOnly": true,
                        "type": "integer"
                      },
                      "inProgress": {
                        "description": "Count of issues with status *in progress*.",
                        "readOnly": true,
                        "type": "integer"
                      },
                      "toDo": {
                        "description": "Count of issues with status *to do*.",
                        "readOnly": true,
                        "type": "integer"
                      },
                      "unmapped": {
                        "description": "Count of issues with a status other than *to do*, *in progress*, and *done*.",
                        "readOnly": true,
                        "type": "integer"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "moveUnfixedIssuesTo": {
                    "description": "The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.",
                    "type": "string"
                  },
                  "operations": {
                    "description": "If the expand option `operations` is used, returns the list of operations available for this version.",
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        },
                        "iconClass": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "styleClass": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "weight": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "overdue": {
                    "description": "Indicates that the version is overdue.",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "project": {
                    "description": "Deprecated. Use `projectId`.",
                    "type": "string"
                  },
                  "projectId": {
                    "description": "The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.",
                    "type": "integer"
                  },
                  "releaseDate": {
                    "description": "The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
                    "format": "date",
                    "type": "string"
                  },
                  "released": {
                    "description": "Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.",
                    "type": "boolean"
                  },
                  "self": {
                    "description": "The URL of the version.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "startDate": {
                    "description": "The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
                    "format": "date",
                    "type": "string"
                  },
                  "userReleaseDate": {
                    "description": "The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "userStartDate": {
                    "description": "The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "readOnly": true,
              "type": "array"
            }
          },
          "type": "object"
        },
        "role": {
          "description": "The project role that the filter is shared with.  \nFor a request, specify the `id` for the role. You must also specify the `project` object and `id` for the project that the role is in.",
          "properties": {
            "actors": {
              "description": "The list of users who act in this role.",
              "items": {
                "properties": {
                  "actorGroup": {
                    "properties": {
                      "displayName": {
                        "description": "The display name of the group.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the group",
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "actorUser": {
                    "properties": {
                      "accountId": {
                        "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.",
                        "maxLength": 128,
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  },
                  "avatarUrl": {
                    "description": "The avatar of the role actor.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The display name of the role actor. For users, depending on the user\u2019s privacy setting, this may return an alternative value for the user's name.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "id": {
                    "description": "The ID of the role actor.",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "name": {
                    "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of role actor.",
                    "enum": [
                      "atlassian-group-role-actor",
                      "atlassian-user-role-actor"
                    ],
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "readOnly": true,
              "type": "array"
            },
            "admin": {
              "description": "Whether this role is the admin role for the project.",
              "readOnly": true,
              "type": "boolean"
            },
            "currentUserRole": {
              "description": "Whether the calling user is part of this role.",
              "type": "boolean"
            },
            "default": {
              "description": "Whether this role is the default role for the project",
              "readOnly": true,
              "type": "boolean"
            },
            "description": {
              "description": "The description of the project role.",
              "readOnly": true,
              "type": "string"
            },
            "id": {
              "description": "The ID of the project role.",
              "readOnly": true,
              "type": "integer"
            },
            "name": {
              "description": "The name of the project role.",
              "type": "string"
            },
            "roleConfigurable": {
              "description": "Whether the roles are configurable for this project.",
              "readOnly": true,
              "type": "boolean"
            },
            "scope": {
              "description": "The scope of the role. Indicated for roles associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).",
              "properties": {
                "project": {
                  "description": "The project the item has scope in.",
                  "properties": {
                    "avatarUrls": {
                      "description": "The URLs of the project's avatars.",
                      "properties": {
                        "16x16": {
                          "description": "The URL of the item's 16x16 pixel avatar.",
                          "type": "string"
                        },
                        "24x24": {
                          "description": "The URL of the item's 24x24 pixel avatar.",
                          "type": "string"
                        },
                        "32x32": {
                          "description": "The URL of the item's 32x32 pixel avatar.",
                          "type": "string"
                        },
                        "48x48": {
                          "description": "The URL of the item's 48x48 pixel avatar.",
                          "type": "string"
                        }
                      },
                      "readOnly": true,
                      "type": "object"
                    },
                    "id": {
                      "description": "The ID of the project.",
                      "type": "string"
                    },
                    "key": {
                      "description": "The key of the project.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the project.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "projectCategory": {
                      "description": "The category the project belongs to.",
                      "properties": {
                        "description": {
                          "description": "The name of the project category.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "id": {
                          "description": "The ID of the project category.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "name": {
                          "description": "The description of the project category.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "self": {
                          "description": "The URL of the project category.",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "readOnly": true,
                      "type": "object"
                    },
                    "projectTypeKey": {
                      "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                      "enum": [
                        "software",
                        "service_desk",
                        "business"
                      ],
                      "readOnly": true,
                      "type": "string"
                    },
                    "self": {
                      "description": "The URL of the project details.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "simplified": {
                      "description": "Whether or not the project is simplified.",
                      "readOnly": true,
                      "type": "boolean"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "type": {
                  "description": "The type of scope.",
                  "enum": [
                    "PROJECT",
                    "TEMPLATE"
                  ],
                  "readOnly": true,
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "self": {
              "description": "The URL the project role details.",
              "readOnly": true,
              "type": "string"
            },
            "translatedName": {
              "description": "The translated name of the project role.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The type of share permission:\n\n *  `group` Shared with a group. If set in a request, then specify `sharePermission.group` as well.\n *  `project` Shared with a project. If set in a request, then specify `sharePermission.project` as well.\n *  `projectRole` Share with a project role in a project. This value is not returned in responses. It is used in requests, where it needs to be specify with `projectId` and `projectRoleId`.\n *  `global` Shared globally. If set in a request, no other `sharePermission` properties need to be specified.\n *  `loggedin` Shared with all logged-in users. Note: This value is set in a request by specifying `authenticated` as the `type`.\n *  `project-unknown` Shared with a project that the user does not have access to. Cannot be set in a request.",
          "enum": [
            "group",
            "project",
            "projectRole",
            "global",
            "loggedin",
            "authenticated",
            "project-unknown"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "filter_sharing",
    "resourceConfig": {
      "stream": "filter_sharing",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "The list of groups found in a search, including header text (Showing X of Y matching groups) and total of matched groups.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "groupId": {
          "description": "The ID of the group, if available, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.",
          "type": [
            "null",
            "string"
          ]
        },
        "name": {
          "description": "The name of the group.",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/groupId"
    ],
    "recommendedName": "groups",
    "resourceConfig": {
      "stream": "groups",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "changelog": {
          "description": "Details of changelogs associated with the issue.",
          "properties": {
            "histories": {
              "items": {
                "properties": {
                  "author": {
                    "description": "Details of the author of the changelog.",
                    "properties": {
                      "accountId": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "accountType": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "active": {
                        "type": "boolean"
                      },
                      "avatarUrls": {
                        "properties": {
                          "16x16": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "24x24": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "32x32": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "48x48": {
                            "type": [
                              "null",
                              "string"
                            ]
                          }
                        },
                        "type": [
                          "null",
                          "object"
                        ]
                      },
                      "displayName": {
                        "type": "string"
                      },
                      "emailAddress": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "self": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "timeZone": {
                        "type": [
                          "null",
                          "string"
                        ]
                      }
                    },
                    "type": [
                      "null",
                      "object"
                    ]
                  },
                  "created": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "id": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "items": {
                    "items": {
                      "properties": {
                        "field": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "fieldId": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "fieldtype": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "from": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "fromString": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "tmpFromAccountId": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "tmpToAccountId": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "to": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "toString": {
                          "type": [
                            "null",
                            "string"
                          ]
                        }
                      },
                      "type": [
                        "null",
                        "object"
                      ]
                    },
                    "type": [
                      "null",
                      "array"
                    ]
                  }
                },
                "type": [
                  "null",
                  "object"
                ]
              },
              "type": [
                "null",
                "array"
              ]
            },
            "maxResults": {
              "type": [
                "null",
                "integer"
              ]
            },
            "startAt": {
              "type": [
                "null",
                "integer"
              ]
            },
            "total": {
              "type": [
                "null",
                "integer"
              ]
            }
          },
          "readOnly": true,
          "type": [
            "object",
            "null"
          ]
        },
        "created": {
          "description": "The timestamp when the issue was created.",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "editmeta": {
          "description": "The metadata for the fields on the issue that can be amended.",
          "readOnly": true,
          "type": [
            "object",
            "null"
          ]
        },
        "expand": {
          "description": "Expand options that include additional issue details in the response.",
          "readOnly": true,
          "type": "string"
        },
        "fields": {
          "additionalProperties": true,
          "description": "Details of various fields associated with the issue.",
          "properties": {
            "aggregateprogress": {
              "description": "Details of the aggregate progress on the issue.",
              "properties": {
                "percent": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "progress": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "total": {
                  "type": [
                    "null",
                    "integer"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "aggregatetimeestimate": {
              "type": [
                "null",
                "integer"
              ]
            },
            "aggregatetimeoriginalestimate": {
              "type": [
                "null",
                "integer"
              ]
            },
            "aggregatetimespent": {
              "type": [
                "null",
                "integer"
              ]
            },
            "assignee": {
              "description": "Details of the assignee of the issue.",
              "properties": {
                "accountId": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "accountType": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "active": {
                  "type": [
                    "null",
                    "boolean"
                  ]
                },
                "avatarUrls": {
                  "properties": {
                    "16x16": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "24x24": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "32x32": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "48x48": {
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "type": [
                    "null",
                    "object"
                  ]
                },
                "displayName": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "emailAddress": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "timeZone": {
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "attachment": {
              "type": [
                "null",
                "array"
              ]
            },
            "comment": {
              "description": "Details of comments on the issue.",
              "properties": {
                "comments": {
                  "type": [
                    "null",
                    "array"
                  ]
                },
                "maxResults": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "startAt": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "total": {
                  "type": [
                    "null",
                    "integer"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "components": {
              "type": [
                "null",
                "array"
              ]
            },
            "created": {
              "description": "The timestamp when the issue was created.",
              "format": "date-time",
              "type": [
                "string",
                "null"
              ]
            },
            "creator": {
              "description": "Details of the creator of the issue.",
              "properties": {
                "accountId": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "accountType": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "active": {
                  "type": [
                    "null",
                    "boolean"
                  ]
                },
                "avatarUrls": {
                  "properties": {
                    "16x16": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "24x24": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "32x32": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "48x48": {
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "type": [
                    "null",
                    "object"
                  ]
                },
                "displayName": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "emailAddress": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "timeZone": {
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "description": {
              "description": "Details of the description of the issue.",
              "properties": {
                "content": {
                  "items": {
                    "properties": {
                      "content": {
                        "items": {
                          "properties": {
                            "text": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "type": {
                              "type": [
                                "null",
                                "string"
                              ]
                            }
                          },
                          "type": [
                            "null",
                            "object"
                          ]
                        },
                        "type": [
                          "null",
                          "array"
                        ]
                      },
                      "type": {
                        "type": [
                          "null",
                          "string"
                        ]
                      }
                    },
                    "type": [
                      "null",
                      "object"
                    ]
                  },
                  "type": [
                    "null",
                    "array"
                  ]
                },
                "type": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "version": {
                  "type": [
                    "null",
                    "integer"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "fixVersions": {
              "type": [
                "null",
                "array"
              ]
            },
            "issuelinks": {
              "type": [
                "null",
                "array"
              ]
            },
            "issuerestriction": {
              "description": "Details of the issue restriction.",
              "properties": {
                "issuerestrictions": {
                  "type": [
                    "null",
                    "object"
                  ]
                },
                "shouldDisplay": {
                  "type": [
                    "null",
                    "boolean"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "issuetype": {
              "description": "Details of the issue type.",
              "properties": {
                "avatarId": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "description": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "entityId": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "hierarchyLevel": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "iconUrl": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "id": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "name": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "subtask": {
                  "type": [
                    "null",
                    "boolean"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "labels": {
              "description": "Details of labels attached to the issue.",
              "items": {
                "type": [
                  "null",
                  "string"
                ]
              },
              "type": [
                "null",
                "array"
              ]
            },
            "lastViewed": {
              "description": "The timestamp when the issue was last viewed.",
              "format": "date-time",
              "type": [
                "null",
                "string"
              ]
            },
            "priority": {
              "description": "Details of the priority of the issue.",
              "properties": {
                "iconUrl": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "id": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "name": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "progress": {
              "description": "Details of the progress on the issue.",
              "properties": {
                "percent": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "progress": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "total": {
                  "type": [
                    "null",
                    "integer"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "project": {
              "description": "Details of the project associated with the issue.",
              "properties": {
                "avatarUrls": {
                  "properties": {
                    "16x16": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "24x24": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "32x32": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "48x48": {
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "type": [
                    "null",
                    "object"
                  ]
                },
                "id": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "key": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "name": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "projectCategory": {
                  "properties": {
                    "description": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "id": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "name": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "self": {
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "type": [
                    "null",
                    "object"
                  ]
                },
                "projectTypeKey": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "simplified": {
                  "type": [
                    "null",
                    "boolean"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "reporter": {
              "description": "Details of the reporter of the issue.",
              "properties": {
                "accountId": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "accountType": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "active": {
                  "type": [
                    "null",
                    "boolean"
                  ]
                },
                "avatarUrls": {
                  "properties": {
                    "16x16": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "24x24": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "32x32": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "48x48": {
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "type": [
                    "null",
                    "object"
                  ]
                },
                "displayName": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "emailAddress": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "timeZone": {
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "resolution": {
              "description": "Details of the resolution of the issue.",
              "properties": {
                "description": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "id": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "name": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "resolutiondate": {
              "description": "The timestamp when the issue was resolved.",
              "format": "date-time",
              "type": [
                "null",
                "string"
              ]
            },
            "status": {
              "description": "Details of the status of the issue.",
              "properties": {
                "description": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "iconUrl": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "id": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "name": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "statusCategory": {
                  "properties": {
                    "colorName": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "id": {
                      "type": [
                        "null",
                        "integer"
                      ]
                    },
                    "key": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "name": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "self": {
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "type": [
                    "null",
                    "object"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "statuscategorychangedate": {
              "description": "The timestamp when the status category of the issue changed.",
              "format": "date-time",
              "type": [
                "null",
                "string"
              ]
            },
            "subtasks": {
              "type": [
                "null",
                "array"
              ]
            },
            "summary": {
              "description": "The summary of the issue.",
              "type": [
                "null",
                "string"
              ]
            },
            "timeestimate": {
              "type": [
                "null",
                "integer"
              ]
            },
            "timeoriginalestimate": {
              "type": [
                "null",
                "integer"
              ]
            },
            "timespent": {
              "type": [
                "null",
                "integer"
              ]
            },
            "timetracking": {
              "description": "Details of time tracking on the issue.",
              "properties": {
                "originalEstimate": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "originalEstimateSeconds": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "remainingEstimate": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "remainingEstimateSeconds": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "timeSpent": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "timeSpentSeconds": {
                  "type": [
                    "null",
                    "integer"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "updated": {
              "description": "The timestamp when the issue was last updated.",
              "format": "date-time",
              "type": [
                "string",
                "null"
              ]
            },
            "versions": {
              "type": [
                "null",
                "array"
              ]
            },
            "votes": {
              "description": "Details of votes on the issue.",
              "properties": {
                "hasVoted": {
                  "type": [
                    "null",
                    "boolean"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "votes": {
                  "type": [
                    "null",
                    "integer"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "watches": {
              "description": "Details of watchers on the issue.",
              "properties": {
                "isWatching": {
                  "type": [
                    "null",
                    "boolean"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "watchCount": {
                  "type": [
                    "null",
                    "integer"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "worklog": {
              "description": "Details of worklogs on the issue.",
              "properties": {
                "maxResults": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "startAt": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "total": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "worklogs": {
                  "items": {
                    "properties": {
                      "author": {
                        "description": "Details of the author of the worklog.",
                        "properties": {
                          "accountId": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "accountType": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "active": {
                            "type": [
                              "null",
                              "boolean"
                            ]
                          },
                          "avatarUrls": {
                            "properties": {
                              "16x16": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "24x24": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "32x32": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "48x48": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              }
                            },
                            "type": [
                              "null",
                              "object"
                            ]
                          },
                          "displayName": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "emailAddress": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "self": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "timeZone": {
                            "type": [
                              "null",
                              "string"
                            ]
                          }
                        },
                        "type": [
                          "null",
                          "object"
                        ]
                      },
                      "comment": {
                        "description": "Details of the comment in the worklog.",
                        "properties": {
                          "content": {
                            "items": {
                              "properties": {
                                "content": {
                                  "items": {
                                    "properties": {
                                      "text": {
                                        "type": [
                                          "null",
                                          "string"
                                        ]
                                      },
                                      "type": {
                                        "type": [
                                          "null",
                                          "string"
                                        ]
                                      }
                                    },
                                    "type": [
                                      "null",
                                      "object"
                                    ]
                                  },
                                  "type": "array"
                                },
                                "type": {
                                  "type": [
                                    "null",
                                    "string"
                                  ]
                                }
                              },
                              "type": [
                                "null",
                                "object"
                              ]
                            },
                            "type": [
                              "null",
                              "array"
                            ]
                          },
                          "type": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "version": {
                            "type": [
                              "null",
                              "integer"
                            ]
                          }
                        },
                        "type": [
                          "null",
                          "object"
                        ]
                      },
                      "created": {
                        "description": "The timestamp when the worklog was created.",
                        "format": "date-time",
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "id": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "issueId": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "self": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "started": {
                        "description": "The timestamp when the worklog was started.",
                        "format": "date-time",
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "timeSpent": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "timeSpentSeconds": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "updateAuthor": {
                        "description": "Details of the author who updated the worklog.",
                        "properties": {
                          "accountId": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "accountType": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "active": {
                            "type": [
                              "null",
                              "boolean"
                            ]
                          },
                          "avatarUrls": {
                            "properties": {
                              "16x16": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "24x24": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "32x32": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "48x48": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              }
                            },
                            "type": [
                              "null",
                              "object"
                            ]
                          },
                          "displayName": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "emailAddress": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "self": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "timeZone": {
                            "type": [
                              "null",
                              "string"
                            ]
                          }
                        },
                        "type": [
                          "null",
                          "object"
                        ]
                      },
                      "updated": {
                        "description": "The timestamp when the worklog was last updated.",
                        "format": "date-time",
                        "type": [
                          "null",
                          "string"
                        ]
                      }
                    },
                    "type": [
                      "null",
                      "object"
                    ]
                  },
                  "type": [
                    "null",
                    "array"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "workratio": {
              "type": [
                "null",
                "integer"
              ]
            }
          },
          "type": "object"
        },
        "fieldsToInclude": {
          "description": "Specify the fields to include in the fetched issues data. Use specific field names or 'all' to include all fields.",
          "type": "object"
        },
        "id": {
          "description": "The unique ID of the issue.",
          "readOnly": true,
          "type": "string"
        },
        "key": {
          "description": "The unique key of the issue.",
          "readOnly": true,
          "type": "string"
        },
        "names": {
          "additionalProperties": true,
          "description": "The ID and name of each field present on the issue.",
          "readOnly": true,
          "type": "object"
        },
        "operations": {
          "description": "The operations that can be performed on the issue.",
          "readOnly": true,
          "type": [
            "object",
            "null"
          ]
        },
        "projectId": {
          "description": "The ID of the project containing the issue.",
          "readOnly": true,
          "type": "string"
        },
        "projectKey": {
          "description": "The key of the project containing the issue.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "additionalProperties": true,
          "description": "Details of the issue properties identified in the request.",
          "readOnly": true,
          "type": "object"
        },
        "renderedFields": {
          "additionalProperties": true,
          "description": "The rendered value of each field present on the issue.",
          "properties": {
            "aggregateprogress": {
              "type": [
                "null",
                "string"
              ]
            },
            "aggregatetimeestimate": {
              "type": [
                "null",
                "string"
              ]
            },
            "aggregatetimeoriginalestimate": {
              "type": [
                "null",
                "string"
              ]
            },
            "aggregatetimespent": {
              "type": [
                "null",
                "string"
              ]
            },
            "assignee": {
              "type": [
                "null",
                "string"
              ]
            },
            "attachment": {
              "type": [
                "null",
                "array"
              ]
            },
            "comment": {
              "description": "Details of comments on the issue.",
              "properties": {
                "comments": {
                  "items": {
                    "properties": {
                      "author": {
                        "description": "Details of the author of the comment.",
                        "properties": {
                          "accountId": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "accountType": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "active": {
                            "type": "boolean"
                          },
                          "avatarUrls": {
                            "properties": {
                              "16x16": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "24x24": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "32x32": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "48x48": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              }
                            },
                            "type": [
                              "null",
                              "object"
                            ]
                          },
                          "displayName": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "emailAddress": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "self": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "timeZone": {
                            "type": [
                              "null",
                              "string"
                            ]
                          }
                        },
                        "type": [
                          "null",
                          "object"
                        ]
                      },
                      "body": {
                        "description": "Details of the body of the comment.",
                        "properties": {
                          "content": {
                            "items": {
                              "properties": {
                                "content": {
                                  "items": {
                                    "properties": {
                                      "text": {
                                        "type": [
                                          "null",
                                          "string"
                                        ]
                                      },
                                      "type": {
                                        "type": [
                                          "null",
                                          "string"
                                        ]
                                      }
                                    },
                                    "type": [
                                      "null",
                                      "object"
                                    ]
                                  },
                                  "type": "array"
                                },
                                "type": {
                                  "type": [
                                    "null",
                                    "string"
                                  ]
                                }
                              },
                              "type": [
                                "null",
                                "object"
                              ]
                            },
                            "type": [
                              "null",
                              "array"
                            ]
                          },
                          "type": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "version": {
                            "type": [
                              "null",
                              "integer"
                            ]
                          }
                        },
                        "type": [
                          "null",
                          "object"
                        ]
                      },
                      "created": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "id": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "jsdPublic": {
                        "type": "boolean"
                      },
                      "self": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "updateAuthor": {
                        "description": "Details of the author who updated the comment.",
                        "properties": {
                          "accountId": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "accountType": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "active": {
                            "type": "boolean"
                          },
                          "avatarUrls": {
                            "properties": {
                              "16x16": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "24x24": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "32x32": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "48x48": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              }
                            },
                            "type": [
                              "null",
                              "object"
                            ]
                          },
                          "displayName": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "emailAddress": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "self": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "timeZone": {
                            "type": [
                              "null",
                              "string"
                            ]
                          }
                        },
                        "type": [
                          "null",
                          "object"
                        ]
                      },
                      "updated": {
                        "type": [
                          "null",
                          "string"
                        ]
                      }
                    },
                    "type": [
                      "null",
                      "object"
                    ]
                  },
                  "type": [
                    "null",
                    "array"
                  ]
                },
                "maxResults": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "self": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "startAt": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "total": {
                  "type": [
                    "null",
                    "integer"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "components": {
              "items": {
                "type": [
                  "null",
                  "object"
                ]
              },
              "type": [
                "null",
                "array"
              ]
            },
            "created": {
              "type": [
                "null",
                "string"
              ]
            },
            "creator": {
              "type": [
                "null",
                "string"
              ]
            },
            "description": {
              "type": [
                "null",
                "string"
              ]
            },
            "duedate": {
              "type": [
                "null",
                "string"
              ]
            },
            "environment": {
              "type": [
                "null",
                "string"
              ]
            },
            "fixVersions": {
              "type": [
                "null",
                "string"
              ]
            },
            "issuelinks": {
              "items": {
                "type": [
                  "null",
                  "string"
                ]
              },
              "type": [
                "null",
                "array"
              ]
            },
            "issuerestriction": {
              "type": [
                "null",
                "string"
              ]
            },
            "issuetype": {
              "type": [
                "null",
                "string"
              ]
            },
            "labels": {
              "items": {
                "type": [
                  "null",
                  "string"
                ]
              },
              "type": [
                "null",
                "array"
              ]
            },
            "lastViewed": {
              "type": [
                "null",
                "string"
              ]
            },
            "priority": {
              "type": [
                "null",
                "string"
              ]
            },
            "progress": {
              "type": [
                "null",
                "string"
              ]
            },
            "project": {
              "type": [
                "null",
                "string"
              ]
            },
            "reporter": {
              "type": [
                "null",
                "string"
              ]
            },
            "resolution": {
              "type": [
                "null",
                "string"
              ]
            },
            "resolutiondate": {
              "type": [
                "null",
                "string"
              ]
            },
            "security": {
              "type": [
                "null",
                "string"
              ]
            },
            "status": {
              "type": [
                "null",
                "string"
              ]
            },
            "statuscategorychangedate": {
              "type": [
                "null",
                "string"
              ]
            },
            "subtasks": {
              "type": [
                "null",
                "array"
              ]
            },
            "summary": {
              "type": [
                "null",
                "string"
              ]
            },
            "timeestimate": {
              "type": [
                "null",
                "string"
              ]
            },
            "timeoriginalestimate": {
              "type": [
                "null",
                "string"
              ]
            },
            "timespent": {
              "type": [
                "null",
                "string"
              ]
            },
            "timetracking": {
              "type": [
                "null",
                "object"
              ]
            },
            "updated": {
              "type": [
                "null",
                "string"
              ]
            },
            "versions": {
              "type": [
                "null",
                "string"
              ]
            },
            "votes": {
              "type": [
                "null",
                "string"
              ]
            },
            "watches": {
              "type": [
                "null",
                "string"
              ]
            },
            "worklog": {
              "properties": {
                "maxResults": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "startAt": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "total": {
                  "type": "integer"
                },
                "worklogs": {
                  "type": [
                    "null",
                    "array"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "workratio": {
              "type": [
                "null",
                "string"
              ]
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "schema": {
          "description": "The schema describing each field present on the issue.",
          "readOnly": true,
          "type": "object"
        },
        "self": {
          "description": "The URL of the issue details.",
          "readOnly": true,
          "type": "string"
        },
        "transitions": {
          "description": "The transitions that can be performed on the issue.",
          "items": {
            "properties": {
              "hasScreen": {
                "type": "boolean"
              },
              "id": {
                "type": [
                  "null",
                  "string"
                ]
              },
              "isAvailable": {
                "type": "boolean"
              },
              "isConditional": {
                "type": "boolean"
              },
              "isGlobal": {
                "type": "boolean"
              },
              "isInitial": {
                "type": "boolean"
              },
              "isLooped": {
                "type": "boolean"
              },
              "name": {
                "type": [
                  "null",
                  "string"
                ]
              },
              "to": {
                "properties": {
                  "description": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "iconUrl": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "id": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "name": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "self": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "statusCategory": {
                    "properties": {
                      "colorName": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "id": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "key": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "name": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "self": {
                        "type": [
                          "null",
                          "string"
                        ]
                      }
                    },
                    "type": [
                      "null",
                      "object"
                    ]
                  }
                },
                "type": [
                  "null",
                  "object"
                ]
              }
            },
            "type": [
              "null",
              "object"
            ]
          },
          "readOnly": true,
          "type": "array"
        },
        "updated": {
          "description": "The timestamp when the issue was last updated.",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "versionedRepresentations": {
          "additionalProperties": true,
          "description": "The versions of each field on the issue.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issues",
    "resourceConfig": {
      "cursorField": [
        "updated"
      ],
      "stream": "issues",
      "syncMode": "incremental"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "A comment.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "author": {
          "description": "The ID of the user who created the comment.",
          "readOnly": true
        },
        "body": {
          "description": "The comment text in Atlassian Document Format.",
          "type": "object"
        },
        "created": {
          "description": "The date and time at which the comment was created.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the comment.",
          "readOnly": true,
          "type": "string"
        },
        "issueId": {
          "description": "Id of the related issue.",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "jsdPublic": {
          "description": "Whether the comment is visible in Jira Service Desk. Defaults to true when comments are created in the Jira Cloud Platform.",
          "readOnly": true,
          "type": "boolean"
        },
        "properties": {
          "description": "A list of comment properties. Optional on create and update.",
          "type": "array"
        },
        "renderedBody": {
          "description": "The rendered version of the comment.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the comment.",
          "readOnly": true,
          "type": "string"
        },
        "updateAuthor": {
          "additionalProperties": true,
          "description": "The ID of the user who updated the comment last.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The date and time at which the comment was updated last.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "visibility": {
          "additionalProperties": true,
          "description": "The group or role to which this item is visible.",
          "properties": {
            "type": {
              "description": "Whether visibility of this item is restricted to a group or role.",
              "enum": [
                "group",
                "role"
              ],
              "type": "string"
            },
            "value": {
              "description": "The name of the group or role to which visibility of this item is restricted.",
              "type": "string"
            }
          },
          "type": [
            "object",
            "null"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_comments",
    "resourceConfig": {
      "cursorField": [
        "updated"
      ],
      "stream": "issue_comments",
      "syncMode": "incremental"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details about a field.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "clauseNames": {
          "description": "The names that can be used to reference the field in an advanced search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ).",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "custom": {
          "description": "Whether the field is a custom field.",
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the field.",
          "type": "string"
        },
        "key": {
          "description": "The key of the field.",
          "type": "string"
        },
        "name": {
          "description": "The name of the field.",
          "type": "string"
        },
        "navigable": {
          "description": "Whether the field can be used as a column on the issue navigator.",
          "type": "boolean"
        },
        "orderable": {
          "description": "Whether the content of the field can be used to order lists.",
          "type": "boolean"
        },
        "schema": {
          "description": "The data schema for the field.",
          "properties": {
            "configuration": {
              "additionalProperties": true,
              "description": "If the field is a custom field, the configuration of the field.",
              "readOnly": true,
              "type": "object"
            },
            "custom": {
              "description": "If the field is a custom field, the URI of the field.",
              "readOnly": true,
              "type": "string"
            },
            "customId": {
              "description": "If the field is a custom field, the custom ID of the field.",
              "readOnly": true,
              "type": "integer"
            },
            "items": {
              "description": "When the data type is an array, the name of the field items within the array.",
              "readOnly": true,
              "type": "string"
            },
            "system": {
              "description": "If the field is a system field, the name of the field.",
              "readOnly": true,
              "type": "string"
            },
            "type": {
              "description": "The data type of the field.",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "scope": {
          "description": "The scope of the field.",
          "properties": {
            "project": {
              "description": "The project the item has scope in.",
              "properties": {
                "avatarUrls": {
                  "description": "The URLs of the project's avatars.",
                  "properties": {
                    "16x16": {
                      "description": "The URL of the item's 16x16 pixel avatar.",
                      "type": "string"
                    },
                    "24x24": {
                      "description": "The URL of the item's 24x24 pixel avatar.",
                      "type": "string"
                    },
                    "32x32": {
                      "description": "The URL of the item's 32x32 pixel avatar.",
                      "type": "string"
                    },
                    "48x48": {
                      "description": "The URL of the item's 48x48 pixel avatar.",
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "id": {
                  "description": "The ID of the project.",
                  "type": "string"
                },
                "key": {
                  "description": "The key of the project.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the project.",
                  "readOnly": true,
                  "type": "string"
                },
                "projectCategory": {
                  "description": "The category the project belongs to.",
                  "properties": {
                    "description": {
                      "description": "The name of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "id": {
                      "description": "The ID of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The description of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "self": {
                      "description": "The URL of the project category.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "projectTypeKey": {
                  "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                  "enum": [
                    "software",
                    "service_desk",
                    "business"
                  ],
                  "readOnly": true,
                  "type": "string"
                },
                "self": {
                  "description": "The URL of the project details.",
                  "readOnly": true,
                  "type": "string"
                },
                "simplified": {
                  "description": "Whether or not the project is simplified.",
                  "readOnly": true,
                  "type": "boolean"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "type": {
              "description": "The type of scope.",
              "enum": [
                "PROJECT",
                "TEMPLATE"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": [
            "object",
            "null"
          ]
        },
        "searchable": {
          "description": "Whether the content of the field can be searched.",
          "type": "boolean"
        },
        "untranslatedName": {
          "description": "The untranslated name of the field.",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_fields",
    "resourceConfig": {
      "stream": "issue_fields",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of a field configuration.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the field configuration.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the field configuration.",
          "type": "integer"
        },
        "isDefault": {
          "description": "Whether the field configuration is the default.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the field configuration.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_field_configurations",
    "resourceConfig": {
      "stream": "issue_field_configurations",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "https://json-schema.org/draft-07/schema#",
      "description": "The details of a custom field context.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the context.",
          "type": [
            "null",
            "string"
          ]
        },
        "fieldId": {
          "description": "Id of the related field",
          "type": [
            "null",
            "string"
          ]
        },
        "fieldType": {
          "description": "The type of the related field",
          "type": [
            "null",
            "string"
          ]
        },
        "id": {
          "description": "The ID of the context.",
          "type": [
            "null",
            "string"
          ]
        },
        "isAnyIssueType": {
          "description": "Whether the context applies to all issue types.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "isGlobalContext": {
          "description": "Whether the context is global.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "name": {
          "description": "The name of the context.",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_custom_field_contexts",
    "resourceConfig": {
      "stream": "issue_custom_field_contexts",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "https://json-schema.org/draft-07/schema#",
      "description": "Details of the custom field options for a context.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "contextId": {
          "description": "The ID of the context to which the custom field option belongs.",
          "type": [
            "null",
            "string"
          ]
        },
        "disabled": {
          "description": "Whether the option is disabled.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "fieldId": {
          "description": "The ID of the custom field to which the option belongs.",
          "type": [
            "null",
            "string"
          ]
        },
        "id": {
          "description": "The ID of the custom field option.",
          "type": [
            "null",
            "string"
          ]
        },
        "optionId": {
          "description": "For cascading options, the ID of the custom field option containing the cascading option.",
          "type": [
            "null",
            "string"
          ]
        },
        "value": {
          "description": "The value of the custom field option.",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_custom_field_options",
    "resourceConfig": {
      "stream": "issue_custom_field_options",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "A list of issue link type beans.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "id": {
          "description": "The ID of the issue link type. Used as the type of issue link in `issueLink` resource. Required on create when `name` isn't provided. Otherwise, read only.",
          "type": "string"
        },
        "inward": {
          "description": "The description of the issue link type inward link. Read only in `issueLink` resource. Required on create and optional on update in `issueLinkType` resource. Otherwise, read only.",
          "type": "string"
        },
        "name": {
          "description": "The name of the issue link type. Used as the type of issue link in `issueLink` resource. Required on create when `id` isn't provided. Otherwise, read only.",
          "type": "string"
        },
        "outward": {
          "description": "The description of the issue link type outward link. Read only in `issueLink` resource. Required on create and optional on update in `issueLinkType` resource. Otherwise, read only.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the issue link type. Read only.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_link_types",
    "resourceConfig": {
      "stream": "issue_link_types",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of an issue navigator column item.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "label": {
          "description": "The label representing the data displayed in the issue navigator column.",
          "type": "string"
        },
        "value": {
          "description": "The actual value/data associated with the label in the issue navigator column.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/value"
    ],
    "recommendedName": "issue_navigator_settings",
    "resourceConfig": {
      "stream": "issue_navigator_settings",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details about a notification scheme.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the notification scheme.",
          "type": "string"
        },
        "expand": {
          "description": "Expand options that include additional notification scheme details in the response.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the notification scheme.",
          "type": "integer"
        },
        "name": {
          "description": "The name of the notification scheme.",
          "type": "string"
        },
        "notificationSchemeEvents": {
          "description": "The notification events and associated recipients.",
          "items": {
            "properties": {
              "event": {
                "properties": {
                  "description": {
                    "description": "The description of the event.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The ID of the event. The event can be a Jira system event or a custom event.",
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the event.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "notifications": {
                "items": {
                  "properties": {
                    "emailAddress": {
                      "description": "The email address.",
                      "type": "string"
                    },
                    "expand": {
                      "description": "Expand options that include additional event notification details in the response.",
                      "type": "string"
                    },
                    "field": {
                      "description": "The custom user or group field.",
                      "properties": {
                        "clauseNames": {
                          "description": "The names that can be used to reference the field in an advanced search.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "uniqueItems": true
                        },
                        "custom": {
                          "description": "Whether the field is a custom field.",
                          "type": "boolean"
                        },
                        "id": {
                          "description": "The ID of the field.",
                          "type": "string"
                        },
                        "key": {
                          "description": "The key of the field.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the field.",
                          "type": "string"
                        },
                        "navigable": {
                          "description": "Whether the field can be used as a column on the issue navigator.",
                          "type": "boolean"
                        },
                        "orderable": {
                          "description": "Whether the content of the field can be used to order lists.",
                          "type": "boolean"
                        },
                        "schema": {
                          "description": "The data schema for the field.",
                          "properties": {
                            "configuration": {
                              "additionalProperties": true,
                              "description": "If the field is a custom field, the configuration of the field.",
                              "readOnly": true,
                              "type": "object"
                            },
                            "custom": {
                              "description": "If the field is a custom field, the URI of the field.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "customId": {
                              "description": "If the field is a custom field, the custom ID of the field.",
                              "readOnly": true,
                              "type": "integer"
                            },
                            "items": {
                              "description": "When the data type is an array, the name of the field items within the array.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "system": {
                              "description": "If the field is a system field, the name of the field.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "type": {
                              "description": "The data type of the field.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "scope": {
                          "description": "The scope of the field.",
                          "properties": {
                            "project": {
                              "description": "The project the item has scope in.",
                              "properties": {
                                "avatarUrls": {
                                  "description": "The URLs of the project's avatars.",
                                  "properties": {
                                    "16x16": {
                                      "description": "The URL of the item's 16x16 pixel avatar.",
                                      "type": "string"
                                    },
                                    "24x24": {
                                      "description": "The URL of the item's 24x24 pixel avatar.",
                                      "type": "string"
                                    },
                                    "32x32": {
                                      "description": "The URL of the item's 32x32 pixel avatar.",
                                      "type": "string"
                                    },
                                    "48x48": {
                                      "description": "The URL of the item's 48x48 pixel avatar.",
                                      "type": "string"
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "id": {
                                  "description": "The ID of the project.",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "The key of the project.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the project.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "projectCategory": {
                                  "description": "The category the project belongs to.",
                                  "properties": {
                                    "description": {
                                      "description": "The name of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The ID of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The description of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "self": {
                                      "description": "The URL of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "projectTypeKey": {
                                  "description": "The project type of the project.",
                                  "enum": [
                                    "software",
                                    "service_desk",
                                    "business"
                                  ],
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL of the project details.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "simplified": {
                                  "description": "Whether or not the project is simplified.",
                                  "readOnly": true,
                                  "type": "boolean"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "type": {
                              "description": "The type of scope.",
                              "enum": [
                                "PROJECT",
                                "TEMPLATE"
                              ],
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "searchable": {
                          "description": "Whether the content of the field can be searched.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "group": {
                      "description": "The specified group.",
                      "properties": {
                        "name": {
                          "description": "The name of group.",
                          "type": "string"
                        },
                        "self": {
                          "description": "The URL for these group details.",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "The ID of the notification.",
                      "type": "integer"
                    },
                    "notificationType": {
                      "description": "Identifies the recipients of the notification.",
                      "enum": [
                        "CurrentAssignee",
                        "Reporter",
                        "CurrentUser",
                        "ProjectLead",
                        "ComponentLead",
                        "User",
                        "Group",
                        "ProjectRole",
                        "EmailAddress",
                        "AllWatchers",
                        "UserCustomField",
                        "GroupCustomField"
                      ],
                      "type": "string"
                    },
                    "parameter": {
                      "description": "The value of the `notificationType`.",
                      "type": "string"
                    },
                    "projectRole": {
                      "description": "The specified project role.",
                      "properties": {
                        "actors": {
                          "description": "The list of users who act in this role.",
                          "items": {
                            "properties": {
                              "actorGroup": {
                                "properties": {
                                  "displayName": {
                                    "description": "The display name of the group.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the group",
                                    "type": "string"
                                  }
                                },
                                "readOnly": true,
                                "type": "object"
                              },
                              "actorUser": {
                                "properties": {
                                  "accountId": {
                                    "description": "The account ID of the user.",
                                    "maxLength": 128,
                                    "readOnly": true,
                                    "type": "string"
                                  }
                                },
                                "readOnly": true,
                                "type": "object"
                              },
                              "avatarUrl": {
                                "description": "The avatar of the role actor.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The display name of the role actor.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "id": {
                                "description": "The ID of the role actor.",
                                "readOnly": true,
                                "type": "integer"
                              },
                              "name": {
                                "description": "This property is no longer available and will be removed from the documentation soon.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of role actor.",
                                "enum": [
                                  "atlassian-group-role-actor",
                                  "atlassian-user-role-actor"
                                ],
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "readOnly": true,
                          "type": "array"
                        },
                        "admin": {
                          "description": "Whether this role is the admin role for the project.",
                          "readOnly": true,
                          "type": "boolean"
                        },
                        "currentUserRole": {
                          "description": "Whether the calling user is part of this role.",
                          "type": "boolean"
                        },
                        "default": {
                          "description": "Whether this role is the default role for the project",
                          "readOnly": true,
                          "type": "boolean"
                        },
                        "description": {
                          "description": "The description of the project role.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "id": {
                          "description": "The ID of the project role.",
                          "readOnly": true,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the project role.",
                          "type": "string"
                        },
                        "roleConfigurable": {
                          "description": "Whether the roles are configurable for this project.",
                          "readOnly": true,
                          "type": "boolean"
                        },
                        "scope": {
                          "description": "The scope of the role.",
                          "properties": {
                            "project": {
                              "description": "The project the item has scope in.",
                              "properties": {
                                "avatarUrls": {
                                  "description": "The URLs of the project's avatars.",
                                  "properties": {
                                    "16x16": {
                                      "description": "The URL of the item's 16x16 pixel avatar.",
                                      "type": "string"
                                    },
                                    "24x24": {
                                      "description": "The URL of the item's 24x24 pixel avatar.",
                                      "type": "string"
                                    },
                                    "32x32": {
                                      "description": "The URL of the item's 32x32 pixel avatar.",
                                      "type": "string"
                                    },
                                    "48x48": {
                                      "description": "The URL of the item's 48x48 pixel avatar.",
                                      "type": "string"
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "id": {
                                  "description": "The ID of the project.",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "The key of the project.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the project.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "projectCategory": {
                                  "description": "The category the project belongs to.",
                                  "properties": {
                                    "description": {
                                      "description": "The name of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The ID of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The description of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "self": {
                                      "description": "The URL of the project category.",
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "projectTypeKey": {
                                  "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                                  "enum": [
                                    "software",
                                    "service_desk",
                                    "business"
                                  ],
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "self": {
                                  "description": "The URL of the project details.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "simplified": {
                                  "description": "Whether or not the project is simplified.",
                                  "readOnly": true,
                                  "type": "boolean"
                                }
                              },
                              "readOnly": true,
                              "type": "object"
                            },
                            "type": {
                              "description": "The type of scope.",
                              "enum": [
                                "PROJECT",
                                "TEMPLATE"
                              ],
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "self": {
                          "description": "The URL the project role details.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "translatedName": {
                          "description": "The translated name of the project role.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "user": {
                      "description": "The specified user.",
                      "properties": {
                        "accountId": {
                          "description": "The account ID of the user.",
                          "maxLength": 128,
                          "type": "string"
                        },
                        "accountType": {
                          "description": "The type of account represented by this user.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "active": {
                          "description": "Whether the user is active.",
                          "readOnly": true,
                          "type": "boolean"
                        },
                        "avatarUrls": {
                          "description": "The avatars of the user.",
                          "properties": {
                            "16x16": {
                              "description": "The URL of the item's 16x16 pixel avatar.",
                              "type": "string"
                            },
                            "24x24": {
                              "description": "The URL of the item's 24x24 pixel avatar.",
                              "type": "string"
                            },
                            "32x32": {
                              "description": "The URL of the item's 32x32 pixel avatar.",
                              "type": "string"
                            },
                            "48x48": {
                              "description": "The URL of the item's 48x48 pixel avatar.",
                              "type": "string"
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "displayName": {
                          "description": "The display name of the user.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "emailAddress": {
                          "description": "The email address of the user.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "key": {
                          "description": "This property is no longer available and will be removed from the documentation soon.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "name": {
                          "description": "This property is no longer available and will be removed from the documentation soon.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "self": {
                          "description": "The URL of the user.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "timeZone": {
                          "description": "The time zone specified in the user's profile.",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": [
            "array",
            "null"
          ]
        },
        "scope": {
          "description": "The scope of the notification scheme.",
          "properties": {
            "project": {
              "description": "The project the item has scope in.",
              "properties": {
                "avatarUrls": {
                  "description": "The URLs of the project's avatars.",
                  "properties": {
                    "16x16": {
                      "description": "The URL of the item's 16x16 pixel avatar.",
                      "type": "string"
                    },
                    "24x24": {
                      "description": "The URL of the item's 24x24 pixel avatar.",
                      "type": "string"
                    },
                    "32x32": {
                      "description": "The URL of the item's 32x32 pixel avatar.",
                      "type": "string"
                    },
                    "48x48": {
                      "description": "The URL of the item's 48x48 pixel avatar.",
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "id": {
                  "description": "The ID of the project.",
                  "type": "string"
                },
                "key": {
                  "description": "The key of the project.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the project.",
                  "readOnly": true,
                  "type": "string"
                },
                "projectCategory": {
                  "description": "The category the project belongs to.",
                  "properties": {
                    "description": {
                      "description": "The name of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "id": {
                      "description": "The ID of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The description of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "self": {
                      "description": "The URL of the project category.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "projectTypeKey": {
                  "description": "The project type of the project.",
                  "enum": [
                    "software",
                    "service_desk",
                    "business"
                  ],
                  "readOnly": true,
                  "type": "string"
                },
                "self": {
                  "description": "The URL of the project details.",
                  "readOnly": true,
                  "type": "string"
                },
                "simplified": {
                  "description": "Whether or not the project is simplified.",
                  "readOnly": true,
                  "type": "boolean"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "type": {
              "description": "The type of scope.",
              "enum": [
                "PROJECT",
                "TEMPLATE"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": [
            "object",
            "null"
          ]
        },
        "self": {
          "description": "",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_notification_schemes",
    "resourceConfig": {
      "stream": "issue_notification_schemes",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "An issue priority.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the issue priority.",
          "type": "string"
        },
        "iconUrl": {
          "description": "The URL of the icon for the issue priority.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue priority.",
          "type": "string"
        },
        "isDefault": {
          "description": "Indicates if this issue priority is the default.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "name": {
          "description": "The name of the issue priority.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the issue priority.",
          "type": "string"
        },
        "statusColor": {
          "description": "The color used to indicate the issue priority.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_priorities",
    "resourceConfig": {
      "stream": "issue_priorities",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "An entity property, for more information see [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "isdefault": {
          "description": "Indicates if the property is the default property.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "issueId": {
          "description": "Id of the related issue.",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "key": {
          "description": "The key of the property. Required on create and update.",
          "type": "string"
        },
        "value": {
          "description": "The value of the property. Required on create and update."
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/key"
    ],
    "recommendedName": "issue_properties",
    "resourceConfig": {
      "stream": "issue_properties",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of an issue remote link.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "application": {
          "description": "Details of the remote application the linked item is in.",
          "properties": {
            "name": {
              "description": "The name of the application. Used in conjunction with the (remote) object icon title to display a tooltip for the link's icon. The tooltip takes the format \"[application name] icon title\". Blank items are excluded from the tooltip title. If both items are blank, the icon tooltop displays as \"Web Link\". Grouping and sorting of links may place links without an application name last.",
              "type": "string"
            },
            "type": {
              "description": "The name-spaced type of the application, used by registered rendering apps.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "globalId": {
          "description": "The global ID of the link, such as the ID of the item on the remote system.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the link.",
          "type": "integer"
        },
        "issueId": {
          "description": "Id of the related issue.",
          "type": [
            "null",
            "string"
          ]
        },
        "object": {
          "description": "Details of the item linked to.",
          "properties": {
            "icon": {
              "description": "Details of the icon for the item. If no icon is defined, the default link icon is used in Jira.",
              "properties": {
                "link": {
                  "description": "The URL of the tooltip, used only for a status icon. If not set, the status icon in Jira is not clickable.",
                  "type": "string"
                },
                "title": {
                  "description": "The title of the icon. This is used as follows:\n\n *  For a status icon it is used as a tooltip on the icon. If not set, the status icon doesn't display a tooltip in Jira.\n *  For the remote object icon it is used in conjunction with the application name to display a tooltip for the link's icon. The tooltip takes the format \"[application name] icon title\". Blank itemsare excluded from the tooltip title. If both items are blank, the icon tooltop displays as \"Web Link\".",
                  "type": "string"
                },
                "url16x16": {
                  "description": "The URL of an icon that displays at 16x16 pixel in Jira.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "status": {
              "description": "The status of the item.",
              "properties": {
                "icon": {
                  "description": "Details of the icon representing the status. If not provided, no status icon displays in Jira.",
                  "properties": {
                    "link": {
                      "description": "The URL of the tooltip, used only for a status icon. If not set, the status icon in Jira is not clickable.",
                      "type": "string"
                    },
                    "title": {
                      "description": "The title of the icon. This is used as follows:\n\n *  For a status icon it is used as a tooltip on the icon. If not set, the status icon doesn't display a tooltip in Jira.\n *  For the remote object icon it is used in conjunction with the application name to display a tooltip for the link's icon. The tooltip takes the format \"[application name] icon title\". Blank itemsare excluded from the tooltip title. If both items are blank, the icon tooltop displays as \"Web Link\".",
                      "type": "string"
                    },
                    "url16x16": {
                      "description": "The URL of an icon that displays at 16x16 pixel in Jira.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "resolved": {
                  "description": "Whether the item is resolved. If set to \"true\", the link to the issue is displayed in a strikethrough font, otherwise the link displays in normal font.",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "summary": {
              "description": "The summary details of the item.",
              "type": "string"
            },
            "title": {
              "description": "The title of the item.",
              "type": "string"
            },
            "url": {
              "description": "The URL of the item.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "relationship": {
          "description": "Description of the relationship between the issue and the linked item.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the link.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_remote_links",
    "resourceConfig": {
      "stream": "issue_remote_links",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of an issue resolution.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the issue resolution.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue resolution.",
          "type": "string"
        },
        "isDefault": {
          "description": "Indicates if this is the default issue resolution.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "name": {
          "description": "The name of the issue resolution.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the issue resolution.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_resolutions",
    "resourceConfig": {
      "stream": "issue_resolutions",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "List of security schemes.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "defaultSecurityLevelId": {
          "description": "The ID of the default security level.",
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "The description of the issue security scheme.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue security scheme.",
          "readOnly": true,
          "type": "integer"
        },
        "levels": {
          "description": "The issue security levels associated with the security scheme.",
          "items": {
            "properties": {
              "description": {
                "description": "A brief description of the issue security level.",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the issue security level.",
                "readOnly": true,
                "type": "string"
              },
              "name": {
                "description": "The unique name of the issue security level.",
                "readOnly": true,
                "type": "string"
              },
              "self": {
                "description": "The URL of the issue level security item.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the issue security scheme.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the issue security scheme.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_security_schemes",
    "resourceConfig": {
      "stream": "issue_security_schemes",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "https://json-schema.org/draft-07/schema#",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "fields": {
          "description": "Represents the custom fields associated with the issue transition",
          "type": [
            "null",
            "string"
          ]
        },
        "hasScreen": {
          "description": "Indicates if the transition has an associated screen",
          "type": [
            "null",
            "boolean"
          ]
        },
        "id": {
          "description": "Unique identifier for the issue transition",
          "type": [
            "null",
            "string"
          ]
        },
        "isAvailable": {
          "description": "Indicates if the transition is available",
          "type": [
            "null",
            "boolean"
          ]
        },
        "isConditional": {
          "description": "Indicates if the transition is conditional",
          "type": [
            "null",
            "boolean"
          ]
        },
        "isGlobal": {
          "description": "Indicates if the transition is global",
          "type": [
            "null",
            "boolean"
          ]
        },
        "isInitial": {
          "description": "Indicates if the transition is the initial transition",
          "type": [
            "null",
            "boolean"
          ]
        },
        "isLooped": {
          "description": "Indicates if the transition is a loop transition",
          "type": [
            "null",
            "boolean"
          ]
        },
        "issueId": {
          "description": "Identifier of the issue associated with the transition",
          "type": [
            "null",
            "string"
          ]
        },
        "name": {
          "description": "Name of the issue transition",
          "type": [
            "null",
            "string"
          ]
        },
        "to": {
          "description": "Represents the destination status of the issue transition.",
          "properties": {
            "description": {
              "description": "Description of the destination status",
              "type": [
                "null",
                "string"
              ]
            },
            "iconUrl": {
              "description": "URL of the icon associated with the destination status",
              "type": [
                "null",
                "string"
              ]
            },
            "id": {
              "description": "Unique identifier for the destination status",
              "type": [
                "null",
                "string"
              ]
            },
            "name": {
              "description": "Name of the destination status",
              "type": [
                "null",
                "string"
              ]
            },
            "self": {
              "description": "Self URI for the destination status",
              "type": [
                "null",
                "string"
              ]
            },
            "statusCategory": {
              "description": "Contains information about the category of the status.",
              "properties": {
                "colorName": {
                  "description": "Name of the color associated with the status category",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "id": {
                  "description": "Unique identifier for the status category",
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "key": {
                  "description": "Key of the status category",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "name": {
                  "description": "Name of the status category",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "description": "Self URI for the status category",
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            }
          },
          "type": [
            "null",
            "object"
          ]
        }
      },
      "title": "Issue Transitions",
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/issueId",
      "/id"
    ],
    "recommendedName": "issue_transitions",
    "resourceConfig": {
      "stream": "issue_transitions",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of an issue type scheme.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "defaultIssueTypeId": {
          "description": "The ID of the default issue type associated with the issue type scheme.",
          "type": "string"
        },
        "description": {
          "description": "A brief description of the issue type scheme.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for the issue type scheme.",
          "type": "string"
        },
        "isDefault": {
          "description": "Indicates whether the issue type scheme is set as the default.",
          "type": "boolean"
        },
        "name": {
          "description": "The name given to the issue type scheme.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_type_schemes",
    "resourceConfig": {
      "stream": "issue_type_schemes",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "https://json-schema.org/draft-07/schema#",
      "description": "Details about an issue type.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "avatarId": {
          "description": "The ID of the issue type's avatar.",
          "readOnly": true,
          "type": [
            "null",
            "integer"
          ]
        },
        "description": {
          "description": "The description of the issue type.",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "entityId": {
          "description": "Unique ID for next-gen projects.",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "hierarchyLevel": {
          "description": "Hierarchy level of the issue type.",
          "readOnly": true,
          "type": [
            "null",
            "integer"
          ]
        },
        "iconUrl": {
          "description": "The URL of the issue type's avatar.",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "id": {
          "description": "The ID of the issue type.",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "name": {
          "description": "The name of the issue type.",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "scope": {
          "description": "Details of the next-gen projects the issue type is available in.",
          "properties": {
            "project": {
              "description": "The project the item has scope in.",
              "properties": {
                "avatarUrls": {
                  "description": "The URLs of the project's avatars.",
                  "properties": {
                    "16x16": {
                      "description": "The URL of the item's 16x16 pixel avatar.",
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "24x24": {
                      "description": "The URL of the item's 24x24 pixel avatar.",
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "32x32": {
                      "description": "The URL of the item's 32x32 pixel avatar.",
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "48x48": {
                      "description": "The URL of the item's 48x48 pixel avatar.",
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "readOnly": true,
                  "type": [
                    "null",
                    "object"
                  ]
                },
                "id": {
                  "description": "The ID of the project.",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "key": {
                  "description": "The key of the project.",
                  "readOnly": true,
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "name": {
                  "description": "The name of the project.",
                  "readOnly": true,
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "projectCategory": {
                  "description": "The category the project belongs to.",
                  "properties": {
                    "description": {
                      "description": "The name of the project category.",
                      "readOnly": true,
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "id": {
                      "description": "The ID of the project category.",
                      "readOnly": true,
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "name": {
                      "description": "The description of the project category.",
                      "readOnly": true,
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "self": {
                      "description": "The URL of the project category.",
                      "readOnly": true,
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "readOnly": true,
                  "type": [
                    "null",
                    "object"
                  ]
                },
                "projectTypeKey": {
                  "description": "The project type of the project.",
                  "enum": [
                    "software",
                    "service_desk",
                    "business"
                  ],
                  "readOnly": true,
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "description": "The URL of the project details.",
                  "readOnly": true,
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "simplified": {
                  "description": "Whether or not the project is simplified.",
                  "readOnly": true,
                  "type": "boolean"
                }
              },
              "readOnly": true,
              "type": [
                "null",
                "object"
              ]
            },
            "type": {
              "description": "The type of scope.",
              "readOnly": true,
              "type": [
                "null",
                "string"
              ]
            }
          },
          "readOnly": true,
          "type": [
            "null",
            "object"
          ]
        },
        "self": {
          "description": "The URL of these issue type details.",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "subtask": {
          "description": "The URL of these issue type details.",
          "readOnly": true,
          "type": [
            "null",
            "boolean"
          ]
        },
        "untranslatedName": {
          "description": "The untranslated name of the issue type.",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_types",
    "resourceConfig": {
      "stream": "issue_types",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of an issue type screen scheme.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the issue type screen scheme.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue type screen scheme.",
          "type": "string"
        },
        "name": {
          "description": "The name of the issue type screen scheme.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_type_screen_schemes",
    "resourceConfig": {
      "stream": "issue_type_screen_schemes",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "The details of votes on an issue.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "hasVoted": {
          "description": "Whether the user making this request has voted on the issue.",
          "readOnly": true,
          "type": "boolean"
        },
        "issueId": {
          "description": "Id of the related issue.",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "self": {
          "description": "The URL of these issue vote details.",
          "readOnly": true,
          "type": "string"
        },
        "voters": {
          "description": "List of the users who have voted on this issue. An empty list is returned when the calling user doesn't have the *View voters and watchers* project permission.",
          "items": {
            "properties": {
              "accountId": {
                "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
                "maxLength": 128,
                "type": "string"
              },
              "accountType": {
                "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
                "enum": [
                  "atlassian",
                  "app",
                  "customer",
                  "unknown"
                ],
                "readOnly": true,
                "type": "string"
              },
              "active": {
                "description": "Whether the user is active.",
                "readOnly": true,
                "type": "boolean"
              },
              "applicationRoles": {
                "description": "The application roles the user is assigned to.",
                "properties": {
                  "callback": {
                    "description": "Callback information.",
                    "type": "object"
                  },
                  "items": {
                    "items": {
                      "properties": {
                        "defaultGroups": {
                          "description": "The groups that are granted default access for this application role.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "uniqueItems": true
                        },
                        "defined": {
                          "description": "Deprecated.",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "The groups associated with the application role.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "uniqueItems": true
                        },
                        "hasUnlimitedSeats": {
                          "description": "Indicates if there are unlimited seats for this application role.",
                          "type": "boolean"
                        },
                        "key": {
                          "description": "The key of the application role.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The display name of the application role.",
                          "type": "string"
                        },
                        "numberOfSeats": {
                          "description": "The maximum count of users on your license.",
                          "type": "integer"
                        },
                        "platform": {
                          "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                          "type": "boolean"
                        },
                        "remainingSeats": {
                          "description": "The count of users remaining on your license.",
                          "type": "integer"
                        },
                        "selectedByDefault": {
                          "description": "Determines whether this application role should be selected by default on user creation.",
                          "type": "boolean"
                        },
                        "userCount": {
                          "description": "The number of users counting against your license.",
                          "type": "integer"
                        },
                        "userCountDescription": {
                          "description": "The type of users being counted against your license.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "max-results": {
                    "description": "Max results related information.",
                    "type": "integer"
                  },
                  "pagingCallback": {
                    "description": "Paging callback.",
                    "type": "object"
                  },
                  "size": {
                    "description": "Size XML information.",
                    "type": "integer"
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "avatarUrls": {
                "description": "The avatars of the user.",
                "properties": {
                  "16x16": {
                    "description": "The URL of the item's 16x16 pixel avatar.",
                    "type": "string"
                  },
                  "24x24": {
                    "description": "The URL of the item's 24x24 pixel avatar.",
                    "type": "string"
                  },
                  "32x32": {
                    "description": "The URL of the item's 32x32 pixel avatar.",
                    "type": "string"
                  },
                  "48x48": {
                    "description": "The URL of the item's 48x48 pixel avatar.",
                    "type": "string"
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "displayName": {
                "description": "The display name of the user. Depending on the user's privacy setting, this may return an alternative value.",
                "readOnly": true,
                "type": "string"
              },
              "emailAddress": {
                "description": "The email address of the user. Depending on the user's privacy setting, this may be returned as null.",
                "readOnly": true,
                "type": "string"
              },
              "expand": {
                "description": "Expand options that include additional user details in the response.",
                "readOnly": true,
                "type": "string"
              },
              "groups": {
                "description": "The groups that the user belongs to.",
                "properties": {
                  "callback": {
                    "description": "Callback information.",
                    "type": "object"
                  },
                  "items": {
                    "items": {
                      "properties": {
                        "name": {
                          "description": "The name of group.",
                          "type": "string"
                        },
                        "self": {
                          "description": "The URL for these group details.",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "max-results": {
                    "description": "Max results related information.",
                    "type": "integer"
                  },
                  "pagingCallback": {
                    "description": "Paging callback.",
                    "type": "object"
                  },
                  "size": {
                    "description": "Size XML information.",
                    "type": "integer"
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "key": {
                "description": "This property is no longer available and will be removed from the documentation soon. See the deprecation notice for details.",
                "type": "string"
              },
              "locale": {
                "description": "The locale of the user. Depending on the user's privacy setting, this may be returned as null.",
                "readOnly": true,
                "type": "string"
              },
              "name": {
                "description": "This property is no longer available and will be removed from the documentation soon. See the deprecation notice for details.",
                "type": "string"
              },
              "self": {
                "description": "The URL of the user.",
                "readOnly": true,
                "type": "string"
              },
              "timeZone": {
                "description": "The time zone specified in the user's profile. Depending on the user's privacy setting, this may be returned as null.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "readOnly": true,
          "type": "array"
        },
        "votes": {
          "description": "The number of votes on the issue.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/self"
    ],
    "recommendedName": "issue_votes",
    "resourceConfig": {
      "stream": "issue_votes",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "The details of watchers on an issue.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "isWatching": {
          "description": "Whether the calling user is watching this issue.",
          "readOnly": true,
          "type": "boolean"
        },
        "issueId": {
          "description": "Id of the related issue.",
          "type": [
            "null",
            "string"
          ]
        },
        "self": {
          "description": "The URL of these issue watcher details.",
          "readOnly": true,
          "type": "string"
        },
        "watchCount": {
          "description": "The number of users watching this issue.",
          "readOnly": true,
          "type": "integer"
        },
        "watchers": {
          "description": "Details of the users watching this issue.",
          "items": {
            "properties": {
              "accountId": {
                "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
                "maxLength": 128,
                "type": "string"
              },
              "accountType": {
                "description": "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)",
                "readOnly": true,
                "type": "string"
              },
              "active": {
                "description": "Whether the user is active.",
                "readOnly": true,
                "type": "boolean"
              },
              "avatarUrls": {
                "description": "The avatars of the user.",
                "properties": {
                  "16x16": {
                    "description": "The URL of the item's 16x16 pixel avatar.",
                    "type": "string"
                  },
                  "24x24": {
                    "description": "The URL of the item's 24x24 pixel avatar.",
                    "type": "string"
                  },
                  "32x32": {
                    "description": "The URL of the item's 32x32 pixel avatar.",
                    "type": "string"
                  },
                  "48x48": {
                    "description": "The URL of the item's 48x48 pixel avatar.",
                    "type": "string"
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "displayName": {
                "description": "The display name of the user. Depending on the user's privacy settings, this may return an alternative value.",
                "readOnly": true,
                "type": "string"
              },
              "emailAddress": {
                "description": "The email address of the user. Depending on the user's privacy settings, this may be returned as null.",
                "readOnly": true,
                "type": "string"
              },
              "key": {
                "description": "This property is no longer available and will be removed from the documentation soon. See the deprecation notice for details.",
                "readOnly": true,
                "type": "string"
              },
              "name": {
                "description": "This property is no longer available and will be removed from the documentation soon. See the deprecation notice for details.",
                "readOnly": true,
                "type": "string"
              },
              "self": {
                "description": "The URL of the user.",
                "readOnly": true,
                "type": "string"
              },
              "timeZone": {
                "description": "The time zone specified in the user's profile. Depending on the user's privacy settings, this may be returned as null.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/self"
    ],
    "recommendedName": "issue_watchers",
    "resourceConfig": {
      "stream": "issue_watchers",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of a worklog.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "author": {
          "description": "Details of the user who created the worklog.",
          "properties": {
            "accountId": {
              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "maxLength": 128,
              "type": "string"
            },
            "accountType": {
              "description": "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)",
              "readOnly": true,
              "type": "string"
            },
            "active": {
              "description": "Whether the user is active.",
              "readOnly": true,
              "type": "boolean"
            },
            "avatarUrls": {
              "description": "The avatars of the user.",
              "properties": {
                "16x16": {
                  "description": "The URL of the item's 16x16 pixel avatar.",
                  "type": "string"
                },
                "24x24": {
                  "description": "The URL of the item's 24x24 pixel avatar.",
                  "type": "string"
                },
                "32x32": {
                  "description": "The URL of the item's 32x32 pixel avatar.",
                  "type": "string"
                },
                "48x48": {
                  "description": "The URL of the item's 48x48 pixel avatar.",
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "displayName": {
              "description": "The display name of the user. Depending on the user\u2019s privacy settings, this may return an alternative value.",
              "readOnly": true,
              "type": "string"
            },
            "emailAddress": {
              "description": "The email address of the user. Depending on the user\u2019s privacy settings, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            },
            "key": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "readOnly": true,
              "type": "string"
            },
            "self": {
              "description": "The URL of the user.",
              "readOnly": true,
              "type": "string"
            },
            "timeZone": {
              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy settings, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "comment": {
          "description": "A comment about the worklog in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/). Optional when creating or updating a worklog.",
          "type": "object"
        },
        "created": {
          "description": "The datetime on which the worklog was created.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the worklog record.",
          "readOnly": true,
          "type": "string"
        },
        "issueId": {
          "description": "The ID of the issue this worklog is for.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "description": "Details of properties for the worklog. Optional when creating or updating a worklog.",
          "items": {
            "properties": {
              "key": {
                "description": "The key of the property. Required on create and update.",
                "type": "string"
              },
              "value": {
                "description": "The value of the property. Required on create and update."
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "self": {
          "description": "The URL of the worklog item.",
          "readOnly": true,
          "type": "string"
        },
        "started": {
          "description": "The datetime on which the worklog effort was started. Required when creating a worklog. Optional when updating a worklog.",
          "format": "date-time",
          "type": "string"
        },
        "timeSpent": {
          "description": "The time spent working on the issue as days (#d), hours (#h), or minutes (#m or #). Required when creating a worklog if `timeSpentSeconds` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpentSecond` is provided.",
          "type": "string"
        },
        "timeSpentSeconds": {
          "description": "The time in seconds spent working on the issue. Required when creating a worklog if `timeSpent` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpent` is provided.",
          "type": "integer"
        },
        "updateAuthor": {
          "description": "Details of the user who last updated the worklog.",
          "properties": {
            "accountId": {
              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "maxLength": 128,
              "type": "string"
            },
            "accountType": {
              "description": "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)",
              "readOnly": true,
              "type": "string"
            },
            "active": {
              "description": "Whether the user is active.",
              "readOnly": true,
              "type": "boolean"
            },
            "avatarUrls": {
              "description": "The avatars of the user.",
              "properties": {
                "16x16": {
                  "description": "The URL of the item's 16x16 pixel avatar.",
                  "type": "string"
                },
                "24x24": {
                  "description": "The URL of the item's 24x24 pixel avatar.",
                  "type": "string"
                },
                "32x32": {
                  "description": "The URL of the item's 32x32 pixel avatar.",
                  "type": "string"
                },
                "48x48": {
                  "description": "The URL of the item's 48x48 pixel avatar.",
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "displayName": {
              "description": "The display name of the user. Depending on the user\u2019s privacy settings, this may return an alternative value.",
              "readOnly": true,
              "type": "string"
            },
            "emailAddress": {
              "description": "The email address of the user. Depending on the user\u2019s privacy settings, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            },
            "key": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "readOnly": true,
              "type": "string"
            },
            "self": {
              "description": "The URL of the user.",
              "readOnly": true,
              "type": "string"
            },
            "timeZone": {
              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy settings, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The datetime on which the worklog was last updated.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "visibility": {
          "description": "Details about any restrictions in the visibility of the worklog. Optional when creating or updating a worklog.",
          "properties": {
            "type": {
              "description": "Whether visibility of this item is restricted to a group or role.",
              "enum": [
                "group",
                "role"
              ],
              "type": "string"
            },
            "value": {
              "description": "The name of the group or role to which visibility of this item is restricted.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "issue_worklogs",
    "resourceConfig": {
      "cursorField": [
        "updated"
      ],
      "stream": "issue_worklogs",
      "syncMode": "incremental"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details of an application property.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "allowedValues": {
          "description": "The allowed values for the application property, if applicable.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "defaultValue": {
          "description": "The default value of the application property.",
          "type": "string"
        },
        "desc": {
          "description": "The description of the application property.",
          "type": "string"
        },
        "example": {
          "description": "An example or sample value for the application property.",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the application property. The ID is the same as the key.",
          "type": "string"
        },
        "key": {
          "description": "The key identifier of the application property. The key is the same as the ID.",
          "type": "string"
        },
        "name": {
          "description": "The name or title of the application property.",
          "type": "string"
        },
        "type": {
          "description": "The data type (e.g., string, number) of the application property.",
          "type": "string"
        },
        "value": {
          "description": "The new value assigned to the application property.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "jira_settings",
    "resourceConfig": {
      "stream": "jira_settings",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "label": {
          "description": "The label associated with the issue in Jira.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/label"
    ],
    "recommendedName": "labels",
    "resourceConfig": {
      "stream": "labels",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details about permissions.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "Description of the permission",
          "type": [
            "null",
            "string"
          ]
        },
        "key": {
          "description": "Unique key identifier for the permission",
          "type": [
            "null",
            "string"
          ]
        },
        "name": {
          "description": "Name of the permission",
          "type": [
            "null",
            "string"
          ]
        },
        "type": {
          "description": "Type of permission",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/key"
    ],
    "recommendedName": "permissions",
    "resourceConfig": {
      "stream": "permissions",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "List of all permission schemes.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "A description for the permission scheme.",
          "type": "string"
        },
        "expand": {
          "description": "The expand options available for the permission scheme.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the permission scheme.",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The name of the permission scheme. Must be unique.",
          "type": "string"
        },
        "permissions": {
          "description": "The permission scheme to create or update. See [About permission schemes and grants](#about-permission-schemes-and-grants) for more information.",
          "items": {
            "properties": {
              "holder": {
                "description": "The user or group being granted the permission. It consists of a `type` and a type-dependent `parameter`. See [Holder object](#holder-object) in *Get all permission schemes* for more information.",
                "properties": {
                  "expand": {
                    "description": "Expand options that include additional permission holder details in the response.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "parameter": {
                    "description": "The identifier of permission holder.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of permission holder.",
                    "type": "string"
                  },
                  "value": {
                    "type": [
                      "null",
                      "string"
                    ]
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "The ID of the permission granted details.",
                "readOnly": true,
                "type": "integer"
              },
              "permission": {
                "description": "The permission to grant. This permission can be one of the built-in permissions or a custom permission added by an app. See [Built-in permissions](#built-in-permissions) in *Get all permission schemes* for more information about the built-in permissions. See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/) and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/) module documentation for more information about custom permissions.",
                "type": "string"
              },
              "self": {
                "description": "The URL of the permission granted details.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "scope": {
          "description": "The scope of the permission scheme.",
          "properties": {
            "project": {
              "description": "The project the item has scope in.",
              "properties": {
                "avatarUrls": {
                  "description": "The URLs of the project's avatars.",
                  "properties": {
                    "16x16": {
                      "description": "The URL of the item's 16x16 pixel avatar.",
                      "type": "string"
                    },
                    "24x24": {
                      "description": "The URL of the item's 24x24 pixel avatar.",
                      "type": "string"
                    },
                    "32x32": {
                      "description": "The URL of the item's 32x32 pixel avatar.",
                      "type": "string"
                    },
                    "48x48": {
                      "description": "The URL of the item's 48x48 pixel avatar.",
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "id": {
                  "description": "The ID of the project.",
                  "type": "string"
                },
                "key": {
                  "description": "The key of the project.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the project.",
                  "readOnly": true,
                  "type": "string"
                },
                "projectCategory": {
                  "description": "The category the project belongs to.",
                  "properties": {
                    "description": {
                      "description": "The name of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "id": {
                      "description": "The ID of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The description of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "self": {
                      "description": "The URL of the project category.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "projectTypeKey": {
                  "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                  "enum": [
                    "software",
                    "service_desk",
                    "business"
                  ],
                  "readOnly": true,
                  "type": "string"
                },
                "self": {
                  "description": "The URL of the project details.",
                  "readOnly": true,
                  "type": "string"
                },
                "simplified": {
                  "description": "Whether or not the project is simplified.",
                  "readOnly": true,
                  "type": "boolean"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "type": {
              "description": "The type of scope.",
              "enum": [
                "PROJECT",
                "TEMPLATE"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "self": {
          "description": "The URL of the permission scheme.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "permission_schemes",
    "resourceConfig": {
      "stream": "permission_schemes",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details about a project.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "archived": {
          "description": "Whether the project is archived.",
          "readOnly": true,
          "type": "boolean"
        },
        "archivedBy": {
          "description": "The user who archived the project.",
          "readOnly": true
        },
        "archivedDate": {
          "description": "The date when the project was archived.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "assigneeType": {
          "description": "The default assignee when creating issues for this project.",
          "enum": [
            "PROJECT_LEAD",
            "UNASSIGNED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "avatarUrls": {
          "description": "The URLs of the project's avatars.",
          "readOnly": true
        },
        "components": {
          "description": "List of the components contained in the project.",
          "readOnly": true,
          "type": "array"
        },
        "deleted": {
          "description": "Whether the project is marked as deleted.",
          "readOnly": true,
          "type": "boolean"
        },
        "deletedBy": {
          "description": "The user who marked the project as deleted.",
          "readOnly": true
        },
        "deletedDate": {
          "description": "The date when the project was marked as deleted.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "A brief description of the project.",
          "readOnly": true,
          "type": "string"
        },
        "email": {
          "description": "An email address associated with the project.",
          "type": "string"
        },
        "entityId": {
          "description": "The unique identifier of the project entity.",
          "type": [
            "null",
            "string"
          ]
        },
        "expand": {
          "description": "Expand options that include additional project details in the response.",
          "readOnly": true,
          "type": "string"
        },
        "favourite": {
          "description": "Whether the project is selected as a favorite.",
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the project.",
          "type": "string"
        },
        "insight": {
          "description": "Insights about the project.",
          "readOnly": true
        },
        "isPrivate": {
          "description": "Whether the project is private.",
          "readOnly": true,
          "type": "boolean"
        },
        "issueTypeHierarchy": {
          "description": "The issue type hierarchy for the project",
          "readOnly": true
        },
        "issueTypes": {
          "description": "List of the issue types available in the project.",
          "readOnly": true,
          "type": "array"
        },
        "key": {
          "description": "The key of the project.",
          "readOnly": true,
          "type": "string"
        },
        "lead": {
          "description": "The username of the project lead.",
          "readOnly": true
        },
        "name": {
          "description": "The name of the project.",
          "readOnly": true,
          "type": "string"
        },
        "permissions": {
          "description": "User permissions on the project",
          "readOnly": true
        },
        "projectCategory": {
          "description": "The category the project belongs to.",
          "readOnly": true
        },
        "projectTypeKey": {
          "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
          "enum": [
            "software",
            "service_desk",
            "business"
          ],
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "additionalProperties": true,
          "description": "Map of project properties",
          "readOnly": true,
          "type": "object"
        },
        "retentionTillDate": {
          "description": "The date when the project is deleted permanently.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "roles": {
          "additionalProperties": true,
          "description": "The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).",
          "readOnly": true,
          "type": "object"
        },
        "self": {
          "description": "The URL of the project details.",
          "readOnly": true,
          "type": "string"
        },
        "simplified": {
          "description": "Whether the project is simplified.",
          "readOnly": true,
          "type": "boolean"
        },
        "style": {
          "description": "The type of the project.",
          "enum": [
            "classic",
            "next-gen"
          ],
          "readOnly": true,
          "type": "string"
        },
        "url": {
          "description": "A link to information about this project, such as project documentation.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "Unique ID for next-gen projects.",
          "readOnly": true,
          "type": "string"
        },
        "versions": {
          "description": "The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).",
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "projects",
    "resourceConfig": {
      "stream": "projects",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "https://json-schema.org/draft-07/schema#",
      "description": "Project Roles",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "actors": {
          "description": "A list of actors assigned to the project role",
          "items": {
            "description": "Details of an actor (group or user)",
            "properties": {
              "actorGroup": {
                "description": "Details of an actor group",
                "properties": {
                  "displayName": {
                    "description": "The display name of the actor group.",
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "groupId": {
                    "description": "The ID of the actor group.",
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "name": {
                    "description": "The name of the actor group.",
                    "type": [
                      "null",
                      "string"
                    ]
                  }
                },
                "type": [
                  "null",
                  "object"
                ]
              },
              "actorUser": {
                "description": "Details of an actor user",
                "properties": {
                  "accountId": {
                    "description": "The account ID of the actor user.",
                    "type": [
                      "null",
                      "string"
                    ]
                  }
                },
                "type": [
                  "null",
                  "object"
                ]
              },
              "avatarUrl": {
                "description": "The URL of the user's avatar.",
                "type": [
                  "null",
                  "string"
                ]
              },
              "displayName": {
                "description": "The display name of the actor.",
                "type": [
                  "null",
                  "string"
                ]
              },
              "id": {
                "description": "The ID of the actor.",
                "type": [
                  "null",
                  "integer"
                ]
              },
              "name": {
                "description": "The name of the actor.",
                "type": [
                  "null",
                  "string"
                ]
              },
              "type": {
                "description": "The type of the actor (e.g., user or group).",
                "type": [
                  "null",
                  "string"
                ]
              }
            },
            "type": [
              "null",
              "object"
            ]
          },
          "type": [
            "null",
            "array"
          ]
        },
        "admin": {
          "description": "Flag indicating if the user has admin role.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "currentUserRole": {
          "description": "The role assigned to the current user.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "default": {
          "description": "Flag indicating if it is the default role.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "description": {
          "description": "The description of the project role.",
          "type": [
            "null",
            "string"
          ]
        },
        "id": {
          "description": "The ID of the project role.",
          "type": [
            "null",
            "integer"
          ]
        },
        "name": {
          "description": "The name of the project role.",
          "type": [
            "null",
            "string"
          ]
        },
        "roleConfigurable": {
          "description": "Flag indicating if the role is configurable.",
          "type": [
            "null",
            "boolean"
          ]
        },
        "scope": {
          "description": "Details of the next-gen projects the issue type is available in.",
          "properties": {
            "project": {
              "description": "The project the item has scope in.",
              "properties": {
                "avatarUrls": {
                  "description": "The URLs of the project's avatars.",
                  "properties": {
                    "16x16": {
                      "description": "The URL of the item's 16x16 pixel avatar.",
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "24x24": {
                      "description": "The URL of the item's 24x24 pixel avatar.",
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "32x32": {
                      "description": "The URL of the item's 32x32 pixel avatar.",
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "48x48": {
                      "description": "The URL of the item's 48x48 pixel avatar.",
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "id": {
                  "description": "The ID of the project.",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "key": {
                  "description": "The key of the project.",
                  "readOnly": true,
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "name": {
                  "description": "The name of the project.",
                  "readOnly": true,
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "projectCategory": {
                  "description": "The category the project belongs to.",
                  "properties": {
                    "description": {
                      "description": "The name of the project category.",
                      "readOnly": true,
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "id": {
                      "description": "The ID of the project category.",
                      "readOnly": true,
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "name": {
                      "description": "The description of the project category.",
                      "readOnly": true,
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "self": {
                      "description": "The URL of the project category.",
                      "readOnly": true,
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "projectTypeKey": {
                  "description": "The project type of the project.",
                  "readOnly": true,
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "description": "The URL of the project details.",
                  "readOnly": true,
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "simplified": {
                  "description": "Flag indicating if the project is simplified.",
                  "readOnly": true,
                  "type": [
                    "null",
                    "boolean"
                  ]
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "type": {
              "description": "The type of scope (e.g., project).",
              "readOnly": true,
              "type": [
                "null",
                "string"
              ]
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "self": {
          "description": "The URL of the project role details.",
          "type": [
            "null",
            "string"
          ]
        },
        "translatedName": {
          "description": "The translated name of the project role.",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "project_roles",
    "resourceConfig": {
      "stream": "project_roles",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "List of project avatars.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "fileName": {
          "description": "The file name of the avatar icon. Returned for system avatars.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the avatar.",
          "type": "string"
        },
        "isDeletable": {
          "description": "Whether the avatar can be deleted.",
          "readOnly": true,
          "type": "boolean"
        },
        "isSelected": {
          "description": "Whether the avatar is used in Jira. For example, shown as a project's avatar.",
          "readOnly": true,
          "type": "boolean"
        },
        "isSystemAvatar": {
          "description": "Whether the avatar is a system avatar.",
          "readOnly": true,
          "type": "boolean"
        },
        "owner": {
          "description": "The owner of the avatar. For a system avatar the owner is null (and nothing is returned). For non-system avatars this is the appropriate identifier, such as the ID for a project or the account ID for a user.",
          "readOnly": true,
          "type": "string"
        },
        "projectId": {
          "description": "Id of the related project.",
          "type": [
            "null",
            "string"
          ]
        },
        "urls": {
          "additionalProperties": true,
          "description": "The list of avatar icon URLs.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "project_avatars",
    "resourceConfig": {
      "stream": "project_avatars",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "A project category.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the project category. Required on create, optional on update.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the project category.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the project category. Required on create, optional on update.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the project category.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "project_categories",
    "resourceConfig": {
      "stream": "project_categories",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details about a project component.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "assignee": {
          "description": "The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.",
          "properties": {
            "accountId": {
              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
              "maxLength": 128,
              "type": "string"
            },
            "accountType": {
              "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
              "enum": [
                "atlassian",
                "app",
                "customer",
                "unknown"
              ],
              "readOnly": true,
              "type": "string"
            },
            "active": {
              "description": "Whether the user is active.",
              "readOnly": true,
              "type": "boolean"
            },
            "applicationRoles": {
              "description": "The application roles the user is assigned to.",
              "properties": {
                "callback": {
                  "type": "object"
                },
                "items": {
                  "items": {
                    "properties": {
                      "defaultGroups": {
                        "description": "The groups that are granted default access for this application role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true
                      },
                      "defined": {
                        "description": "Deprecated.",
                        "type": "boolean"
                      },
                      "groups": {
                        "description": "The groups associated with the application role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true
                      },
                      "hasUnlimitedSeats": {
                        "type": "boolean"
                      },
                      "key": {
                        "description": "The key of the application role.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The display name of the application role.",
                        "type": "string"
                      },
                      "numberOfSeats": {
                        "description": "The maximum count of users on your license.",
                        "type": "integer"
                      },
                      "platform": {
                        "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                        "type": "boolean"
                      },
                      "remainingSeats": {
                        "description": "The count of users remaining on your license.",
                        "type": "integer"
                      },
                      "selectedByDefault": {
                        "description": "Determines whether this application role should be selected by default on user creation.",
                        "type": "boolean"
                      },
                      "userCount": {
                        "description": "The number of users counting against your license.",
                        "type": "integer"
                      },
                      "userCountDescription": {
                        "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "max-results": {
                  "type": "integer"
                },
                "pagingCallback": {
                  "type": "object"
                },
                "size": {
                  "type": "integer"
                }
              },
              "readOnly": true,
              "type": [
                "object",
                "null"
              ]
            },
            "avatarUrls": {
              "description": "The avatars of the user.",
              "properties": {
                "16x16": {
                  "description": "The URL of the item's 16x16 pixel avatar.",
                  "type": "string"
                },
                "24x24": {
                  "description": "The URL of the item's 24x24 pixel avatar.",
                  "type": "string"
                },
                "32x32": {
                  "description": "The URL of the item's 32x32 pixel avatar.",
                  "type": "string"
                },
                "48x48": {
                  "description": "The URL of the item's 48x48 pixel avatar.",
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "displayName": {
              "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
              "readOnly": true,
              "type": "string"
            },
            "emailAddress": {
              "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            },
            "expand": {
              "description": "Expand options that include additional user details in the response.",
              "readOnly": true,
              "type": "string"
            },
            "groups": {
              "description": "The groups that the user belongs to.",
              "properties": {
                "callback": {
                  "type": "object"
                },
                "items": {
                  "items": {
                    "properties": {
                      "name": {
                        "description": "The name of group.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL for these group details.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "max-results": {
                  "type": "integer"
                },
                "pagingCallback": {
                  "type": "object"
                },
                "size": {
                  "type": "integer"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "key": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": [
                "string",
                "null"
              ]
            },
            "locale": {
              "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "string"
            },
            "self": {
              "description": "The URL of the user.",
              "readOnly": true,
              "type": "string"
            },
            "timeZone": {
              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "assigneeType": {
          "description": "The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:\n\n *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.\n *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.\n *  `UNASSIGNED` an assignee is not set for issues created with this component.\n *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.\n\nDefault value: `PROJECT_DEFAULT`.  \nOptional when creating or updating a component.",
          "enum": [
            "PROJECT_DEFAULT",
            "COMPONENT_LEAD",
            "PROJECT_LEAD",
            "UNASSIGNED"
          ],
          "type": "string"
        },
        "componentBean": {
          "description": "Contains information about the component associated with the project.",
          "type": [
            "null",
            "object"
          ]
        },
        "description": {
          "description": "The description for the component. Optional when creating or updating a component.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for the component.",
          "readOnly": true,
          "type": "string"
        },
        "isAssigneeTypeValid": {
          "description": "Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.",
          "readOnly": true,
          "type": "boolean"
        },
        "issueCount": {
          "description": "The total count of issues related to the project component.",
          "type": [
            "null",
            "integer"
          ]
        },
        "lead": {
          "description": "The user details for the component's lead user.",
          "properties": {
            "accountId": {
              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
              "maxLength": 128,
              "type": "string"
            },
            "accountType": {
              "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
              "enum": [
                "atlassian",
                "app",
                "customer",
                "unknown"
              ],
              "readOnly": true,
              "type": "string"
            },
            "active": {
              "description": "Whether the user is active.",
              "readOnly": true,
              "type": "boolean"
            },
            "applicationRoles": {
              "description": "The application roles the user is assigned to.",
              "properties": {
                "callback": {
                  "type": "object"
                },
                "items": {
                  "items": {
                    "properties": {
                      "defaultGroups": {
                        "description": "The groups that are granted default access for this application role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true
                      },
                      "defined": {
                        "description": "Deprecated.",
                        "type": "boolean"
                      },
                      "groups": {
                        "description": "The groups associated with the application role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true
                      },
                      "hasUnlimitedSeats": {
                        "type": "boolean"
                      },
                      "key": {
                        "description": "The key of the application role.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The display name of the application role.",
                        "type": "string"
                      },
                      "numberOfSeats": {
                        "description": "The maximum count of users on your license.",
                        "type": "integer"
                      },
                      "platform": {
                        "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                        "type": "boolean"
                      },
                      "remainingSeats": {
                        "description": "The count of users remaining on your license.",
                        "type": "integer"
                      },
                      "selectedByDefault": {
                        "description": "Determines whether this application role should be selected by default on user creation.",
                        "type": "boolean"
                      },
                      "userCount": {
                        "description": "The number of users counting against your license.",
                        "type": "integer"
                      },
                      "userCountDescription": {
                        "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "max-results": {
                  "type": "integer"
                },
                "pagingCallback": {
                  "type": "object"
                },
                "size": {
                  "type": "integer"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "avatarUrls": {
              "description": "The avatars of the user.",
              "properties": {
                "16x16": {
                  "description": "The URL of the item's 16x16 pixel avatar.",
                  "type": "string"
                },
                "24x24": {
                  "description": "The URL of the item's 24x24 pixel avatar.",
                  "type": "string"
                },
                "32x32": {
                  "description": "The URL of the item's 32x32 pixel avatar.",
                  "type": "string"
                },
                "48x48": {
                  "description": "The URL of the item's 48x48 pixel avatar.",
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "displayName": {
              "description": "The display name of the user. Depending on the user\u2019s privacy setting, this may return an alternative value.",
              "readOnly": true,
              "type": "string"
            },
            "emailAddress": {
              "description": "The email address of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            },
            "expand": {
              "description": "Expand options that include additional user details in the response.",
              "readOnly": true,
              "type": "string"
            },
            "groups": {
              "description": "The groups that the user belongs to.",
              "properties": {
                "callback": {
                  "type": "object"
                },
                "items": {
                  "items": {
                    "properties": {
                      "name": {
                        "description": "The name of group.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL for these group details.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "max-results": {
                  "type": "integer"
                },
                "pagingCallback": {
                  "type": "object"
                },
                "size": {
                  "type": "integer"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "key": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "string"
            },
            "locale": {
              "description": "The locale of the user. Depending on the user\u2019s privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "string"
            },
            "self": {
              "description": "The URL of the user.",
              "readOnly": true,
              "type": "string"
            },
            "timeZone": {
              "description": "The time zone specified in the user's profile. Depending on the user\u2019s privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "leadAccountId": {
          "description": "The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
          "maxLength": 128,
          "type": [
            "string",
            "null"
          ],
          "writeOnly": true
        },
        "leadUserName": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "description": "The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.",
          "type": "string"
        },
        "project": {
          "description": "The key of the project the component is assigned to. Required when creating a component. Can't be updated.",
          "type": "string"
        },
        "projectId": {
          "description": "The ID of the project the component is assigned to.",
          "readOnly": true,
          "type": "integer"
        },
        "realAssignee": {
          "description": "The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.",
          "readOnly": true,
          "type": "object"
        },
        "realAssigneeType": {
          "description": "The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:\n\n *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.\n *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.\n *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.\n *  `PROJECT_DEFAULT` when none of the preceding cases are true.",
          "enum": [
            "PROJECT_DEFAULT",
            "COMPONENT_LEAD",
            "PROJECT_LEAD",
            "UNASSIGNED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the component.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "project_components",
    "resourceConfig": {
      "stream": "project_components",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "A project's sender email address.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "emailAddress": {
          "description": "The email address of the project.",
          "type": "string"
        },
        "projectId": {
          "description": "The unique identifier for the project.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/projectId"
    ],
    "recommendedName": "project_email",
    "resourceConfig": {
      "stream": "project_email",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details about a security scheme.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the issue level security item.",
          "type": [
            "null",
            "string"
          ]
        },
        "id": {
          "description": "The ID of the issue level security item.",
          "type": [
            "null",
            "string"
          ]
        },
        "name": {
          "description": "The name of the issue level security item.",
          "type": [
            "null",
            "string"
          ]
        },
        "projectId": {
          "description": "Id of the related project.",
          "type": [
            "null",
            "string"
          ]
        },
        "self": {
          "description": "The URL of the issue level security item.",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "project_permission_schemes",
    "resourceConfig": {
      "stream": "project_permission_schemes",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details about a project type.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "color": {
          "description": "The color of the project type.",
          "readOnly": true,
          "type": "string"
        },
        "descriptionKey": {
          "description": "The key of the project type's description.",
          "readOnly": true,
          "type": "string"
        },
        "formattedKey": {
          "description": "The formatted key of the project type.",
          "readOnly": true,
          "type": "string"
        },
        "icon": {
          "description": "The icon of the project type.",
          "readOnly": true,
          "type": "string"
        },
        "key": {
          "description": "The key of the project type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/self"
    ],
    "recommendedName": "project_types",
    "resourceConfig": {
      "stream": "project_types",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "archived": {
          "description": "Indicates whether the version is archived. Optional field for creating or updating a version.",
          "type": "boolean"
        },
        "description": {
          "description": "The description of the version. Optional field for creating or updating a version.",
          "type": "string"
        },
        "expand": {
          "description": "Use expand parameter to include additional information about the version in the response. Optional field for creation and update. Expand options include operations and issuesstatus.",
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "description": "The unique ID of the version.",
          "readOnly": true,
          "type": "string"
        },
        "issuesStatusForFixVersion": {
          "description": "If 'issuesstatus' is expanded, provides counts of issues in this version for status categories: to do, in progress, done, and unmapped.",
          "properties": {
            "done": {
              "description": "Count of issues marked as 'done'.",
              "readOnly": true,
              "type": "integer"
            },
            "inProgress": {
              "description": "Count of issues marked as 'in progress'.",
              "readOnly": true,
              "type": "integer"
            },
            "toDo": {
              "description": "Count of issues marked as 'to do'.",
              "readOnly": true,
              "type": "integer"
            },
            "unmapped": {
              "description": "Count of issues with a status other than to do, in progress, and done.",
              "readOnly": true,
              "type": "integer"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "moveUnfixedIssuesTo": {
          "description": "The URL of the self link to the version where all unfixed issues are moved when the version gets released. Not used during version creation. Optional field for version update.",
          "type": "string"
        },
        "name": {
          "description": "The unique name assigned to the version. Required field for version creation, optional for version update. Maximum length is 255 characters.",
          "type": "string"
        },
        "operations": {
          "description": "If 'operations' is expanded, provides a list of available operations for this version.",
          "items": {
            "properties": {
              "href": {
                "description": "",
                "type": "string"
              },
              "iconClass": {
                "description": "",
                "type": "string"
              },
              "id": {
                "description": "",
                "type": "string"
              },
              "label": {
                "description": "",
                "type": "string"
              },
              "styleClass": {
                "description": "",
                "type": "string"
              },
              "title": {
                "description": "",
                "type": "string"
              },
              "weight": {
                "description": "",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "readOnly": true,
          "type": "array"
        },
        "overdue": {
          "description": "Indicates whether the version is overdue.",
          "readOnly": true,
          "type": "boolean"
        },
        "project": {
          "description": "Deprecated field. Use projectId instead.",
          "type": "string"
        },
        "projectId": {
          "description": "The ID of the project to which this version is connected. Required for version creation, not applicable for version update.",
          "type": "integer"
        },
        "releaseDate": {
          "description": "The release date of the version in ISO 8601 format (yyyy-mm-dd). Optional field for creating or updating a version.",
          "format": "date",
          "type": "string"
        },
        "released": {
          "description": "Indicates whether the version has been released. A request to release it again will be ignored. Not applicable during version creation. Optional field for version update.",
          "type": "boolean"
        },
        "self": {
          "description": "The URL of the version.",
          "readOnly": true,
          "type": "string"
        },
        "startDate": {
          "description": "The start date of the version in ISO 8601 format (yyyy-mm-dd). Optional field for creating or updating a version.",
          "format": "date",
          "type": "string"
        },
        "userReleaseDate": {
          "description": "The date when work on this version is expected to finish, expressed in the instance's Day/Month/Year format.",
          "readOnly": true,
          "type": "string"
        },
        "userStartDate": {
          "description": "The date when work on this version is expected to begin, expressed in the instance's Day/Month/Year format.",
          "readOnly": true,
          "type": "string"
        }
      },
      "readOnly": true,
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "project_versions",
    "resourceConfig": {
      "stream": "project_versions",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the screen.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the screen.",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The name of the screen.",
          "readOnly": true,
          "type": "string"
        },
        "scope": {
          "description": "The scope of the screen.",
          "properties": {
            "project": {
              "description": "The project the item has scope in.",
              "properties": {
                "avatarUrls": {
                  "description": "The URLs of the project's avatars.",
                  "properties": {
                    "16x16": {
                      "description": "The URL of the item's 16x16 pixel avatar.",
                      "type": "string"
                    },
                    "24x24": {
                      "description": "The URL of the item's 24x24 pixel avatar.",
                      "type": "string"
                    },
                    "32x32": {
                      "description": "The URL of the item's 32x32 pixel avatar.",
                      "type": "string"
                    },
                    "48x48": {
                      "description": "The URL of the item's 48x48 pixel avatar.",
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "id": {
                  "description": "The ID of the project.",
                  "type": "string"
                },
                "key": {
                  "description": "The key of the project.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the project.",
                  "readOnly": true,
                  "type": "string"
                },
                "projectCategory": {
                  "description": "The category the project belongs to.",
                  "properties": {
                    "description": {
                      "description": "The name of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "id": {
                      "description": "The ID of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The description of the project category.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "self": {
                      "description": "The URL of the project category.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "projectTypeKey": {
                  "description": "The project type of the project.",
                  "enum": [
                    "software",
                    "service_desk",
                    "business"
                  ],
                  "readOnly": true,
                  "type": "string"
                },
                "self": {
                  "description": "The URL of the project details.",
                  "readOnly": true,
                  "type": "string"
                },
                "simplified": {
                  "description": "Whether or not the project is simplified.",
                  "readOnly": true,
                  "type": "boolean"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "type": {
              "description": "The type of scope.",
              "enum": [
                "PROJECT",
                "TEMPLATE"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "screens",
    "resourceConfig": {
      "stream": "screens",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "A screen tab.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "id": {
          "description": "The ID of the screen tab.",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The name of the screen tab. The maximum length is 255 characters.",
          "type": "string"
        },
        "screenId": {
          "description": "Id of the related screen.",
          "type": [
            "null",
            "integer"
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "screen_tabs",
    "resourceConfig": {
      "stream": "screen_tabs",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "A screen tab field.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "id": {
          "description": "The ID of the screen tab field.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the screen tab field. Required on create and update. The maximum length is 255 characters.",
          "type": "string"
        },
        "screenId": {
          "description": "ID of the related screen.",
          "type": [
            "null",
            "integer"
          ]
        },
        "tabId": {
          "description": "ID of the related tab.",
          "type": [
            "null",
            "integer"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "screen_tab_fields",
    "resourceConfig": {
      "stream": "screen_tab_fields",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "A screen scheme.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the screen scheme.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the screen scheme.",
          "type": "integer"
        },
        "issueTypeScreenSchemes": {
          "description": "Issue type screen schemes associated with the screen scheme.",
          "type": "object"
        },
        "name": {
          "description": "The name of the screen scheme.",
          "type": "string"
        },
        "screens": {
          "description": "The IDs of the screens for the screen types of the screen scheme.",
          "properties": {
            "create": {
              "description": "The ID of the create screen.",
              "type": "integer"
            },
            "default": {
              "description": "The ID of the default screen. Required when creating a screen scheme.",
              "type": "integer"
            },
            "edit": {
              "description": "The ID of the edit screen.",
              "type": "integer"
            },
            "view": {
              "description": "The ID of the view screen.",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "screen_schemes",
    "resourceConfig": {
      "stream": "screen_schemes",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "boardId": {
          "description": "Used to determine which board the sprint is a part of. (Not always the same as originBoardId)",
          "type": "integer"
        },
        "completeDate": {
          "description": "The date and time when the sprint was completed.",
          "format": "date-time",
          "type": "string"
        },
        "createdDate": {
          "description": "The date and time when the sprint was created.",
          "format": "date-time",
          "type": [
            "null",
            "string"
          ]
        },
        "endDate": {
          "description": "The date and time when the sprint is expected to end.",
          "format": "date-time",
          "type": "string"
        },
        "goal": {
          "description": "The goal or objective of the sprint.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for the sprint.",
          "type": "integer"
        },
        "name": {
          "description": "The name or title of the sprint.",
          "type": "string"
        },
        "originBoardId": {
          "description": "The original board ID the sprint belongs to.",
          "type": "integer"
        },
        "self": {
          "description": "The URL link to fetch more details about the sprint.",
          "type": "string"
        },
        "startDate": {
          "description": "The date and time when the sprint is scheduled to start.",
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "description": "The current state/status of the sprint.",
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "sprints",
    "resourceConfig": {
      "stream": "sprints",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "created": {
          "description": "Date and time when the issue was created",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "expand": {
          "description": "Expand options for the issue",
          "type": "string"
        },
        "fields": {
          "description": "Contains various field values associated with the sprint issue",
          "properties": {
            "closedSprints": {
              "description": "List of closed sprints related to the issue",
              "type": [
                "null",
                "object"
              ]
            },
            "comment": {
              "description": "Comments added to the sprint issue",
              "items": {
                "description": "Comments added to the issue",
                "type": "object"
              },
              "type": [
                "null",
                "array"
              ]
            },
            "created": {
              "description": "Date and time when the issue was created",
              "format": "date-time",
              "type": [
                "null",
                "string"
              ]
            },
            "description": {
              "description": "Description of the issue",
              "type": [
                "null",
                "string"
              ]
            },
            "epic": {
              "description": "Epic information associated with the issue",
              "type": [
                "null",
                "object"
              ]
            },
            "flagged": {
              "description": "Flag indicating if the issue is flagged",
              "type": [
                "null",
                "boolean"
              ]
            },
            "project": {
              "description": "Project to which the issue belongs",
              "type": [
                "null",
                "object"
              ]
            },
            "sprint": {
              "description": "Sprint related to the issue",
              "type": [
                "null",
                "object"
              ]
            },
            "status": {
              "description": "Status details of the sprint issue",
              "properties": {
                "description": {
                  "description": "Description of the status",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "iconUrl": {
                  "description": "URL of the status icon",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "id": {
                  "description": "ID of the status",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "name": {
                  "description": "Name of the status",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "self": {
                  "description": "Status resource URL",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "statusCategory": {
                  "description": "Category of the status of the sprint issue",
                  "properties": {
                    "colorName": {
                      "description": "Name of the color representing the status category",
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "id": {
                      "description": "ID of the status category",
                      "type": [
                        "null",
                        "integer"
                      ]
                    },
                    "key": {
                      "description": "Key of the status category",
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "name": {
                      "description": "Name of the status category",
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "self": {
                      "description": "Status category resource URL",
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "type": [
                    "null",
                    "object"
                  ]
                }
              },
              "type": [
                "null",
                "object"
              ]
            },
            "timetracking": {
              "description": "Time tracking information for the issue",
              "type": [
                "null",
                "object"
              ]
            },
            "updated": {
              "description": "Date and time when the issue was last updated",
              "format": "date-time",
              "type": [
                "null",
                "string"
              ]
            },
            "worklog": {
              "description": "Work logs related to the sprint issue",
              "items": {
                "description": "Work logs related to the issue",
                "type": "object"
              },
              "type": [
                "null",
                "array"
              ]
            }
          },
          "type": "object"
        },
        "id": {
          "description": "ID of the issue",
          "type": "string"
        },
        "issueId": {
          "description": "ID of the issue",
          "type": "string"
        },
        "key": {
          "description": "Key of the issue",
          "type": "string"
        },
        "self": {
          "description": "URL of the issue",
          "type": "string"
        },
        "sprintId": {
          "description": "ID of the sprint associated with the issue",
          "type": "integer"
        },
        "updated": {
          "description": "Date and time when the issue was last updated",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "sprint_issues",
    "resourceConfig": {
      "cursorField": [
        "updated"
      ],
      "stream": "sprint_issues",
      "syncMode": "incremental"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "Details about the time tracking provider.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "key": {
          "description": "The key associated with the time tracking provider.",
          "type": "string"
        },
        "name": {
          "description": "The name of the time tracking provider.",
          "type": "string"
        },
        "url": {
          "description": "The URL of the configuration page for the time tracking provider app. This property is only returned if the `adminPageKey` property is set in the module descriptor of the time tracking provider app.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "key"
      ],
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/key"
    ],
    "recommendedName": "time_tracking",
    "resourceConfig": {
      "stream": "time_tracking",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:\n\n *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).\n *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.\n *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "accountId": {
          "description": "The account ID of the user, uniquely identifying the user across all Atlassian products. Required in requests.",
          "maxLength": 128,
          "type": "string"
        },
        "accountType": {
          "description": "The user account type. Can be one of: \n- `atlassian`: regular Atlassian user account \n- `app`: system account used for Connect applications and OAuth \n- `customer`: Jira Service Desk account representing an external service desk",
          "enum": [
            "atlassian",
            "app",
            "customer",
            "unknown"
          ],
          "readOnly": true,
          "type": "string"
        },
        "active": {
          "description": "Indicates whether the user is active.",
          "readOnly": true,
          "type": "boolean"
        },
        "applicationRoles": {
          "description": "The application roles assigned to the user.",
          "properties": {
            "callback": {
              "description": "The callback for fetching more application roles.",
              "type": "object"
            },
            "items": {
              "items": {
                "properties": {
                  "defaultGroups": {
                    "description": "The groups granted default access for this application role.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                  },
                  "defined": {
                    "description": "Deprecated field.",
                    "type": "boolean"
                  },
                  "groups": {
                    "description": "The groups associated with the application role.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                  },
                  "hasUnlimitedSeats": {
                    "description": "Indicates if the application role has unlimited seats.",
                    "type": "boolean"
                  },
                  "key": {
                    "description": "The key of the application role.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The display name of the application role.",
                    "type": "string"
                  },
                  "numberOfSeats": {
                    "description": "The maximum user count on the license.",
                    "type": "integer"
                  },
                  "platform": {
                    "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                    "type": "boolean"
                  },
                  "remainingSeats": {
                    "description": "The remaining user count on the license.",
                    "type": "integer"
                  },
                  "selectedByDefault": {
                    "description": "Specifies if this application role should be selected by default on user creation.",
                    "type": "boolean"
                  },
                  "userCount": {
                    "description": "The number of users counting against the license.",
                    "type": "integer"
                  },
                  "userCountDescription": {
                    "description": "The type of users being counted against the license.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "max-results": {
              "description": "The maximum number of results to be returned.",
              "type": "integer"
            },
            "pagingCallback": {
              "description": "The callback for pagination.",
              "type": "object"
            },
            "size": {
              "description": "The size of the application roles.",
              "type": "integer"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "avatarUrls": {
          "description": "The avatars of the user.",
          "properties": {
            "16x16": {
              "description": "The URL of the 16x16 pixel avatar.",
              "type": "string"
            },
            "24x24": {
              "description": "The URL of the 24x24 pixel avatar.",
              "type": "string"
            },
            "32x32": {
              "description": "The URL of the 32x32 pixel avatar.",
              "type": "string"
            },
            "48x48": {
              "description": "The URL of the 48x48 pixel avatar.",
              "type": "string"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "displayName": {
          "description": "The display name of the user. May return an alternative value based on privacy settings.",
          "readOnly": true,
          "type": "string"
        },
        "emailAddress": {
          "description": "The email address of the user. May be null based on privacy settings.",
          "readOnly": true,
          "type": "string"
        },
        "expand": {
          "description": "Options to include additional user details in the response.",
          "readOnly": true,
          "type": "string"
        },
        "groups": {
          "description": "The groups to which the user belongs.",
          "properties": {
            "callback": {
              "description": "The callback for fetching more groups.",
              "type": "object"
            },
            "items": {
              "items": {
                "properties": {
                  "name": {
                    "description": "The name of the group.",
                    "type": "string"
                  },
                  "self": {
                    "description": "The URL for group details.",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "max-results": {
              "description": "The maximum number of results to be returned.",
              "type": "integer"
            },
            "pagingCallback": {
              "description": "The callback for pagination.",
              "type": "object"
            },
            "size": {
              "description": "The size of the groups.",
              "type": "integer"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "key": {
          "description": "Deprecated property. See the deprecation notice for details.",
          "type": "string"
        },
        "locale": {
          "description": "The locale of the user. May be null based on privacy settings.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Deprecated property. See the deprecation notice for details.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the user.",
          "readOnly": true,
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone specified in the user's profile. May be null based on privacy settings.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/accountId"
    ],
    "recommendedName": "users",
    "resourceConfig": {
      "stream": "users",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:\n\n *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).\n *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.\n *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "accountId": {
          "description": "The account ID of the user, uniquely identifying the user across all Atlassian products. Required in requests.",
          "maxLength": 128,
          "type": "string"
        },
        "accountType": {
          "description": "The user account type. Possible values are 'atlassian' for regular Atlassian user account, 'app' for a system account used for Connect applications and OAuth, and 'customer' for a Jira Service Desk account representing an external service desk.",
          "enum": [
            "atlassian",
            "app",
            "customer",
            "unknown"
          ],
          "readOnly": true,
          "type": "string"
        },
        "active": {
          "description": "Indicates whether the user is active.",
          "readOnly": true,
          "type": "boolean"
        },
        "applicationRoles": {
          "description": "The application roles assigned to the user.",
          "properties": {
            "callback": {
              "type": "object"
            },
            "items": {
              "items": {
                "properties": {
                  "defaultGroups": {
                    "description": "The groups granted default access for this application role.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                  },
                  "defined": {
                    "description": "Deprecated.",
                    "type": "boolean"
                  },
                  "groups": {
                    "description": "The groups associated with the application role.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                  },
                  "hasUnlimitedSeats": {
                    "type": "boolean"
                  },
                  "key": {
                    "description": "The key of the application role.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The display name of the application role.",
                    "type": "string"
                  },
                  "numberOfSeats": {
                    "description": "The maximum count of users on your license.",
                    "type": "integer"
                  },
                  "platform": {
                    "description": "Indicates if the application role belongs to Jira platform ('jira-core').",
                    "type": "boolean"
                  },
                  "remainingSeats": {
                    "description": "The count of users remaining on your license.",
                    "type": "integer"
                  },
                  "selectedByDefault": {
                    "description": "Determines whether this application role should be selected by default on user creation.",
                    "type": "boolean"
                  },
                  "userCount": {
                    "description": "The number of users counting against your license.",
                    "type": "integer"
                  },
                  "userCountDescription": {
                    "description": "The type of users being counted against your license.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "max-results": {
              "type": "integer"
            },
            "pagingCallback": {
              "type": "object"
            },
            "size": {
              "type": "integer"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "avatarUrls": {
          "description": "The avatars of the user.",
          "properties": {
            "16x16": {
              "description": "The URL of the item's 16x16 pixel avatar.",
              "type": "string"
            },
            "24x24": {
              "description": "The URL of the item's 24x24 pixel avatar.",
              "type": "string"
            },
            "32x32": {
              "description": "The URL of the item's 32x32 pixel avatar.",
              "type": "string"
            },
            "48x48": {
              "description": "The URL of the item's 48x48 pixel avatar.",
              "type": "string"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "displayName": {
          "description": "The display name of the user. Depending on the user's privacy setting, this may return an alternative value.",
          "readOnly": true,
          "type": "string"
        },
        "emailAddress": {
          "description": "The email address of the user. Depending on the user's privacy setting, this may be returned as null.",
          "readOnly": true,
          "type": "string"
        },
        "expand": {
          "description": "Expand options that include additional user details in the response.",
          "readOnly": true,
          "type": "string"
        },
        "groups": {
          "description": "The groups that the user belongs to.",
          "properties": {
            "callback": {
              "type": "object"
            },
            "items": {
              "items": {
                "properties": {
                  "groupId": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "name": {
                    "description": "The name of the group.",
                    "type": "string"
                  },
                  "self": {
                    "description": "The URL for these group details.",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "max-results": {
              "type": "integer"
            },
            "pagingCallback": {
              "type": "object"
            },
            "size": {
              "type": "integer"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "key": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the deprecation notice for details.",
          "type": "string"
        },
        "locale": {
          "description": "The locale of the user. Depending on the user's privacy setting, this may be returned as null.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the deprecation notice for details.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the user.",
          "readOnly": true,
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone specified in the user's profile. Depending on the user's privacy setting, this may be returned as null.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/accountId"
    ],
    "recommendedName": "users_groups_detailed",
    "resourceConfig": {
      "stream": "users_groups_detailed",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "created": {
          "description": "The date and time when the workflow was created.",
          "format": "date-time",
          "type": [
            "null",
            "string"
          ]
        },
        "description": {
          "description": "The detailed description of the workflow.",
          "type": "string"
        },
        "entity_id": {
          "type": "string"
        },
        "id": {
          "description": "The unique identifier and name of the workflow.",
          "properties": {
            "entityId": {
              "type": [
                "null",
                "string"
              ]
            },
            "name": {
              "description": "The name of the workflow.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "statuses": {
          "description": "The various statuses that the workflow can have.",
          "items": {
            "properties": {
              "id": {
                "description": "The unique identifier of the issue status.",
                "type": "string"
              },
              "name": {
                "description": "The name of the status in the workflow.",
                "type": "string"
              },
              "properties": {
                "properties": {
                  "issueEditable": {
                    "description": "Indicates whether issues are editable in this status.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "transitions": {
          "description": "The transitions available within the workflow.",
          "items": {
            "properties": {
              "description": {
                "description": "The detailed description of the transition.",
                "type": "string"
              },
              "from": {
                "description": "The statuses the transition can start from.",
                "items": {
                  "description": "The statuses the transition can start from.",
                  "type": "string"
                },
                "type": "array"
              },
              "id": {
                "description": "The unique identifier of the transition.",
                "type": "string"
              },
              "name": {
                "description": "The name of the transition.",
                "type": "string"
              },
              "rules": {
                "properties": {
                  "conditions": {
                    "description": "The conditions that must be met for the transition to occur.",
                    "items": {
                      "properties": {
                        "configuration": {
                          "description": "The configuration of the transition rule (availability may vary)."
                        },
                        "type": {
                          "description": "The type of the transition rule.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "postFunctions": {
                    "description": "Actions that occur after a transition.",
                    "items": {
                      "properties": {
                        "configuration": {
                          "description": "The configuration of the post function (availability may vary)."
                        },
                        "type": {
                          "description": "The type of the post function.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "validators": {
                    "description": "Validation checks performed during the transition.",
                    "items": {
                      "properties": {
                        "configuration": {
                          "description": "The configuration of the validator (availability may vary)."
                        },
                        "type": {
                          "description": "The type of the validator.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "screen": {
                "description": "The screen associated with the transition.",
                "properties": {
                  "id": {
                    "description": "The unique identifier of the screen.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "to": {
                "description": "The status that the transition moves the issue to.",
                "type": "string"
              },
              "type": {
                "description": "The type of the transition.",
                "enum": [
                  "global",
                  "initial",
                  "directed"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "updated": {
          "description": "The date and time when the workflow was last updated.",
          "format": "date-time",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "readOnly": true,
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/entity_id"
    ],
    "recommendedName": "workflows",
    "resourceConfig": {
      "stream": "workflows",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "defaultWorkflow": {
          "description": "The name of the default workflow for the workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira. If `defaultWorkflow` is not specified when creating a workflow scheme, it is set to *Jira Workflow (jira)*.",
          "type": "string"
        },
        "description": {
          "description": "The description of the workflow scheme.",
          "type": "string"
        },
        "draft": {
          "description": "Whether the workflow scheme is a draft or not.",
          "readOnly": true,
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the workflow scheme.",
          "readOnly": true,
          "type": "integer"
        },
        "issueTypeMappings": {
          "additionalProperties": true,
          "description": "The issue type to workflow mappings, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.",
          "type": "object"
        },
        "issueTypes": {
          "description": "The issue types available in Jira.",
          "readOnly": true,
          "type": "object"
        },
        "lastModified": {
          "description": "The date-time that the draft workflow scheme was last modified. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.",
          "readOnly": true,
          "type": "string"
        },
        "lastModifiedUser": {
          "description": "The user that last modified the draft workflow scheme. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.",
          "properties": {
            "accountId": {
              "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
              "maxLength": 128,
              "type": "string"
            },
            "accountType": {
              "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
              "enum": [
                "atlassian",
                "app",
                "customer",
                "unknown"
              ],
              "readOnly": true,
              "type": "string"
            },
            "active": {
              "description": "Whether the user is active.",
              "readOnly": true,
              "type": "boolean"
            },
            "applicationRoles": {
              "description": "The application roles the user is assigned to.",
              "properties": {
                "callback": {
                  "type": "object"
                },
                "items": {
                  "items": {
                    "properties": {
                      "defaultGroups": {
                        "description": "The groups that are granted default access for this application role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true
                      },
                      "defined": {
                        "description": "Deprecated.",
                        "type": "boolean"
                      },
                      "groups": {
                        "description": "The groups associated with the application role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true
                      },
                      "hasUnlimitedSeats": {
                        "type": "boolean"
                      },
                      "key": {
                        "description": "The key of the application role.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The display name of the application role.",
                        "type": "string"
                      },
                      "numberOfSeats": {
                        "description": "The maximum count of users on your license.",
                        "type": "integer"
                      },
                      "platform": {
                        "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
                        "type": "boolean"
                      },
                      "remainingSeats": {
                        "description": "The count of users remaining on your license.",
                        "type": "integer"
                      },
                      "selectedByDefault": {
                        "description": "Determines whether this application role should be selected by default on user creation.",
                        "type": "boolean"
                      },
                      "userCount": {
                        "description": "The number of users counting against your license.",
                        "type": "integer"
                      },
                      "userCountDescription": {
                        "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "max-results": {
                  "type": "integer"
                },
                "pagingCallback": {
                  "type": "object"
                },
                "size": {
                  "type": "integer"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "avatarUrls": {
              "description": "The avatars of the user.",
              "properties": {
                "16x16": {
                  "description": "The URL of the item's 16x16 pixel avatar.",
                  "type": "string"
                },
                "24x24": {
                  "description": "The URL of the item's 24x24 pixel avatar.",
                  "type": "string"
                },
                "32x32": {
                  "description": "The URL of the item's 32x32 pixel avatar.",
                  "type": "string"
                },
                "48x48": {
                  "description": "The URL of the item's 48x48 pixel avatar.",
                  "type": "string"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "displayName": {
              "description": "The display name of the user. Depending on the user's privacy setting, this may return an alternative value.",
              "readOnly": true,
              "type": "string"
            },
            "emailAddress": {
              "description": "The email address of the user. Depending on the user's privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            },
            "expand": {
              "description": "Expand options that include additional user details in the response.",
              "readOnly": true,
              "type": "string"
            },
            "groups": {
              "description": "The groups that the user belongs to.",
              "properties": {
                "callback": {
                  "type": "object"
                },
                "items": {
                  "items": {
                    "properties": {
                      "name": {
                        "description": "The name of group.",
                        "type": "string"
                      },
                      "self": {
                        "description": "The URL for these group details.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "max-results": {
                  "type": "integer"
                },
                "pagingCallback": {
                  "type": "object"
                },
                "size": {
                  "type": "integer"
                }
              },
              "readOnly": true,
              "type": "object"
            },
            "key": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "string"
            },
            "locale": {
              "description": "The locale of the user. Depending on the user's privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "string"
            },
            "self": {
              "description": "The URL of the user.",
              "readOnly": true,
              "type": "string"
            },
            "timeZone": {
              "description": "The time zone specified in the user's profile. Depending on the user's privacy setting, this may be returned as null.",
              "readOnly": true,
              "type": "string"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "name": {
          "description": "The name of the workflow scheme. The name must be unique. The maximum length is 255 characters. Required when creating a workflow scheme.",
          "type": "string"
        },
        "originalDefaultWorkflow": {
          "description": "For draft workflow schemes, this property is the name of the default workflow for the original workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira.",
          "readOnly": true,
          "type": "string"
        },
        "originalIssueTypeMappings": {
          "additionalProperties": true,
          "description": "For draft workflow schemes, this property is the issue type to workflow mappings for the original workflow scheme, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.",
          "readOnly": true,
          "type": "object"
        },
        "self": {
          "description": "URL of the workflow scheme resource.",
          "readOnly": true,
          "type": "string"
        },
        "updateDraftIfNeeded": {
          "description": "Whether to create or update a draft workflow scheme when updating an active workflow scheme. An active workflow scheme is a workflow scheme that is used by at least one project. The following examples show how this property works:\n\n *  Update an active workflow scheme with `updateDraftIfNeeded` set to `true`: If a draft workflow scheme exists, it is updated. Otherwise, a draft workflow scheme is created.\n *  Update an active workflow scheme with `updateDraftIfNeeded` set to `false`: An error is returned, as active workflow schemes cannot be updated.\n *  Update an inactive workflow scheme with `updateDraftIfNeeded` set to `true`: The workflow scheme is updated, as inactive workflow schemes do not require drafts to update.\n\nDefaults to `false`.",
          "type": "boolean"
        }
      },
      "readOnly": true,
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "workflow_schemes",
    "resourceConfig": {
      "stream": "workflow_schemes",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "A status.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "description": {
          "description": "The description of the status.",
          "readOnly": true,
          "type": "string"
        },
        "iconUrl": {
          "description": "The URL of the icon used to represent the status.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the status.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the status.",
          "readOnly": true,
          "type": "string"
        },
        "scope": {
          "description": "The scope of the status.",
          "type": [
            "null",
            "object"
          ]
        },
        "self": {
          "description": "The URL of the status.",
          "readOnly": true,
          "type": "string"
        },
        "statusCategory": {
          "description": "The category assigned to the status.",
          "properties": {
            "colorName": {
              "description": "The name of the color used to represent the status category.",
              "readOnly": true,
              "type": "string"
            },
            "id": {
              "description": "The ID of the status category.",
              "readOnly": true,
              "type": "integer"
            },
            "key": {
              "description": "The key of the status category.",
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "description": "The name of the status category.",
              "readOnly": true,
              "type": "string"
            },
            "self": {
              "description": "The URL of the status category.",
              "readOnly": true,
              "type": "string"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "untranslatedName": {
          "description": "The untranslated name of the status.",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "workflow_statuses",
    "resourceConfig": {
      "stream": "workflow_statuses",
      "syncMode": "full_refresh"
    }
  },
  {
    "documentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": true,
      "description": "A status category.",
      "properties": {
        "_meta": {
          "properties": {
            "row_id": {
              "type": "integer"
            }
          },
          "required": [
            "row_id"
          ],
          "type": "object"
        },
        "colorName": {
          "description": "The name of the color used to represent the status category.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the status category.",
          "readOnly": true,
          "type": "integer"
        },
        "key": {
          "description": "The key of the status category.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the status category.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the status category.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-infer-schema": true
    },
    "key": [
      "/id"
    ],
    "recommendedName": "workflow_status_categories",
    "resourceConfig": {
      "stream": "workflow_status_categories",
      "syncMode": "full_refresh"
    }
  }
]
