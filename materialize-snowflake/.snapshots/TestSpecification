{
  "config_schema_json": {
    "$schema": "http://json-schema.org/draft/2020-12/schema",
    "$id": "https://github.com/estuary/connectors/materialize-snowflake/config",
    "properties": {
      "host": {
        "type": "string",
        "title": "Host (Account URL)",
        "description": "The Snowflake Host used for the connection. Must include the account identifier and end in .snowflakecomputing.com. Example: orgname-accountname.snowflakecomputing.com (do not include the protocol).",
        "order": 0,
        "pattern": "^[^/:]+.snowflakecomputing.com$"
      },
      "account": {
        "type": "string",
        "title": "Account",
        "description": "The Snowflake account identifier.",
        "order": 1
      },
      "database": {
        "type": "string",
        "title": "Database",
        "description": "The SQL database to connect to.",
        "order": 4
      },
      "schema": {
        "type": "string",
        "title": "Schema",
        "description": "Database schema for bound collection tables (unless overridden within the binding resource configuration) as well as associated materialization metadata tables.",
        "order": 5
      },
      "warehouse": {
        "type": "string",
        "title": "Warehouse",
        "description": "The Snowflake virtual warehouse used to execute queries. Uses the default warehouse for the Snowflake user if left blank.",
        "order": 6
      },
      "role": {
        "type": "string",
        "title": "Role",
        "description": "The user role used to perform actions.",
        "order": 7
      },
      "hardDelete": {
        "type": "boolean",
        "title": "Hard Delete",
        "description": "If this option is enabled items deleted in the source will also be deleted from the destination. By default is disabled and _meta/op in the destination will signify whether rows have been deleted (soft-delete).",
        "default": false,
        "order": 8
      },
      "credentials": {
        "oneOf": [
          {
            "properties": {
              "auth_type": {
                "type": "string",
                "const": "user_password",
                "default": "user_password"
              },
              "user": {
                "type": "string",
                "title": "User",
                "description": "The Snowflake user login name",
                "order": 1
              },
              "password": {
                "type": "string",
                "title": "Password",
                "description": "The password for the provided user",
                "order": 2,
                "secret": true
              }
            },
            "required": [
              "auth_type",
              "user",
              "password"
            ],
            "title": "User Password"
          },
          {
            "properties": {
              "auth_type": {
                "type": "string",
                "const": "jwt",
                "default": "jwt"
              },
              "user": {
                "type": "string",
                "title": "User",
                "description": "The Snowflake user login name",
                "order": 1
              },
              "private_key": {
                "type": "string",
                "title": "Private Key",
                "description": "Private Key to be used to sign the JWT token",
                "multiline": true,
                "order": 2,
                "secret": true
              }
            },
            "required": [
              "auth_type",
              "private_key"
            ],
            "title": "Private Key (JWT)"
          }
        ],
        "type": "object",
        "title": "Authentication",
        "default": {
          "auth_type": "user_password"
        },
        "discriminator": {
          "propertyName": "auth_type"
        }
      },
      "syncSchedule": {
        "properties": {
          "syncFrequency": {
            "type": "string",
            "enum": [
              "0s",
              "30s",
              "5m",
              "15m",
              "30m",
              "1h",
              "2h",
              "4h"
            ],
            "title": "Sync Frequency",
            "description": "Frequency at which transactions are executed when the materialization is fully caught up and streaming changes. May be enabled only for certain time periods and days of the week if configured below; otherwise it is effective 24/7. Defaults to 30 minutes if unset.",
            "order": 0
          },
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "description": "Timezone applicable to sync time windows and active days. Must be a valid IANA time zone name or +HH:MM offset.",
            "order": 1
          },
          "fastSyncStartTime": {
            "type": "string",
            "title": "Fast Sync Start Time",
            "description": "Time of day that transactions begin executing at the configured Sync Frequency. Prior to this time transactions will be executed more slowly. Must be in the form of '09:00'.",
            "order": 2,
            "pattern": "^(0?[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"
          },
          "fastSyncStopTime": {
            "type": "string",
            "title": "Fast Sync Stop Time",
            "description": "Time of day that transactions stop executing at the configured Sync Frequency. After this time transactions will be executed more slowly. Must be in the form of '17:00'.",
            "order": 3,
            "pattern": "^(0?[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"
          },
          "fastSyncEnabledDays": {
            "type": "string",
            "title": "Fast Sync Enabled Days",
            "description": "Days of the week that the configured Sync Frequency is active. On days that are not enabled, transactions will be executed more slowly for the entire day. Examples: 'M-F' (Monday through Friday, inclusive), 'M,W,F' (Monday, Wednesday, and Friday), 'Su-T,Th-S' (Sunday through Tuesday, inclusive; Thursday through Saturday, inclusive). All days are enabled if unset.",
            "order": 4
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Sync Schedule",
        "description": "Configure schedule of transactions for the materialization."
      },
      "advanced": {
        "properties": {
          "updateDelay": {
            "type": "string",
            "enum": [
              "0s",
              "15m",
              "30m",
              "1h",
              "2h",
              "4h"
            ],
            "title": "Update Delay",
            "description": "Potentially reduce active warehouse time by increasing the delay between updates. Defaults to 30 minutes if unset."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Advanced Options",
        "description": "Options for advanced users. You should not typically need to modify these.",
        "advanced": true
      }
    },
    "type": "object",
    "required": [
      "host",
      "account",
      "database",
      "schema",
      "credentials"
    ],
    "title": "SQL Connection"
  },
  "resource_config_schema_json": {
    "$schema": "http://json-schema.org/draft/2020-12/schema",
    "$id": "https://github.com/estuary/connectors/materialize-snowflake/table-config",
    "properties": {
      "table": {
        "type": "string",
        "x-collection-name": true
      },
      "schema": {
        "type": "string",
        "title": "Alternative Schema",
        "description": "Alternative schema for this table (optional)"
      },
      "delta_updates": {
        "type": "boolean",
        "title": "Delta Updates",
        "description": "Use Private Key authentication to enable Snowpipe for Delta Update bindings"
      }
    },
    "type": "object",
    "required": [
      "table"
    ],
    "title": "SQL Table"
  },
  "documentation_url": "https://go.estuary.dev/materialize-snowflake"
}
