[
  "applied.actionDescription",
<<<<<<< HEAD
  "CREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.simple (\n\t\tid INTEGER NOT NULL,\n\t\tcanary STRING NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.duplicate_keys (\n\t\tid INTEGER NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tint INTEGER,\n\t\tstr STRING NOT NULL,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.multiple_types (\n\t\tid INTEGER NOT NULL,\n\t\tarray_int JSON,\n\t\tbinary_field STRING,\n\t\tbool_field BOOLEAN,\n\t\tfloat_field FLOAT64,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tmultiple JSON,\n\t\tnested JSON,\n\t\tnullable_int INTEGER,\n\t\tstr_field STRING NOT NULL,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.formatted_strings (\n\t\tid INTEGER NOT NULL,\n\t\tdate DATE,\n\t\tdatetime TIMESTAMP,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tint_and_str BIGNUMERIC(38,0),\n\t\tint_str BIGNUMERIC(38,0),\n\t\tnum_and_str FLOAT64,\n\t\tnum_str FLOAT64,\n\t\ttime STRING,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.unsigned_bigint (\n\t\tid INTEGER NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tunsigned_bigint BIGNUMERIC(38,0),\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.deletions (\n\t\tid INTEGER NOT NULL,\n\t\t_meta_op STRING,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.string_escaped_key (\n\t\tid STRING NOT NULL,\n\t\tcounter INTEGER,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.all_key_types_part_one (\n\t\tid INTEGER NOT NULL,\n\t\tstrintkey STRING NOT NULL,\n\t\tstrnumkey STRING NOT NULL,\n\t\tcounter INTEGER,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tstrint BIGNUMERIC(38,0),\n\t\tstrnum FLOAT64,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id, strintkey, strnumkey;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.all_key_types_part_two (\n\t\tid INTEGER NOT NULL,\n\t\tdatekey STRING NOT NULL,\n\t\ttimekey STRING NOT NULL,\n\t\tcounter INTEGER,\n\t\tdate DATE,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\ttime STRING,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id, datekey, timekey;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.all_key_types_part_three (\n\t\tid INTEGER NOT NULL,\n\t\tdatetimekey STRING NOT NULL,\n\t\tuuidkey STRING NOT NULL,\n\t\tcounter INTEGER,\n\t\tdatetime TIMESTAMP,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tuuid STRING,\n\t\tflow_document JSON NOT NULL\n)\nCLUSTER BY id, datetimekey, uuidkey;\n"
=======
  "CREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.simple (\n\t\tid INTEGER NOT NULL,\n\t\t_meta JSON,\n\t\tcanary STRING NOT NULL,\n\t\tflow_published_at TIMESTAMP NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.duplicate_keys (\n\t\tid INTEGER NOT NULL,\n\t\t_meta JSON,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tint INTEGER,\n\t\tstr STRING NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.multiple_types (\n\t\tid INTEGER NOT NULL,\n\t\t_meta JSON,\n\t\tarray_int JSON,\n\t\tbinary_field STRING,\n\t\tbool_field BOOLEAN,\n\t\tfloat_field FLOAT64,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tmultiple JSON,\n\t\tnested JSON,\n\t\tnullable_int INTEGER,\n\t\tstr_field STRING NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.formatted_strings (\n\t\tid INTEGER NOT NULL,\n\t\t_meta JSON,\n\t\tdate DATE,\n\t\tdatetime TIMESTAMP,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tint_and_str BIGNUMERIC(38,0),\n\t\tint_str BIGNUMERIC(38,0),\n\t\tnum_and_str FLOAT64,\n\t\tnum_str FLOAT64,\n\t\ttime STRING\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.unsigned_bigint (\n\t\tid INTEGER NOT NULL,\n\t\t_meta JSON,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tunsigned_bigint BIGNUMERIC(38,0)\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.deletions (\n\t\tid INTEGER NOT NULL,\n\t\t_meta JSON NOT NULL,\n\t\t_meta_op STRING,\n\t\tflow_published_at TIMESTAMP NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.string_escaped_key (\n\t\tid STRING NOT NULL,\n\t\t_meta JSON,\n\t\tcounter INTEGER,\n\t\tflow_published_at TIMESTAMP NOT NULL\n)\nCLUSTER BY id;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.all_key_types_part_one (\n\t\tid INTEGER NOT NULL,\n\t\tstrintkey STRING NOT NULL,\n\t\tstrnumkey STRING NOT NULL,\n\t\tcounter INTEGER,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tstrint BIGNUMERIC(38,0),\n\t\tstrnum FLOAT64\n)\nCLUSTER BY id, strintkey, strnumkey;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.all_key_types_part_two (\n\t\tid INTEGER NOT NULL,\n\t\tdatekey STRING NOT NULL,\n\t\ttimekey STRING NOT NULL,\n\t\tcounter INTEGER,\n\t\tdate DATE,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\ttime STRING\n)\nCLUSTER BY id, datekey, timekey;\n\nCREATE TABLE IF NOT EXISTS `estuary-theatre`.testing.all_key_types_part_three (\n\t\tid INTEGER NOT NULL,\n\t\tdatetimekey STRING NOT NULL,\n\t\tuuidkey STRING NOT NULL,\n\t\tcounter INTEGER,\n\t\tdatetime TIMESTAMP,\n\t\tflow_published_at TIMESTAMP NOT NULL,\n\t\tuuid STRING\n)\nCLUSTER BY id, datetimekey, uuidkey;\n"
>>>>>>> 4377354c7 (materialize-%sql: test case for all key types)
]
[
  "connectorState",
  {
    "updated": {}
  }
]
[
  "connectorState",
  {
    "updated": {
      "estuary-theatre%2Ftesting%2Fall_key_types_part_one": {
<<<<<<< HEAD
        "Query": "INSERT INTO `estuary-theatre`.testing.all_key_types_part_one (id, strintkey, strnumkey, counter, flow_published_at, strint, strnum, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7 FROM flow_temp_table_7;\n",
=======
        "Query": "INSERT INTO `estuary-theatre`.testing.all_key_types_part_one (id, strintkey, strnumkey, counter, flow_published_at, strint, strnum)\nSELECT c0, c1, c2, c3, c4, c5, c6 FROM flow_temp_table_7;\n",
>>>>>>> 4377354c7 (materialize-%sql: test case for all key types)
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_7"
      },
      "estuary-theatre%2Ftesting%2Fall_key_types_part_three": {
<<<<<<< HEAD
        "Query": "INSERT INTO `estuary-theatre`.testing.all_key_types_part_three (id, datetimekey, uuidkey, counter, datetime, flow_published_at, uuid, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7 FROM flow_temp_table_9;\n",
=======
        "Query": "INSERT INTO `estuary-theatre`.testing.all_key_types_part_three (id, datetimekey, uuidkey, counter, datetime, flow_published_at, uuid)\nSELECT c0, c1, c2, c3, c4, c5, c6 FROM flow_temp_table_9;\n",
>>>>>>> 4377354c7 (materialize-%sql: test case for all key types)
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_9"
      },
      "estuary-theatre%2Ftesting%2Fall_key_types_part_two": {
<<<<<<< HEAD
        "Query": "INSERT INTO `estuary-theatre`.testing.all_key_types_part_two (id, datekey, timekey, counter, date, flow_published_at, time, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7 FROM flow_temp_table_8;\n",
=======
        "Query": "INSERT INTO `estuary-theatre`.testing.all_key_types_part_two (id, datekey, timekey, counter, date, flow_published_at, time)\nSELECT c0, c1, c2, c3, c4, c5, c6 FROM flow_temp_table_8;\n",
>>>>>>> 4377354c7 (materialize-%sql: test case for all key types)
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_8"
      },
      "estuary-theatre%2Ftesting%2Fdeletions": {
        "Query": "INSERT INTO `estuary-theatre`.testing.deletions (id, _meta_op, flow_published_at, flow_document)\nSELECT c0, c1, c2, c3 FROM flow_temp_table_5;\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_5"
      },
      "estuary-theatre%2Ftesting%2Fduplicate_keys": {
        "Query": "INSERT INTO `estuary-theatre`.testing.duplicate_keys (id, flow_published_at, int, str, flow_document)\nSELECT c0, c1, c2, c3, c4 FROM flow_temp_table_1;\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_1"
      },
      "estuary-theatre%2Ftesting%2Fformatted_strings": {
        "Query": "INSERT INTO `estuary-theatre`.testing.formatted_strings (id, date, datetime, flow_published_at, int_and_str, int_str, num_and_str, num_str, time, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7, c8, c9 FROM flow_temp_table_3;\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_3"
      },
      "estuary-theatre%2Ftesting%2Fmultiple_types": {
        "Query": "INSERT INTO `estuary-theatre`.testing.multiple_types (id, array_int, binary_field, bool_field, float_field, flow_published_at, multiple, nested, nullable_int, str_field, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10 FROM flow_temp_table_2;\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_2"
      },
      "estuary-theatre%2Ftesting%2Fsimple": {
        "Query": "INSERT INTO `estuary-theatre`.testing.simple (id, canary, flow_published_at, flow_document)\nSELECT c0, c1, c2, c3 FROM flow_temp_table_0;\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_0"
      },
      "estuary-theatre%2Ftesting%2Fstring_escaped_key": {
        "Query": "INSERT INTO `estuary-theatre`.testing.string_escaped_key (id, counter, flow_published_at, flow_document)\nSELECT c0, c1, c2, c3 FROM flow_temp_table_6;\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_6"
      },
      "estuary-theatre%2Ftesting%2Funsigned_bigint": {
        "Query": "INSERT INTO `estuary-theatre`.testing.unsigned_bigint (id, flow_published_at, unsigned_bigint, flow_document)\nSELECT c0, c1, c2, c3 FROM flow_temp_table_4;\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_4"
      }
    }
  }
]
[
  "connectorState",
  {
    "updated": {
      "estuary-theatre%2Ftesting%2Fall_key_types_part_one": {
<<<<<<< HEAD
        "Query": "MERGE INTO `estuary-theatre`.testing.all_key_types_part_one AS l\nUSING flow_temp_table_7 AS r\nON \n\tl.id = r.c0 AND l.id >= 1 AND l.id <= 1\n\tAND l.strintkey = r.c1 AND l.strintkey >= '1' AND l.strintkey <= '1'\n\tAND l.strnumkey = r.c2 AND l.strnumkey >= '10.1' AND l.strnumkey <= '10.1'\nWHEN MATCHED AND r._flow_delete THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.counter = r.c3, l.flow_published_at = r.c4, l.strint = r.c5, l.strnum = r.c6, l.flow_document = r.c7\nWHEN NOT MATCHED AND NOT r._flow_delete THEN\n\tINSERT (id, strintkey, strnumkey, counter, flow_published_at, strint, strnum, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7);\n",
=======
        "Query": "MERGE INTO `estuary-theatre`.testing.all_key_types_part_one AS l\nUSING flow_temp_table_7 AS r\nON \n\tl.id = r.c0 AND l.id >= 1 AND l.id <= 1\n\tAND l.strintkey = r.c1 AND l.strintkey >= '10' AND l.strintkey <= '10'\n\tAND l.strnumkey = r.c2 AND l.strnumkey >= '10.1' AND l.strnumkey <= '10.1'\nWHEN MATCHED AND r._flow_delete THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.counter = r.c3, l.flow_published_at = r.c4, l.strint = r.c5, l.strnum = r.c6\nWHEN NOT MATCHED AND NOT r._flow_delete THEN\n\tINSERT (id, strintkey, strnumkey, counter, flow_published_at, strint, strnum)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6);\n",
>>>>>>> 4377354c7 (materialize-%sql: test case for all key types)
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_7"
      },
      "estuary-theatre%2Ftesting%2Fall_key_types_part_three": {
<<<<<<< HEAD
        "Query": "MERGE INTO `estuary-theatre`.testing.all_key_types_part_three AS l\nUSING flow_temp_table_9 AS r\nON \n\tl.id = r.c0 AND l.id >= 1 AND l.id <= 1\n\tAND l.datetimekey = r.c1\n\tAND l.uuidkey = r.c2 AND l.uuidkey >= '550e8400-e29b-41d4-a716-446655440000' AND l.uuidkey <= '550e8400-e29b-41d4-a716-446655440000'\nWHEN MATCHED AND r._flow_delete THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.counter = r.c3, l.datetime = r.c4, l.flow_published_at = r.c5, l.uuid = r.c6, l.flow_document = r.c7\nWHEN NOT MATCHED AND NOT r._flow_delete THEN\n\tINSERT (id, datetimekey, uuidkey, counter, datetime, flow_published_at, uuid, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7);\n",
=======
        "Query": "MERGE INTO `estuary-theatre`.testing.all_key_types_part_three AS l\nUSING flow_temp_table_9 AS r\nON \n\tl.id = r.c0 AND l.id >= 1 AND l.id <= 1\n\tAND l.datetimekey = r.c1\n\tAND l.uuidkey = r.c2 AND l.uuidkey >= '550e8400-e29b-41d4-a716-446655440000' AND l.uuidkey <= '550e8400-e29b-41d4-a716-446655440000'\nWHEN MATCHED AND r._flow_delete THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.counter = r.c3, l.datetime = r.c4, l.flow_published_at = r.c5, l.uuid = r.c6\nWHEN NOT MATCHED AND NOT r._flow_delete THEN\n\tINSERT (id, datetimekey, uuidkey, counter, datetime, flow_published_at, uuid)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6);\n",
>>>>>>> 4377354c7 (materialize-%sql: test case for all key types)
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_9"
      },
      "estuary-theatre%2Ftesting%2Fall_key_types_part_two": {
<<<<<<< HEAD
        "Query": "MERGE INTO `estuary-theatre`.testing.all_key_types_part_two AS l\nUSING flow_temp_table_8 AS r\nON \n\tl.id = r.c0 AND l.id >= 1 AND l.id <= 1\n\tAND l.datekey = r.c1 AND l.datekey >= '0000-01-01' AND l.datekey <= '0000-01-01'\n\tAND l.timekey = r.c2 AND l.timekey >= '12:34:56Z' AND l.timekey <= '12:34:56Z'\nWHEN MATCHED AND r._flow_delete THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.counter = r.c3, l.date = r.c4, l.flow_published_at = r.c5, l.time = r.c6, l.flow_document = r.c7\nWHEN NOT MATCHED AND NOT r._flow_delete THEN\n\tINSERT (id, datekey, timekey, counter, date, flow_published_at, time, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7);\n",
=======
        "Query": "MERGE INTO `estuary-theatre`.testing.all_key_types_part_two AS l\nUSING flow_temp_table_8 AS r\nON \n\tl.id = r.c0 AND l.id >= 1 AND l.id <= 1\n\tAND l.datekey = r.c1 AND l.datekey >= '2023-08-30' AND l.datekey <= '2023-08-30'\n\tAND l.timekey = r.c2 AND l.timekey >= '12:34:56Z' AND l.timekey <= '12:34:56Z'\nWHEN MATCHED AND r._flow_delete THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.counter = r.c3, l.date = r.c4, l.flow_published_at = r.c5, l.time = r.c6\nWHEN NOT MATCHED AND NOT r._flow_delete THEN\n\tINSERT (id, datekey, timekey, counter, date, flow_published_at, time)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6);\n",
>>>>>>> 4377354c7 (materialize-%sql: test case for all key types)
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_8"
      },
      "estuary-theatre%2Ftesting%2Fdeletions": {
        "Query": "MERGE INTO `estuary-theatre`.testing.deletions AS l\nUSING flow_temp_table_5 AS r\nON \n\tl.id = r.c0 AND l.id >= 1 AND l.id <= 3\nWHEN MATCHED AND r._flow_delete THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l._meta_op = r.c1, l.flow_published_at = r.c2, l.flow_document = r.c3\nWHEN NOT MATCHED AND NOT r._flow_delete THEN\n\tINSERT (id, _meta_op, flow_published_at, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3);\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_5"
      },
      "estuary-theatre%2Ftesting%2Fduplicate_keys": {
        "Query": "MERGE INTO `estuary-theatre`.testing.duplicate_keys AS l\nUSING flow_temp_table_1 AS r\nON \n\tl.id = r.c0 AND l.id >= 1 AND l.id <= 5\nWHEN MATCHED AND r._flow_delete THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.flow_published_at = r.c1, l.int = r.c2, l.str = r.c3, l.flow_document = r.c4\nWHEN NOT MATCHED AND NOT r._flow_delete THEN\n\tINSERT (id, flow_published_at, int, str, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4);\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_1"
      },
      "estuary-theatre%2Ftesting%2Fformatted_strings": {
        "Query": "INSERT INTO `estuary-theatre`.testing.formatted_strings (id, date, datetime, flow_published_at, int_and_str, int_str, num_and_str, num_str, time, flow_document)\nSELECT c0, c1, c2, c3, c4, c5, c6, c7, c8, c9 FROM flow_temp_table_3;\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_3"
      },
      "estuary-theatre%2Ftesting%2Fmultiple_types": {
        "Query": "MERGE INTO `estuary-theatre`.testing.multiple_types AS l\nUSING flow_temp_table_2 AS r\nON \n\tl.id = r.c0 AND l.id >= 1 AND l.id <= 10\nWHEN MATCHED AND r._flow_delete THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.array_int = r.c1, l.binary_field = r.c2, l.bool_field = r.c3, l.float_field = r.c4, l.flow_published_at = r.c5, l.multiple = r.c6, l.nested = r.c7, l.nullable_int = r.c8, l.str_field = r.c9, l.flow_document = r.c10\nWHEN NOT MATCHED AND NOT r._flow_delete THEN\n\tINSERT (id, array_int, binary_field, bool_field, float_field, flow_published_at, multiple, nested, nullable_int, str_field, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3, r.c4, r.c5, r.c6, r.c7, r.c8, r.c9, r.c10);\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_2"
      },
      "estuary-theatre%2Ftesting%2Fsimple": {
        "Query": "INSERT INTO `estuary-theatre`.testing.simple (id, canary, flow_published_at, flow_document)\nSELECT c0, c1, c2, c3 FROM flow_temp_table_0;\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_0"
      },
      "estuary-theatre%2Ftesting%2Fstring_escaped_key": {
        "Query": "MERGE INTO `estuary-theatre`.testing.string_escaped_key AS l\nUSING flow_temp_table_6 AS r\nON \n\tl.id = r.c0 AND l.id >= '\\\\he \\\\ \\' \" `llo`' AND l.id <= '\\\\he \\\\ \\' \" `llo`'\nWHEN MATCHED AND r._flow_delete THEN\n\tDELETE\nWHEN MATCHED THEN\n\tUPDATE SET l.counter = r.c1, l.flow_published_at = r.c2, l.flow_document = r.c3\nWHEN NOT MATCHED AND NOT r._flow_delete THEN\n\tINSERT (id, counter, flow_published_at, flow_document)\n\tVALUES (r.c0, r.c1, r.c2, r.c3);\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_6"
      }
    }
  }
]
[
  "connectorState",
  {
    "updated": {
      "estuary-theatre%2Ftesting%2Fduplicate_keys": {
        "Query": "INSERT INTO `estuary-theatre`.testing.duplicate_keys (id, flow_published_at, int, str, flow_document)\nSELECT c0, c1, c2, c3, c4 FROM flow_temp_table_1;\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_1"
      }
    }
  }
]
[
  "connectorState",
  {
    "updated": {
      "estuary-theatre%2Ftesting%2Fduplicate_keys": {
        "Query": "INSERT INTO `estuary-theatre`.testing.duplicate_keys (id, flow_published_at, int, str, flow_document)\nSELECT c0, c1, c2, c3, c4 FROM flow_temp_table_1;\n",
        "SourceURIs": [
          "gs://[bucket]/<uuid>"
        ],
        "JobPrefix": "<uuid>",
        "TempTableName": "flow_temp_table_1"
      }
    }
  }
]
{
  "rows": [
    {
      "canary": "amputation's",
      "flow_document": "{\"_meta\":{\"uuid\":\"7545a800-1dda-11b2-8000-071353030311\"},\"canary\":\"amputation's\",\"id\":1}",
      "flow_published_at": "1970-01-01T01:00:00Z",
      "id": 1
    },
    {
      "canary": "armament's",
      "flow_document": "{\"_meta\":{\"uuid\":\"75de3e80-1dda-11b2-8000-071353030311\"},\"canary\":\"armament's\",\"id\":2}",
      "flow_published_at": "1970-01-01T01:00:01Z",
      "id": 2
    },
    {
      "canary": "splatters",
      "flow_document": "{\"_meta\":{\"uuid\":\"7676d500-1dda-11b2-8000-071353030311\"},\"canary\":\"splatters\",\"id\":3}",
      "flow_published_at": "1970-01-01T01:00:02Z",
      "id": 3
    },
    {
      "canary": "strengthen",
      "flow_document": "{\"_meta\":{\"uuid\":\"770f6b80-1dda-11b2-8000-071353030311\"},\"canary\":\"strengthen\",\"id\":4}",
      "flow_published_at": "1970-01-01T01:00:03Z",
      "id": 4
    },
    {
      "canary": "Kringle's",
      "flow_document": "{\"_meta\":{\"uuid\":\"77a80200-1dda-11b2-8000-071353030311\"},\"canary\":\"Kringle's\",\"id\":5}",
      "flow_published_at": "1970-01-01T01:00:04Z",
      "id": 5
    },
    {
      "canary": "grosbeak's",
      "flow_document": "{\"_meta\":{\"uuid\":\"78409880-1dda-11b2-8000-071353030311\"},\"canary\":\"grosbeak's\",\"id\":6}",
      "flow_published_at": "1970-01-01T01:00:05Z",
      "id": 6
    },
    {
      "canary": "pieced",
      "flow_document": "{\"_meta\":{\"uuid\":\"d70a1000-1de2-11b2-8000-071353030311\"},\"canary\":\"pieced\",\"id\":7}",
      "flow_published_at": "1970-01-01T02:00:00Z",
      "id": 7
    },
    {
      "canary": "roaches",
      "flow_document": "{\"_meta\":{\"uuid\":\"d7a2a680-1de2-11b2-8000-071353030311\"},\"canary\":\"roaches\",\"id\":8}",
      "flow_published_at": "1970-01-01T02:00:01Z",
      "id": 8
    },
    {
      "canary": "devilish",
      "flow_document": "{\"_meta\":{\"uuid\":\"d83b3d00-1de2-11b2-8000-071353030311\"},\"canary\":\"devilish\",\"id\":9}",
      "flow_published_at": "1970-01-01T02:00:02Z",
      "id": 9
    },
    {
      "canary": "glucose's",
      "flow_document": "{\"_meta\":{\"uuid\":\"d8d3d380-1de2-11b2-8000-071353030311\"},\"canary\":\"glucose's\",\"id\":10}",
      "flow_published_at": "1970-01-01T02:00:03Z",
      "id": 10
    }
  ],
  "table": "simple"
}
{
  "rows": [
    {
      "flow_document": "{\"_meta\":{\"uuid\":\"d96c6a00-1de2-11b2-8000-071353030311\"},\"id\":1,\"int\":7,\"str\":\"str 6\"}",
      "flow_published_at": "1970-01-01T02:00:04Z",
      "id": 1,
      "int": 7,
      "str": "str 6"
    },
    {
      "flow_document": "{\"_meta\":{\"uuid\":\"da050080-1de2-11b2-8000-071353030311\"},\"id\":2,\"int\":9,\"str\":\"str 7\"}",
      "flow_published_at": "1970-01-01T02:00:05Z",
      "id": 2,
      "int": 9,
      "str": "str 7"
    },
    {
      "flow_document": "{\"_meta\":{\"uuid\":\"da9d9700-1de2-11b2-8000-071353030311\"},\"id\":3,\"int\":11,\"str\":\"str 8\"}",
      "flow_published_at": "1970-01-01T02:00:06Z",
      "id": 3,
      "int": 11,
      "str": "str 8"
    },
    {
      "flow_document": "{\"_meta\":{\"uuid\":\"db362d80-1de2-11b2-8000-071353030311\"},\"id\":4,\"int\":13,\"str\":\"str 9\"}",
      "flow_published_at": "1970-01-01T02:00:07Z",
      "id": 4,
      "int": 13,
      "str": "str 9"
    },
    {
      "flow_document": "{\"_meta\":{\"uuid\":\"dbcec400-1de2-11b2-8000-071353030311\"},\"id\":5,\"int\":15,\"str\":\"str 10\"}",
      "flow_published_at": "1970-01-01T02:00:08Z",
      "id": 5,
      "int": 15,
      "str": "str 10"
    },
    {
      "flow_document": "{\"_meta\":{\"uuid\":\"38ce7800-1deb-11b2-8000-071353030311\"},\"id\":6,\"int\":11,\"str\":\"str 11\"}",
      "flow_published_at": "1970-01-01T03:00:00Z",
      "id": 6,
      "int": 11,
      "str": "str 11"
    },
    {
      "flow_document": "{\"_meta\":{\"uuid\":\"39670e80-1deb-11b2-8000-071353030311\"},\"id\":7,\"int\":12,\"str\":\"str 12\"}",
      "flow_published_at": "1970-01-01T03:00:01Z",
      "id": 7,
      "int": 12,
      "str": "str 12"
    },
    {
      "flow_document": "{\"_meta\":{\"uuid\":\"39ffa500-1deb-11b2-8000-071353030311\"},\"id\":8,\"int\":13,\"str\":\"str 13\"}",
      "flow_published_at": "1970-01-01T03:00:02Z",
      "id": 8,
      "int": 13,
      "str": "str 13"
    },
    {
      "flow_document": "{\"_meta\":{\"uuid\":\"3a983b80-1deb-11b2-8000-071353030311\"},\"id\":9,\"int\":14,\"str\":\"str 14\"}",
      "flow_published_at": "1970-01-01T03:00:03Z",
      "id": 9,
      "int": 14,
      "str": "str 14"
    },
    {
      "flow_document": "{\"_meta\":{\"uuid\":\"3b30d200-1deb-11b2-8000-071353030311\"},\"id\":10,\"int\":15,\"str\":\"str 15\"}",
      "flow_published_at": "1970-01-01T03:00:04Z",
      "id": 10,
      "int": 15,
      "str": "str 15"
    }
  ],
  "table": "duplicate_keys"
}
{
  "rows": [
    {
      "array_int": "[11,12]",
      "binary_field": null,
      "bool_field": false,
      "float_field": 1.1,
      "flow_document": "{\"_meta\":{\"uuid\":\"7d054c80-1dda-11b2-8000-071353030311\"},\"array_int\":[11,12],\"bool_field\":false,\"float_field\":1.1,\"id\":1,\"multiple\":1,\"nested\":{\"id\":\"i1\"},\"nullable_int\":null,\"str_field\":\"str1\"}",
      "flow_published_at": "1970-01-01T01:00:13Z",
      "id": 1,
      "multiple": "1",
      "nested": "{\"id\":\"i1\"}",
      "nullable_int": null,
      "str_field": "str1"
    },
    {
      "array_int": "[21,22]",
      "binary_field": null,
      "bool_field": true,
      "float_field": 2.2,
      "flow_document": "{\"_meta\":{\"uuid\":\"7d9de300-1dda-11b2-8000-071353030311\"},\"array_int\":[21,22],\"bool_field\":true,\"float_field\":2.2,\"id\":2,\"multiple\":2.2,\"nested\":{\"id\":\"i2\"},\"nullable_int\":2,\"str_field\":\"str2\"}",
      "flow_published_at": "1970-01-01T01:00:14Z",
      "id": 2,
      "multiple": "2.2",
      "nested": "{\"id\":\"i2\"}",
      "nullable_int": 2,
      "str_field": "str2"
    },
    {
      "array_int": "[31,32]",
      "binary_field": null,
      "bool_field": false,
      "float_field": 3.3,
      "flow_document": "{\"_meta\":{\"uuid\":\"7e367980-1dda-11b2-8000-071353030311\"},\"array_int\":[31,32],\"bool_field\":false,\"float_field\":3.3,\"id\":3,\"multiple\":true,\"nested\":{\"id\":\"i3\"},\"nullable_int\":null,\"str_field\":\"str3\"}",
      "flow_published_at": "1970-01-01T01:00:15Z",
      "id": 3,
      "multiple": "true",
      "nested": "{\"id\":\"i3\"}",
      "nullable_int": null,
      "str_field": "str3"
    },
    {
      "array_int": "[41,42]",
      "binary_field": null,
      "bool_field": true,
      "float_field": 4.4,
      "flow_document": "{\"_meta\":{\"uuid\":\"7ecf1000-1dda-11b2-8000-071353030311\"},\"array_int\":[41,42],\"bool_field\":true,\"float_field\":4.4,\"id\":4,\"multiple\":false,\"nested\":{\"id\":\"i4\"},\"nullable_int\":4,\"str_field\":\"str4\"}",
      "flow_published_at": "1970-01-01T01:00:16Z",
      "id": 4,
      "multiple": "false",
      "nested": "{\"id\":\"i4\"}",
      "nullable_int": 4,
      "str_field": "str4"
    },
    {
      "array_int": "[51,52]",
      "binary_field": null,
      "bool_field": false,
      "float_field": 5.5,
      "flow_document": "{\"_meta\":{\"uuid\":\"7f67a680-1dda-11b2-8000-071353030311\"},\"array_int\":[51,52],\"bool_field\":false,\"float_field\":5.5,\"id\":5,\"multiple\":\"string five\",\"nested\":{\"id\":\"i5\"},\"nullable_int\":null,\"str_field\":\"str5\"}",
      "flow_published_at": "1970-01-01T01:00:17Z",
      "id": 5,
      "multiple": "\"string five\"",
      "nested": "{\"id\":\"i5\"}",
      "nullable_int": null,
      "str_field": "str5"
    },
    {
      "array_int": "[61,62]",
      "binary_field": null,
      "bool_field": true,
      "float_field": 66.66,
      "flow_document": "{\"_meta\":{\"uuid\":\"e25d3b80-1de2-11b2-8000-071353030311\"},\"array_int\":[61,62],\"bool_field\":true,\"float_field\":66.66,\"id\":6,\"multiple\":[\"one\",2,true],\"nested\":{\"id\":\"i6\"},\"nullable_int\":6,\"str_field\":\"str6 v2\"}",
      "flow_published_at": "1970-01-01T02:00:19Z",
      "id": 6,
      "multiple": "[\"one\",2,true]",
      "nested": "{\"id\":\"i6\"}",
      "nullable_int": 6,
      "str_field": "str6 v2"
    },
    {
      "array_int": "[71,72]",
      "binary_field": null,
      "bool_field": false,
      "float_field": 77.77,
      "flow_document": "{\"_meta\":{\"uuid\":\"e2f5d200-1de2-11b2-8000-071353030311\"},\"array_int\":[71,72],\"bool_field\":false,\"float_field\":77.77,\"id\":7,\"multiple\":{\"object\":\"seven\"},\"nested\":{\"id\":\"i7\"},\"nullable_int\":null,\"str_field\":\"str7 v2\"}",
      "flow_published_at": "1970-01-01T02:00:20Z",
      "id": 7,
      "multiple": "{\"object\":\"seven\"}",
      "nested": "{\"id\":\"i7\"}",
      "nullable_int": null,
      "str_field": "str7 v2"
    },
    {
      "array_int": "[81,82]",
      "binary_field": null,
      "bool_field": true,
      "float_field": 88.88,
      "flow_document": "{\"_meta\":{\"uuid\":\"e38e6880-1de2-11b2-8000-071353030311\"},\"array_int\":[81,82],\"bool_field\":true,\"float_field\":88.88,\"id\":8,\"multiple\":null,\"nested\":{\"id\":\"i8\"},\"nullable_int\":8,\"str_field\":\"str8 v2\"}",
      "flow_published_at": "1970-01-01T02:00:21Z",
      "id": 8,
      "multiple": null,
      "nested": "{\"id\":\"i8\"}",
      "nullable_int": 8,
      "str_field": "str8 v2"
    },
    {
      "array_int": "[91,92]",
      "binary_field": "YWxvaGEK",
      "bool_field": false,
      "float_field": 99.99,
      "flow_document": "{\"_meta\":{\"uuid\":\"e426ff00-1de2-11b2-8000-071353030311\"},\"array_int\":[91,92],\"binary_field\":\"YWxvaGEK\",\"bool_field\":false,\"float_field\":99.99,\"id\":9,\"nested\":{\"id\":\"i9\"},\"nullable_int\":null,\"str_field\":\"str9 v2\"}",
      "flow_published_at": "1970-01-01T02:00:22Z",
      "id": 9,
      "multiple": null,
      "nested": "{\"id\":\"i9\"}",
      "nullable_int": null,
      "str_field": "str9 v2"
    },
    {
      "array_int": "[1,2]",
      "binary_field": "c2F5xY1uYXJhCg==",
      "bool_field": true,
      "float_field": 1010.101,
      "flow_document": "{\"_meta\":{\"uuid\":\"e4bf9580-1de2-11b2-8000-071353030311\"},\"array_int\":[1,2],\"binary_field\":\"c2F5xY1uYXJhCg==\",\"bool_field\":true,\"float_field\":1010.101,\"id\":10,\"nested\":{\"id\":\"i10\"},\"nullable_int\":10,\"str_field\":\"str10 v2\"}",
      "flow_published_at": "1970-01-01T02:00:23Z",
      "id": 10,
      "multiple": null,
      "nested": "{\"id\":\"i10\"}",
      "nullable_int": 10,
      "str_field": "str10 v2"
    }
  ],
  "table": "multiple_types"
}
{
  "rows": [
    {
      "date": "0001-01-01",
      "datetime": "0001-01-01T00:00:00Z",
      "flow_document": "{\"_meta\":{\"uuid\":\"dec9b480-1de2-11b2-8000-071353030311\"},\"date\":\"0000-01-01\",\"datetime\":\"0000-01-01T00:00:00Z\",\"id\":1,\"int_and_str\":1,\"int_str\":\"10\",\"num_and_str\":1.1,\"num_str\":\"10.1\",\"time\":\"00:00:00Z\"}",
      "flow_published_at": "1970-01-01T02:00:13Z",
      "id": 1,
      "int_and_str": "1",
      "int_str": "10",
      "num_and_str": 1.1,
      "num_str": 10.1,
      "time": "00:00:00Z"
    },
    {
      "date": "1999-02-02",
      "datetime": "1999-02-02T14:20:12.33Z",
      "flow_document": "{\"_meta\":{\"uuid\":\"df624b00-1de2-11b2-8000-071353030311\"},\"date\":\"1999-02-02\",\"datetime\":\"1999-02-02T14:20:12.33Z\",\"id\":2,\"int_and_str\":2,\"int_str\":\"20\",\"num_and_str\":2.1,\"num_str\":\"20.1\",\"time\":\"14:20:12.33Z\"}",
      "flow_published_at": "1970-01-01T02:00:14Z",
      "id": 2,
      "int_and_str": "2",
      "int_str": "20",
      "num_and_str": 2.1,
      "num_str": 20.1,
      "time": "14:20:12.33Z"
    },
    {
      "date": "1000-03-03",
      "datetime": "1000-03-03T23:59:38.1Z",
      "flow_document": "{\"_meta\":{\"uuid\":\"7bd41f80-1dda-11b2-8000-071353030311\"},\"date\":\"1000-03-03\",\"datetime\":\"1000-03-03T23:59:38.10Z\",\"id\":3,\"int_and_str\":3,\"int_str\":\"30\",\"num_and_str\":3.1,\"num_str\":\"30.1\",\"time\":\"23:59:38.10Z\"}",
      "flow_published_at": "1970-01-01T01:00:11Z",
      "id": 3,
      "int_and_str": "3",
      "int_str": "30",
      "num_and_str": 3.1,
      "num_str": 30.1,
      "time": "23:59:38.10Z"
    },
    {
      "date": "2023-08-29",
      "datetime": "2023-08-29T23:59:38Z",
      "flow_document": "{\"_meta\":{\"uuid\":\"7c6cb600-1dda-11b2-8000-071353030311\"},\"date\":\"2023-08-29\",\"datetime\":\"2023-08-29T23:59:38Z\",\"id\":4,\"int_and_str\":\"4\",\"int_str\":\"40\",\"num_and_str\":\"4.1\",\"num_str\":\"40.1\",\"time\":\"23:59:38Z\"}",
      "flow_published_at": "1970-01-01T01:00:12Z",
      "id": 4,
      "int_and_str": "4",
      "int_str": "40",
      "num_and_str": 4.1,
      "num_str": 40.1,
      "time": "23:59:38Z"
    },
    {
      "date": "9999-12-31",
      "datetime": "9999-12-31T23:59:59Z",
      "flow_document": "{\"_meta\":{\"uuid\":\"dffae180-1de2-11b2-8000-071353030311\"},\"date\":\"9999-12-31\",\"datetime\":\"9999-12-31T23:59:59Z\",\"id\":5,\"int_and_str\":\"5\",\"int_str\":\"50\",\"num_and_str\":\"5.1\",\"num_str\":\"50.1\",\"time\":\"23:59:59Z\"}",
      "flow_published_at": "1970-01-01T02:00:15Z",
      "id": 5,
      "int_and_str": "5",
      "int_str": "50",
      "num_and_str": 5.1,
      "num_str": 50.1,
      "time": "23:59:59Z"
    }
  ],
  "table": "formatted_strings"
}
{
  "rows": [
    {
      "flow_document": "{\"_meta\":{\"uuid\":\"85f61e00-1dda-11b2-8000-071353030311\"},\"id\":1,\"unsigned_bigint\":18446744073709551615}",
      "flow_published_at": "1970-01-01T01:00:28Z",
      "id": 1,
      "unsigned_bigint": "18446744073709551615"
    }
  ],
  "table": "unsigned_bigint"
}
{
  "rows": [
    {
      "_meta_op": "u",
      "flow_document": "{\"_meta\":{\"op\":\"u\",\"uuid\":\"e6895900-1de2-11b2-8000-071353030311\"},\"id\":2}",
      "flow_published_at": "1970-01-01T02:00:26Z",
      "id": 2
    },
    {
      "_meta_op": "c",
      "flow_document": "{\"_meta\":{\"op\":\"c\",\"uuid\":\"e721ef80-1de2-11b2-8000-071353030311\"},\"id\":3}",
      "flow_published_at": "1970-01-01T02:00:27Z",
      "id": 3
    }
  ],
  "table": "deletions"
}
{
  "rows": [
    {
      "counter": 3,
      "flow_document": "{\"_meta\":{\"uuid\":\"e9844980-1de2-11b2-8000-071353030311\"},\"counter\":3,\"id\":\"\\\\he \\\\ ' \\\" `llo`\"}",
      "flow_published_at": "1970-01-01T02:00:31Z",
      "id": "\\he \\ ' \" `llo`"
    }
  ],
  "table": "string_escaped_key"
}
{
  "rows": [
    {
      "counter": 2,
<<<<<<< HEAD
      "flow_document": "{\"_meta\":{\"uuid\":\"ea1ce000-1de2-11b2-8000-071353030311\"},\"counter\":2,\"id\":1,\"strint\":\"1\",\"strintkey\":\"1\",\"strnum\":\"10.1\",\"strnumkey\":\"10.1\"}",
      "flow_published_at": "1970-01-01T02:00:32Z",
      "id": 1,
      "strint": "1",
      "strintkey": "1",
      "strnum": 10.1,
=======
      "flow_published_at": "1970-01-01T02:00:32Z",
      "id": 1,
      "strint": "1",
      "strintkey": "10",
      "strnum": 1.1,
>>>>>>> 4377354c7 (materialize-%sql: test case for all key types)
      "strnumkey": "10.1"
    }
  ],
  "table": "all_key_types_part_one"
}
{
  "rows": [
    {
      "counter": 2,
<<<<<<< HEAD
      "date": "0001-01-01",
      "datekey": "0000-01-01",
      "flow_document": "{\"_meta\":{\"uuid\":\"eab57680-1de2-11b2-8000-071353030311\"},\"counter\":2,\"date\":\"0001-01-01\",\"datekey\":\"0000-01-01\",\"id\":1,\"time\":\"12:34:56Z\",\"timekey\":\"12:34:56Z\"}",
=======
      "date": "2023-08-30",
      "datekey": "2023-08-30",
>>>>>>> 4377354c7 (materialize-%sql: test case for all key types)
      "flow_published_at": "1970-01-01T02:00:33Z",
      "id": 1,
      "time": "12:34:56Z",
      "timekey": "12:34:56Z"
    }
  ],
  "table": "all_key_types_part_two"
}
{
  "rows": [
    {
      "counter": 2,
<<<<<<< HEAD
      "datetime": "0001-01-01T00:00:00Z",
      "datetimekey": "0000-01-01T12:34:56Z",
      "flow_document": "{\"_meta\":{\"uuid\":\"eb4e0d00-1de2-11b2-8000-071353030311\"},\"counter\":2,\"datetime\":\"0000-01-01T12:34:56Z\",\"datetimekey\":\"0000-01-01T12:34:56Z\",\"id\":1,\"uuid\":\"550e8400-e29b-41d4-a716-446655440000\",\"uuidkey\":\"550e8400-e29b-41d4-a716-446655440000\"}",
=======
      "datetime": "2023-08-30T12:34:56Z",
      "datetimekey": "2023-08-30T12:34:56Z",
>>>>>>> 4377354c7 (materialize-%sql: test case for all key types)
      "flow_published_at": "1970-01-01T02:00:34Z",
      "id": 1,
      "uuid": "550e8400-e29b-41d4-a716-446655440000",
      "uuidkey": "550e8400-e29b-41d4-a716-446655440000"
    }
  ],
  "table": "all_key_types_part_three"
}
[
  "applied.actionDescription",
  ""
]
[
  "connectorState",
  {
    "updated": {}
  }
]
