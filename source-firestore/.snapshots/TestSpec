{
  "config_schema_json": {
    "$schema": "http://json-schema.org/draft/2020-12/schema",
    "$id": "https://github.com/estuary/connectors/source-firestore/config",
    "properties": {
      "googleCredentials": {
        "type": "string",
        "title": "Credentials",
        "description": "Google Cloud Service Account JSON credentials.",
        "multiline": true,
        "secret": true
      },
      "database": {
        "type": "string",
        "title": "Database",
        "description": "Optional name of the database to capture from. Leave blank to autodetect. Typically \"projects/$PROJECTID/databases/(default)\"."
      },
      "advanced": {
        "properties": {
          "extra_collections": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Extra Collections",
            "description": "A list of collection paths (in the form \"foo/*/bar/*/baz\") which will always be assumed to exist even if not found by autodiscovery. Useful for very rare collections which may not be reliably detected by discovery sampling of the dataset."
          },
          "skip_discovery": {
            "type": "boolean",
            "title": "Skip Automatic Discovery",
            "description": "When set the connector will skip automatic collection discovery. This generally only makes sense when the \"Extra Collections\" setting is used."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Advanced Options",
        "description": "Options for advanced users. You should not typically need to modify these."
      }
    },
    "type": "object",
    "required": [
      "googleCredentials"
    ],
    "title": "Google Firestore"
  },
  "resource_config_schema_json": {
    "$schema": "http://json-schema.org/draft/2020-12/schema",
    "$id": "https://github.com/estuary/connectors/source-firestore/resource",
    "properties": {
      "path": {
        "type": "string",
        "title": "Path to Collection",
        "description": "Supports parent/*/nested to capture all nested collections of parent's children"
      },
      "backfillMode": {
        "type": "string",
        "enum": [
          "async",
          "none",
          "sync"
        ],
        "title": "Backfill Mode",
        "description": "Configures the handling of data already in the collection. Refer to go.estuary.dev/source-firestore for details or just stick with 'async'. Has no effect if changed after a binding is added."
      },
      "initTimestamp": {
        "type": "string",
        "title": "Initial Replication Timestamp",
        "description": "Optionally overrides the initial replication timestamp (which is either Zero or Now depending on the backfill mode). Has no effect if changed after a binding is added."
      },
      "restartCursorPath": {
        "type": "string",
        "pattern": "^(/([^/~]|~[01])+)*$",
        "title": "Restart Cursor Path",
        "description": "Optionally specifies a JSON pointer to some document property which increases monotonically and can be used as a restart cursor to optimize backfill behavior when streaming consistency is lost. Generally this only matters for collections with very high write volumes."
      }
    },
    "type": "object",
    "required": [
      "path",
      "backfillMode"
    ],
    "title": "Firestore Resource Spec"
  },
  "documentation_url": "https://go.estuary.dev/source-firestore",
  "resource_path_pointers": [
    "/path"
  ]
}
