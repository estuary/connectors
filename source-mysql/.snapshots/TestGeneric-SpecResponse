{
  "protocol": 3032023,
  "config_schema_json": {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://github.com/estuary/connectors/source-mysql/config",
    "properties": {
      "address": {
        "type": "string",
        "title": "Server Address",
        "description": "The host or host:port at which the database can be reached.",
        "order": 0
      },
      "user": {
        "type": "string",
        "title": "Login Username",
        "description": "The database user to authenticate as.",
        "default": "flow_capture",
        "order": 1
      },
      "password": {
        "type": "string",
        "title": "Login Password",
        "description": "Password for the specified database user.",
        "order": 2,
        "secret": true
      },
      "timezone": {
        "type": "string",
        "title": "Timezone",
        "description": "Timezone to use when capturing datetime columns. Should normally be left blank to use the database's 'time_zone' system variable. Only required if the 'time_zone' system variable cannot be read and columns with type datetime are being captured. Must be a valid IANA time zone name or +HH:MM offset. Takes precedence over the 'time_zone' system variable if both are set (go.estuary.dev/80J6rX).",
        "order": 3
      },
      "historyMode": {
        "type": "boolean",
        "description": "Capture change events without reducing them to a final state.",
        "default": false,
        "order": 4
      },
      "advanced": {
        "properties": {
          "dbname": {
            "type": "string",
            "title": "Database Name",
            "description": "The name of database to connect to. In general this shouldn't matter. The connector can discover and capture from all databases it's authorized to access.",
            "default": "mysql"
          },
          "skip_binlog_retention_check": {
            "type": "boolean",
            "title": "Skip Binlog Retention Sanity Check",
            "description": "Bypasses the 'dangerously short binlog retention' sanity check at startup. Only do this if you understand the danger and have a specific need.",
            "default": false
          },
          "node_id": {
            "type": "integer",
            "title": "Node ID",
            "description": "Node ID for the capture. Each node in a replication cluster must have a unique 32-bit ID. The specific value doesn't matter so long as it is unique. If unset or zero the connector will pick a value."
          },
          "skip_backfills": {
            "type": "string",
            "title": "Skip Backfills",
            "description": "A comma-separated list of fully-qualified table names which should not be backfilled."
          },
          "backfill_chunk_size": {
            "type": "integer",
            "title": "Backfill Chunk Size",
            "description": "The number of rows which should be fetched from the database in a single backfill query.",
            "default": 50000
          },
          "minimumBackfillInterval": {
            "type": "string",
            "format": "duration",
            "title": "Minimum Backfill Interval",
            "description": "An optional minimum time interval between backfill queries. This is usually not necessary but may be used to deliberately slow down backfills to reduce load on the database. Must be in the form of an ISO 8601 duration string."
          },
          "discover_schemas": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Discovery Schema Selection",
            "description": "If this is specified only tables in the selected schema(s) will be automatically discovered. Omit all entries to discover tables from all schemas."
          },
          "feature_flags": {
            "type": "string",
            "title": "Feature Flags",
            "description": "This property is intended for Estuary internal use. You should only modify this field as directed by Estuary support."
          },
          "watermarks_table": {
            "type": "string",
            "title": "Watermarks Table Name",
            "description": "This property is deprecated and will be removed in the near future. Previously named the table to be used for watermark writes. Currently the only effect of this setting is to exclude the watermarks table from discovery if present.",
            "default": "flow.watermarks"
          },
          "heartbeat_interval": {
            "type": "string",
            "title": "Heartbeat Interval",
            "description": "This property is deprecated and will be removed in the near future. Has no effect.",
            "default": "60s",
            "pattern": "^[-+]?([0-9]+([.][0-9]+)?(h|m|s|ms))+$"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Advanced Options",
        "description": "Options for advanced users. You should not typically need to modify these."
      },
      "networkTunnel": {
        "properties": {
          "sshForwarding": {
            "properties": {
              "sshEndpoint": {
                "type": "string",
                "title": "SSH Endpoint",
                "description": "Endpoint of the remote SSH server that supports tunneling (in the form of ssh://user@hostname[:port])",
                "pattern": "^ssh://.+@.+$"
              },
              "privateKey": {
                "type": "string",
                "title": "SSH Private Key",
                "description": "Private key to connect to the remote SSH server.",
                "multiline": true,
                "secret": true
              }
            },
            "additionalProperties": false,
            "type": "object",
            "required": [
              "sshEndpoint",
              "privateKey"
            ],
            "title": "SSH Forwarding"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Network Tunnel",
        "description": "Connect to your system through an SSH server that acts as a bastion host for your network."
      }
    },
    "type": "object",
    "required": [
      "address",
      "user",
      "password",
      "historyMode"
    ],
    "title": "MySQL Connection"
  },
  "resource_config_schema_json": {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://github.com/estuary/connectors/sqlcapture/resource",
    "properties": {
      "mode": {
        "type": "string",
        "enum": [
          "",
          "Normal",
          "Precise",
          "Only Changes",
          "Without Primary Key"
        ],
        "title": "Backfill Mode",
        "description": "How the preexisting contents of the table should be backfilled. This should generally not be changed.",
        "default": ""
      },
      "namespace": {
        "type": "string",
        "title": "Schema",
        "description": "The schema (namespace) in which the table resides.",
        "readOnly": true
      },
      "stream": {
        "type": "string",
        "title": "Table Name",
        "description": "The name of the table to be captured.",
        "readOnly": true
      }
    },
    "type": "object",
    "required": [
      "namespace",
      "stream"
    ],
    "title": "SQL Database Resource Spec"
  },
  "documentation_url": "https://go.estuary.dev/source-mysql",
  "resource_path_pointers": [
    "/namespace",
    "/stream"
  ]
}
