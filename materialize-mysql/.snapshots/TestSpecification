{
  "config_schema_json": {
    "$schema": "http://json-schema.org/draft/2020-12/schema",
    "$id": "https://github.com/estuary/connectors/materialize-mysql/config",
    "properties": {
      "address": {
        "type": "string",
        "title": "Address",
        "description": "Host and port of the database (in the form of host[:port]). Port 3306 is used as the default if no specific port is provided.",
        "order": 0
      },
      "user": {
        "type": "string",
        "title": "User",
        "description": "Database user to connect as.",
        "order": 1
      },
      "password": {
        "type": "string",
        "title": "Password",
        "description": "Password for the specified database user.",
        "order": 2,
        "secret": true
      },
      "database": {
        "type": "string",
        "title": "Database",
        "description": "Name of the logical database to materialize to.",
        "order": 3
      },
      "timezone": {
        "type": "string",
        "title": "Timezone",
        "description": "Timezone to use when materializing datetime columns. Should normally be left blank to use the database's 'time_zone' system variable. Only required if the 'time_zone' system variable cannot be read. Must be a valid IANA time zone name or +HH:MM offset. Takes precedence over the 'time_zone' system variable if both are set.",
        "order": 4
      },
      "hardDelete": {
        "type": "boolean",
        "title": "Hard Delete",
        "description": "If this option is enabled items deleted in the source will also be deleted from the destination. By default is disabled and _meta/op in the destination will signify whether rows have been deleted (soft-delete).",
        "default": false,
        "order": 5
      },
      "dbt_job_trigger": {
        "properties": {
          "job_id": {
            "type": "string",
            "title": "Job ID",
            "description": "DBT job ID"
          },
          "account_id": {
            "type": "string",
            "title": "Account ID",
            "description": "DBT account ID"
          },
          "account_prefix": {
            "type": "string",
            "title": "Account Prefix",
            "description": "DBT account prefix"
          },
          "api_key": {
            "type": "string",
            "title": "API Key",
            "description": "DBT API Key",
            "secret": true
          },
          "cause": {
            "type": "string",
            "title": "Cause Message",
            "description": "You can set a custom 'cause' message for the job trigger. Defaults to 'Estuary Flow'."
          },
          "mode": {
            "type": "string",
            "enum": [
              "skip",
              "replace",
              "ignore"
            ],
            "title": "Job Trigger Mode",
            "description": "Specifies how should already-running jobs be treated. Defaults to 'skip' which skips the trigger if a job is already running; 'replace' cancels the running job and runs a new one; while 'ignore' triggers a new job regardless of existing jobs.",
            "default": "skip"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "job_id",
          "account_id",
          "account_prefix",
          "api_key"
        ],
        "title": "DBT Job Trigger",
        "description": "Trigger a DBT Job when new data is available"
      },
      "advanced": {
        "properties": {
          "sslmode": {
            "type": "string",
            "enum": [
              "disabled",
              "preferred",
              "required",
              "verify_ca",
              "verify_identity"
            ],
            "title": "SSL Mode",
            "description": "Overrides SSL connection behavior by setting the 'sslmode' parameter."
          },
          "ssl_server_ca": {
            "type": "string",
            "title": "SSL Server CA",
            "description": "Optional server certificate authority to use when connecting with custom SSL mode.",
            "multiline": true,
            "secret": true
          },
          "ssl_client_cert": {
            "type": "string",
            "title": "SSL Client Certificate",
            "description": "Optional client certificate to use when connecting with custom SSL mode.",
            "multiline": true,
            "secret": true
          },
          "ssl_client_key": {
            "type": "string",
            "title": "SSL Client Key",
            "description": "Optional client key to use when connecting with custom SSL mode.",
            "multiline": true,
            "secret": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Advanced Options",
        "description": "Options for advanced users. You should not typically need to modify these.",
        "advanced": true
      },
      "networkTunnel": {
        "properties": {
          "sshForwarding": {
            "properties": {
              "sshEndpoint": {
                "type": "string",
                "title": "SSH Endpoint",
                "description": "Endpoint of the remote SSH server that supports tunneling (in the form of ssh://user@hostname[:port])",
                "pattern": "^ssh://.+@.+$"
              },
              "privateKey": {
                "type": "string",
                "title": "SSH Private Key",
                "description": "Private key to connect to the remote SSH server.",
                "multiline": true,
                "secret": true
              }
            },
            "additionalProperties": false,
            "type": "object",
            "required": [
              "sshEndpoint",
              "privateKey"
            ],
            "title": "SSH Forwarding"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Network Tunnel",
        "description": "Connect to your system through an SSH server that acts as a bastion host for your network."
      }
    },
    "type": "object",
    "required": [
      "address",
      "user",
      "password",
      "database"
    ],
    "title": "SQL Connection"
  },
  "resource_config_schema_json": {
    "$schema": "http://json-schema.org/draft/2020-12/schema",
    "$id": "https://github.com/estuary/connectors/materialize-mysql/table-config",
    "properties": {
      "table": {
        "type": "string",
        "title": "Table",
        "description": "Name of the database table",
        "x-collection-name": true
      },
      "delta_updates": {
        "type": "boolean",
        "title": "Delta Update",
        "description": "Should updates to this table be done via delta updates. Default is false.",
        "default": false
      }
    },
    "type": "object",
    "required": [
      "table"
    ],
    "title": "SQL Table"
  },
  "documentation_url": "https://go.estuary.dev/materialize-mysql"
}
