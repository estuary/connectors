collections:
  acmeCo/fake-data/ticks:
    schema: ticks.schema.yaml
    key: [/ts]
  acmeCo/watchdog/messages:
    schema: messages.schema.yaml
    key: [/ts]
    derivation:
      register:
        schema: { type: [string, "null"] }
        initial: null
      typescript:
        module: watchdog.flow.ts
      transform:
        liveStats:
          source: { name: ops/acmeCo/stats }
          shuffle: { key: [/shard/name] }
          update: { lambda: typescript }
        delayedStats:
          readDelay: "1m"
          source: { name: ops/acmeCo/stats }
          shuffle: { key: [/shard/name] }
          publish: { lambda: typescript }

captures:
  acmeCo/fake-data/from-clock:
    endpoint:
      connector:
        image: source-clock:local
        config: source-clock.config.yaml
    bindings:
      - resource:
          stream: tick10s
          syncMode: incremental
        target: acmeCo/fake-data/ticks

materializations:
  acmeCo/watchdog/to-slack:
    endpoint:
      connector:
        image: materialize-slack:local
        config: materialize-slack.config.yaml
    bindings:
      - source: acmeCo/watchdog/messages
        resource:
          channel: "flow-hack-a-thon"
        fields:
          recommended: true

storageMappings: {"": {"stores": [{"bucket": "wgd-test-bucket", "prefix": "flow/", "provider": "GCS"}]}}