Task: acmeCo/tests/materialize-postgres

Resource: public.simple_standard
["applied.actionDescription", "\nCREATE TABLE IF NOT EXISTS \"public\".flow_checkpoints_v1 (\n\t\tmaterialization TEXT NOT NULL,\n\t\tkey_begin BIGINT NOT NULL,\n\t\tkey_end BIGINT NOT NULL,\n\t\tfence BIGINT NOT NULL,\n\t\tcheckpoint TEXT NOT NULL,\n\n\t\tPRIMARY KEY (materialization, key_begin, key_end)\n);\n\nCOMMENT ON TABLE \"public\".flow_checkpoints_v1 IS 'This table holds Flow processing checkpoints used for exactly-once processing of materializations';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.materialization IS 'The name of the materialization.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.key_begin IS 'The inclusive lower-bound key hash covered by this checkpoint.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.key_end IS 'The inclusive upper-bound key hash covered by this checkpoint.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.fence IS 'This nonce is used to uniquely identify unique process assignments of a shard and prevent them from conflicting.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.checkpoint IS 'Checkpoint of the Flow consumer shard, encoded as base64 protobuf.';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".simple_standard (\n\t\tid BIGINT NOT NULL,\n\t\t\"_meta/op\" TEXT NOT NULL,\n\t\tcanary TEXT NOT NULL,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\tval BIGINT,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (id)\n);\n\nCOMMENT ON TABLE \"public\".simple_standard IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/simple';\nCOMMENT ON COLUMN \"public\".simple_standard.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_standard.\"_meta/op\" IS 'auto-generated projection of JSON at: /_meta/op with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.canary IS 'auto-generated projection of JSON at: /canary with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.val IS 'auto-generated projection of JSON at: /val with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_standard.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".simple_delta (\n\t\tid BIGINT NOT NULL,\n\t\t\"_meta/op\" TEXT NOT NULL,\n\t\tcanary TEXT NOT NULL,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\tval BIGINT\n);\n\nCOMMENT ON TABLE \"public\".simple_delta IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/simple';\nCOMMENT ON COLUMN \"public\".simple_delta.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_delta.\"_meta/op\" IS 'auto-generated projection of JSON at: /_meta/op with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.canary IS 'auto-generated projection of JSON at: /canary with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.val IS 'auto-generated projection of JSON at: /val with inferred types: [integer]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".not_simple (\n\t\t\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \" TEXT NOT NULL,\n\t\t_id TEXT NOT NULL,\n\t\t\"binaryKey\" TEXT NOT NULL,\n\t\t\" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ \" TEXT,\n\t\t\"$dollar$signs\" TEXT,\n\t\t\"123\" TEXT,\n\t\t\"123startsWithDigits\" TEXT,\n\t\t\"FIELDWITHDIFFERENTCAPS\" TEXT,\n\t\t\"a\"\"string`with`quote'characters\" TEXT,\n\t\t\"field with separated words\" TEXT,\n\t\t\"field-with-separated-words\" TEXT,\n\t\t\"field.with-separated_words\" TEXT,\n\t\t\"field.with.separated.words\" TEXT,\n\t\t\"fieldWithDifferentCaps\" TEXT,\n\t\tfield_with_separated_words TEXT,\n\t\tfieldwithdifferentcaps TEXT,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\t\"longString\" TEXT,\n\t\t\"testing (%s)\" TEXT,\n\t\t\"unsignedBigint\" NUMERIC,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \", _id, \"binaryKey\")\n);\n\nCOMMENT ON TABLE \"public\".not_simple IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/not-simple';\nCOMMENT ON COLUMN \"public\".not_simple.\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \" IS 'auto-generated projection of JSON at: / ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥  with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple._id IS 'auto-generated projection of JSON at: /_id with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"binaryKey\" IS 'auto-generated projection of JSON at: /binaryKey with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ \" IS 'auto-generated projection of JSON at: / ,;{}().- problematicField ÔøΩ êÄÄ Øß¥  with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"$dollar$signs\" IS 'auto-generated projection of JSON at: /$dollar$signs with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"123\" IS 'auto-generated projection of JSON at: /123 with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"123startsWithDigits\" IS 'auto-generated projection of JSON at: /123startsWithDigits with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"FIELDWITHDIFFERENTCAPS\" IS 'auto-generated projection of JSON at: /FIELDWITHDIFFERENTCAPS with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"a\"\"string`with`quote'characters\" IS 'auto-generated projection of JSON at: /a\"string`with`quote''characters with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field with separated words\" IS 'auto-generated projection of JSON at: /field with separated words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field-with-separated-words\" IS 'auto-generated projection of JSON at: /field-with-separated-words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field.with-separated_words\" IS 'auto-generated projection of JSON at: /field.with-separated_words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field.with.separated.words\" IS 'auto-generated projection of JSON at: /field.with.separated.words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"fieldWithDifferentCaps\" IS 'auto-generated projection of JSON at: /fieldWithDifferentCaps with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.field_with_separated_words IS 'auto-generated projection of JSON at: /field_with_separated_words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.fieldwithdifferentcaps IS 'auto-generated projection of JSON at: /fieldwithdifferentcaps with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"longString\" IS 'auto-generated projection of JSON at: /longString with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"testing (%s)\" IS 'auto-generated projection of JSON at: /testing (%s) with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"unsignedBigint\" IS 'auto-generated projection of JSON at: /unsignedBigint with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".not_simple.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".data_types (\n\t\tid BIGINT NOT NULL,\n\t\t\"arrayField\" JSON,\n\t\t\"boolField\" BOOLEAN,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\t\"intField\" BIGINT,\n\t\t\"multipleField\" JSON,\n\t\t\"numField\" DOUBLE PRECISION,\n\t\t\"objField\" JSON,\n\t\t\"stringAndIntegerField\" NUMERIC,\n\t\t\"stringAndNumberField\" DECIMAL,\n\t\t\"stringDateField\" DATE,\n\t\t\"stringDateTimeField\" TIMESTAMPTZ,\n\t\t\"stringDurationField\" INTERVAL,\n\t\t\"stringEmailField\" TEXT,\n\t\t\"stringField\" TEXT,\n\t\t\"stringHostnameField\" TEXT,\n\t\t\"stringIntegerField\" NUMERIC,\n\t\t\"stringIpv4Field\" CIDR,\n\t\t\"stringIpv6Field\" CIDR,\n\t\t\"stringIriField\" TEXT,\n\t\t\"stringIriReferenceField\" TEXT,\n\t\t\"stringJsonPointerField\" TEXT,\n\t\t\"stringMacAddr8Field\" MACADDR8,\n\t\t\"stringMacAddrField\" MACADDR,\n\t\t\"stringNumberField\" DECIMAL,\n\t\t\"stringRegexField\" TEXT,\n\t\t\"stringRelativeJsonPointerField\" TEXT,\n\t\t\"stringTimeField\" TIME,\n\t\t\"stringUint32Field\" NUMERIC,\n\t\t\"stringUint64Field\" NUMERIC,\n\t\t\"stringUriField\" TEXT,\n\t\t\"stringUriReferenceField\" TEXT,\n\t\t\"stringUriTemplateField\" TEXT,\n\t\t\"stringUuidField\" UUID,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (id)\n);\n\nCOMMENT ON TABLE \"public\".data_types IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/data-types';\nCOMMENT ON COLUMN \"public\".data_types.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".data_types.\"arrayField\" IS 'auto-generated projection of JSON at: /arrayField with inferred types: [array]';\nCOMMENT ON COLUMN \"public\".data_types.\"boolField\" IS 'auto-generated projection of JSON at: /boolField with inferred types: [boolean]';\nCOMMENT ON COLUMN \"public\".data_types.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"intField\" IS 'auto-generated projection of JSON at: /intField with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".data_types.\"multipleField\" IS 'auto-generated projection of JSON at: /multipleField with inferred types: [integer object string]';\nCOMMENT ON COLUMN \"public\".data_types.\"numField\" IS 'auto-generated projection of JSON at: /numField with inferred types: [number]';\nCOMMENT ON COLUMN \"public\".data_types.\"objField\" IS 'auto-generated projection of JSON at: /objField with inferred types: [object]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringAndIntegerField\" IS 'auto-generated projection of JSON at: /stringAndIntegerField with inferred types: [integer string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringAndNumberField\" IS 'auto-generated projection of JSON at: /stringAndNumberField with inferred types: [number string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDateField\" IS 'auto-generated projection of JSON at: /stringDateField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDateTimeField\" IS 'auto-generated projection of JSON at: /stringDateTimeField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDurationField\" IS 'auto-generated projection of JSON at: /stringDurationField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringEmailField\" IS 'auto-generated projection of JSON at: /stringEmailField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringField\" IS 'auto-generated projection of JSON at: /stringField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringHostnameField\" IS 'auto-generated projection of JSON at: /stringHostnameField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIntegerField\" IS 'auto-generated projection of JSON at: /stringIntegerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIpv4Field\" IS 'auto-generated projection of JSON at: /stringIpv4Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIpv6Field\" IS 'auto-generated projection of JSON at: /stringIpv6Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIriField\" IS 'auto-generated projection of JSON at: /stringIriField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIriReferenceField\" IS 'auto-generated projection of JSON at: /stringIriReferenceField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringJsonPointerField\" IS 'auto-generated projection of JSON at: /stringJsonPointerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringMacAddr8Field\" IS 'auto-generated projection of JSON at: /stringMacAddr8Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringMacAddrField\" IS 'auto-generated projection of JSON at: /stringMacAddrField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringNumberField\" IS 'auto-generated projection of JSON at: /stringNumberField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringRegexField\" IS 'auto-generated projection of JSON at: /stringRegexField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringRelativeJsonPointerField\" IS 'auto-generated projection of JSON at: /stringRelativeJsonPointerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringTimeField\" IS 'auto-generated projection of JSON at: /stringTimeField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUint32Field\" IS 'auto-generated projection of JSON at: /stringUint32Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUint64Field\" IS 'auto-generated projection of JSON at: /stringUint64Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriField\" IS 'auto-generated projection of JSON at: /stringUriField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriReferenceField\" IS 'auto-generated projection of JSON at: /stringUriReferenceField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriTemplateField\" IS 'auto-generated projection of JSON at: /stringUriTemplateField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUuidField\" IS 'auto-generated projection of JSON at: /stringUuidField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n"]
["connectorState",{}]
["connectorState",{}]
["connectorState",{}]
["connectorState",{}]
["connectorState",{"updated":{}}]

{"Name":"_meta/op","Nullable":false,"Type":"text"}
{"Name":"canary","Nullable":false,"Type":"text"}
{"Name":"flow_document","Nullable":false,"Type":"json"}
{"Name":"flow_published_at","Nullable":false,"Type":"timestamp with time zone"}
{"Name":"id","Nullable":false,"Type":"bigint"}
{"Name":"val","Nullable":true,"Type":"bigint"}

Table Data:
{"_meta/op":"u","canary":"splatters","flow_document":{"_meta":{"op":"u","uuid":"3e2bc280-1deb-11b2-8000-071353030311"},"canary":"splatters","id":3,"val":3},"flow_published_at":"1969-12-31T22:00:09-05:00","id":3,"val":3}
{"_meta/op":"c","canary":"strengthen","flow_document":{"_meta":{"op":"c","uuid":"770f6b80-1dda-11b2-8000-071353030311"},"canary":"strengthen","id":4,"val":4},"flow_published_at":"1969-12-31T20:00:03-05:00","id":4,"val":4}
{"_meta/op":"c","canary":"Kringle's","flow_document":{"_meta":{"op":"c","uuid":"77a80200-1dda-11b2-8000-071353030311"},"canary":"Kringle's","id":5,"val":5},"flow_published_at":"1969-12-31T20:00:04-05:00","id":5,"val":5}
{"_meta/op":"c","canary":"grosbeak's","flow_document":{"_meta":{"op":"c","uuid":"78409880-1dda-11b2-8000-071353030311"},"canary":"grosbeak's","id":6,"val":6},"flow_published_at":"1969-12-31T20:00:05-05:00","id":6,"val":6}
{"_meta/op":"c","canary":"pieced","flow_document":{"_meta":{"op":"c","uuid":"38ce7800-1deb-11b2-8000-071353030311"},"canary":"pieced","id":7,"val":7},"flow_published_at":"1969-12-31T22:00:00-05:00","id":7,"val":7}
{"_meta/op":"c","canary":"roaches","flow_document":{"_meta":{"op":"c","uuid":"39670e80-1deb-11b2-8000-071353030311"},"canary":"roaches","id":8,"val":8},"flow_published_at":"1969-12-31T22:00:01-05:00","id":8,"val":8}
{"_meta/op":"c","canary":"devilish","flow_document":{"_meta":{"op":"c","uuid":"39ffa500-1deb-11b2-8000-071353030311"},"canary":"devilish","id":9,"val":9},"flow_published_at":"1969-12-31T22:00:02-05:00","id":9,"val":9}
{"_meta/op":"c","canary":"glucose's","flow_document":{"_meta":{"op":"c","uuid":"3a983b80-1deb-11b2-8000-071353030311"},"canary":"glucose's","id":10,"val":10},"flow_published_at":"1969-12-31T22:00:03-05:00","id":10,"val":10}
{"_meta/op":"d","canary":"asteroid","flow_document":{"_meta":{"op":"d","uuid":"3b30d200-1deb-11b2-8000-071353030311"},"canary":"asteroid","id":11,"val":11},"flow_published_at":"1969-12-31T22:00:04-05:00","id":11,"val":11}

Resource: public.simple_delta
["applied.actionDescription", "\nCREATE TABLE IF NOT EXISTS \"public\".flow_checkpoints_v1 (\n\t\tmaterialization TEXT NOT NULL,\n\t\tkey_begin BIGINT NOT NULL,\n\t\tkey_end BIGINT NOT NULL,\n\t\tfence BIGINT NOT NULL,\n\t\tcheckpoint TEXT NOT NULL,\n\n\t\tPRIMARY KEY (materialization, key_begin, key_end)\n);\n\nCOMMENT ON TABLE \"public\".flow_checkpoints_v1 IS 'This table holds Flow processing checkpoints used for exactly-once processing of materializations';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.materialization IS 'The name of the materialization.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.key_begin IS 'The inclusive lower-bound key hash covered by this checkpoint.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.key_end IS 'The inclusive upper-bound key hash covered by this checkpoint.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.fence IS 'This nonce is used to uniquely identify unique process assignments of a shard and prevent them from conflicting.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.checkpoint IS 'Checkpoint of the Flow consumer shard, encoded as base64 protobuf.';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".simple_standard (\n\t\tid BIGINT NOT NULL,\n\t\t\"_meta/op\" TEXT NOT NULL,\n\t\tcanary TEXT NOT NULL,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\tval BIGINT,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (id)\n);\n\nCOMMENT ON TABLE \"public\".simple_standard IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/simple';\nCOMMENT ON COLUMN \"public\".simple_standard.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_standard.\"_meta/op\" IS 'auto-generated projection of JSON at: /_meta/op with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.canary IS 'auto-generated projection of JSON at: /canary with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.val IS 'auto-generated projection of JSON at: /val with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_standard.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".simple_delta (\n\t\tid BIGINT NOT NULL,\n\t\t\"_meta/op\" TEXT NOT NULL,\n\t\tcanary TEXT NOT NULL,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\tval BIGINT\n);\n\nCOMMENT ON TABLE \"public\".simple_delta IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/simple';\nCOMMENT ON COLUMN \"public\".simple_delta.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_delta.\"_meta/op\" IS 'auto-generated projection of JSON at: /_meta/op with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.canary IS 'auto-generated projection of JSON at: /canary with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.val IS 'auto-generated projection of JSON at: /val with inferred types: [integer]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".not_simple (\n\t\t\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \" TEXT NOT NULL,\n\t\t_id TEXT NOT NULL,\n\t\t\"binaryKey\" TEXT NOT NULL,\n\t\t\" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ \" TEXT,\n\t\t\"$dollar$signs\" TEXT,\n\t\t\"123\" TEXT,\n\t\t\"123startsWithDigits\" TEXT,\n\t\t\"FIELDWITHDIFFERENTCAPS\" TEXT,\n\t\t\"a\"\"string`with`quote'characters\" TEXT,\n\t\t\"field with separated words\" TEXT,\n\t\t\"field-with-separated-words\" TEXT,\n\t\t\"field.with-separated_words\" TEXT,\n\t\t\"field.with.separated.words\" TEXT,\n\t\t\"fieldWithDifferentCaps\" TEXT,\n\t\tfield_with_separated_words TEXT,\n\t\tfieldwithdifferentcaps TEXT,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\t\"longString\" TEXT,\n\t\t\"testing (%s)\" TEXT,\n\t\t\"unsignedBigint\" NUMERIC,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \", _id, \"binaryKey\")\n);\n\nCOMMENT ON TABLE \"public\".not_simple IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/not-simple';\nCOMMENT ON COLUMN \"public\".not_simple.\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \" IS 'auto-generated projection of JSON at: / ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥  with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple._id IS 'auto-generated projection of JSON at: /_id with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"binaryKey\" IS 'auto-generated projection of JSON at: /binaryKey with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ \" IS 'auto-generated projection of JSON at: / ,;{}().- problematicField ÔøΩ êÄÄ Øß¥  with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"$dollar$signs\" IS 'auto-generated projection of JSON at: /$dollar$signs with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"123\" IS 'auto-generated projection of JSON at: /123 with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"123startsWithDigits\" IS 'auto-generated projection of JSON at: /123startsWithDigits with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"FIELDWITHDIFFERENTCAPS\" IS 'auto-generated projection of JSON at: /FIELDWITHDIFFERENTCAPS with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"a\"\"string`with`quote'characters\" IS 'auto-generated projection of JSON at: /a\"string`with`quote''characters with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field with separated words\" IS 'auto-generated projection of JSON at: /field with separated words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field-with-separated-words\" IS 'auto-generated projection of JSON at: /field-with-separated-words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field.with-separated_words\" IS 'auto-generated projection of JSON at: /field.with-separated_words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field.with.separated.words\" IS 'auto-generated projection of JSON at: /field.with.separated.words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"fieldWithDifferentCaps\" IS 'auto-generated projection of JSON at: /fieldWithDifferentCaps with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.field_with_separated_words IS 'auto-generated projection of JSON at: /field_with_separated_words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.fieldwithdifferentcaps IS 'auto-generated projection of JSON at: /fieldwithdifferentcaps with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"longString\" IS 'auto-generated projection of JSON at: /longString with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"testing (%s)\" IS 'auto-generated projection of JSON at: /testing (%s) with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"unsignedBigint\" IS 'auto-generated projection of JSON at: /unsignedBigint with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".not_simple.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".data_types (\n\t\tid BIGINT NOT NULL,\n\t\t\"arrayField\" JSON,\n\t\t\"boolField\" BOOLEAN,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\t\"intField\" BIGINT,\n\t\t\"multipleField\" JSON,\n\t\t\"numField\" DOUBLE PRECISION,\n\t\t\"objField\" JSON,\n\t\t\"stringAndIntegerField\" NUMERIC,\n\t\t\"stringAndNumberField\" DECIMAL,\n\t\t\"stringDateField\" DATE,\n\t\t\"stringDateTimeField\" TIMESTAMPTZ,\n\t\t\"stringDurationField\" INTERVAL,\n\t\t\"stringEmailField\" TEXT,\n\t\t\"stringField\" TEXT,\n\t\t\"stringHostnameField\" TEXT,\n\t\t\"stringIntegerField\" NUMERIC,\n\t\t\"stringIpv4Field\" CIDR,\n\t\t\"stringIpv6Field\" CIDR,\n\t\t\"stringIriField\" TEXT,\n\t\t\"stringIriReferenceField\" TEXT,\n\t\t\"stringJsonPointerField\" TEXT,\n\t\t\"stringMacAddr8Field\" MACADDR8,\n\t\t\"stringMacAddrField\" MACADDR,\n\t\t\"stringNumberField\" DECIMAL,\n\t\t\"stringRegexField\" TEXT,\n\t\t\"stringRelativeJsonPointerField\" TEXT,\n\t\t\"stringTimeField\" TIME,\n\t\t\"stringUint32Field\" NUMERIC,\n\t\t\"stringUint64Field\" NUMERIC,\n\t\t\"stringUriField\" TEXT,\n\t\t\"stringUriReferenceField\" TEXT,\n\t\t\"stringUriTemplateField\" TEXT,\n\t\t\"stringUuidField\" UUID,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (id)\n);\n\nCOMMENT ON TABLE \"public\".data_types IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/data-types';\nCOMMENT ON COLUMN \"public\".data_types.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".data_types.\"arrayField\" IS 'auto-generated projection of JSON at: /arrayField with inferred types: [array]';\nCOMMENT ON COLUMN \"public\".data_types.\"boolField\" IS 'auto-generated projection of JSON at: /boolField with inferred types: [boolean]';\nCOMMENT ON COLUMN \"public\".data_types.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"intField\" IS 'auto-generated projection of JSON at: /intField with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".data_types.\"multipleField\" IS 'auto-generated projection of JSON at: /multipleField with inferred types: [integer object string]';\nCOMMENT ON COLUMN \"public\".data_types.\"numField\" IS 'auto-generated projection of JSON at: /numField with inferred types: [number]';\nCOMMENT ON COLUMN \"public\".data_types.\"objField\" IS 'auto-generated projection of JSON at: /objField with inferred types: [object]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringAndIntegerField\" IS 'auto-generated projection of JSON at: /stringAndIntegerField with inferred types: [integer string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringAndNumberField\" IS 'auto-generated projection of JSON at: /stringAndNumberField with inferred types: [number string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDateField\" IS 'auto-generated projection of JSON at: /stringDateField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDateTimeField\" IS 'auto-generated projection of JSON at: /stringDateTimeField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDurationField\" IS 'auto-generated projection of JSON at: /stringDurationField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringEmailField\" IS 'auto-generated projection of JSON at: /stringEmailField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringField\" IS 'auto-generated projection of JSON at: /stringField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringHostnameField\" IS 'auto-generated projection of JSON at: /stringHostnameField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIntegerField\" IS 'auto-generated projection of JSON at: /stringIntegerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIpv4Field\" IS 'auto-generated projection of JSON at: /stringIpv4Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIpv6Field\" IS 'auto-generated projection of JSON at: /stringIpv6Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIriField\" IS 'auto-generated projection of JSON at: /stringIriField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIriReferenceField\" IS 'auto-generated projection of JSON at: /stringIriReferenceField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringJsonPointerField\" IS 'auto-generated projection of JSON at: /stringJsonPointerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringMacAddr8Field\" IS 'auto-generated projection of JSON at: /stringMacAddr8Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringMacAddrField\" IS 'auto-generated projection of JSON at: /stringMacAddrField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringNumberField\" IS 'auto-generated projection of JSON at: /stringNumberField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringRegexField\" IS 'auto-generated projection of JSON at: /stringRegexField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringRelativeJsonPointerField\" IS 'auto-generated projection of JSON at: /stringRelativeJsonPointerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringTimeField\" IS 'auto-generated projection of JSON at: /stringTimeField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUint32Field\" IS 'auto-generated projection of JSON at: /stringUint32Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUint64Field\" IS 'auto-generated projection of JSON at: /stringUint64Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriField\" IS 'auto-generated projection of JSON at: /stringUriField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriReferenceField\" IS 'auto-generated projection of JSON at: /stringUriReferenceField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriTemplateField\" IS 'auto-generated projection of JSON at: /stringUriTemplateField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUuidField\" IS 'auto-generated projection of JSON at: /stringUuidField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n"]
["connectorState",{}]
["connectorState",{}]
["connectorState",{}]
["connectorState",{}]
["connectorState",{"updated":{}}]

{"Name":"_meta/op","Nullable":false,"Type":"text"}
{"Name":"canary","Nullable":false,"Type":"text"}
{"Name":"flow_published_at","Nullable":false,"Type":"timestamp with time zone"}
{"Name":"id","Nullable":false,"Type":"bigint"}
{"Name":"val","Nullable":true,"Type":"bigint"}

Table Data:
{"_meta/op":"c","canary":"amputation's","flow_published_at":"1969-12-31T20:00:00-05:00","id":1,"val":1}
{"_meta/op":"d","canary":"amputation's","flow_published_at":"1969-12-31T22:00:07-05:00","id":1,"val":1}
{"_meta/op":"c","canary":"armament's","flow_published_at":"1969-12-31T20:00:01-05:00","id":2,"val":2}
{"_meta/op":"d","canary":"armament's","flow_published_at":"1969-12-31T22:00:08-05:00","id":2,"val":2}
{"_meta/op":"c","canary":"splatters","flow_published_at":"1969-12-31T20:00:02-05:00","id":3,"val":3}
{"_meta/op":"u","canary":"splatters","flow_published_at":"1969-12-31T22:00:09-05:00","id":3,"val":3}
{"_meta/op":"c","canary":"strengthen","flow_published_at":"1969-12-31T20:00:03-05:00","id":4,"val":4}
{"_meta/op":"c","canary":"Kringle's","flow_published_at":"1969-12-31T20:00:04-05:00","id":5,"val":5}
{"_meta/op":"c","canary":"grosbeak's","flow_published_at":"1969-12-31T20:00:05-05:00","id":6,"val":6}
{"_meta/op":"c","canary":"pieced","flow_published_at":"1969-12-31T22:00:00-05:00","id":7,"val":7}
{"_meta/op":"c","canary":"roaches","flow_published_at":"1969-12-31T22:00:01-05:00","id":8,"val":8}
{"_meta/op":"c","canary":"devilish","flow_published_at":"1969-12-31T22:00:02-05:00","id":9,"val":9}
{"_meta/op":"c","canary":"glucose's","flow_published_at":"1969-12-31T22:00:03-05:00","id":10,"val":10}
{"_meta/op":"d","canary":"asteroid","flow_published_at":"1969-12-31T22:00:04-05:00","id":11,"val":11}
{"_meta/op":"c","canary":"penguin","flow_published_at":"1969-12-31T22:00:05-05:00","id":12,"val":12}
{"_meta/op":"d","canary":"penguin","flow_published_at":"1969-12-31T22:00:06-05:00","id":12,"val":12}

Resource: public.not_simple
["applied.actionDescription", "\nCREATE TABLE IF NOT EXISTS \"public\".flow_checkpoints_v1 (\n\t\tmaterialization TEXT NOT NULL,\n\t\tkey_begin BIGINT NOT NULL,\n\t\tkey_end BIGINT NOT NULL,\n\t\tfence BIGINT NOT NULL,\n\t\tcheckpoint TEXT NOT NULL,\n\n\t\tPRIMARY KEY (materialization, key_begin, key_end)\n);\n\nCOMMENT ON TABLE \"public\".flow_checkpoints_v1 IS 'This table holds Flow processing checkpoints used for exactly-once processing of materializations';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.materialization IS 'The name of the materialization.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.key_begin IS 'The inclusive lower-bound key hash covered by this checkpoint.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.key_end IS 'The inclusive upper-bound key hash covered by this checkpoint.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.fence IS 'This nonce is used to uniquely identify unique process assignments of a shard and prevent them from conflicting.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.checkpoint IS 'Checkpoint of the Flow consumer shard, encoded as base64 protobuf.';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".simple_standard (\n\t\tid BIGINT NOT NULL,\n\t\t\"_meta/op\" TEXT NOT NULL,\n\t\tcanary TEXT NOT NULL,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\tval BIGINT,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (id)\n);\n\nCOMMENT ON TABLE \"public\".simple_standard IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/simple';\nCOMMENT ON COLUMN \"public\".simple_standard.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_standard.\"_meta/op\" IS 'auto-generated projection of JSON at: /_meta/op with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.canary IS 'auto-generated projection of JSON at: /canary with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.val IS 'auto-generated projection of JSON at: /val with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_standard.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".simple_delta (\n\t\tid BIGINT NOT NULL,\n\t\t\"_meta/op\" TEXT NOT NULL,\n\t\tcanary TEXT NOT NULL,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\tval BIGINT\n);\n\nCOMMENT ON TABLE \"public\".simple_delta IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/simple';\nCOMMENT ON COLUMN \"public\".simple_delta.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_delta.\"_meta/op\" IS 'auto-generated projection of JSON at: /_meta/op with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.canary IS 'auto-generated projection of JSON at: /canary with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.val IS 'auto-generated projection of JSON at: /val with inferred types: [integer]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".not_simple (\n\t\t\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \" TEXT NOT NULL,\n\t\t_id TEXT NOT NULL,\n\t\t\"binaryKey\" TEXT NOT NULL,\n\t\t\" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ \" TEXT,\n\t\t\"$dollar$signs\" TEXT,\n\t\t\"123\" TEXT,\n\t\t\"123startsWithDigits\" TEXT,\n\t\t\"FIELDWITHDIFFERENTCAPS\" TEXT,\n\t\t\"a\"\"string`with`quote'characters\" TEXT,\n\t\t\"field with separated words\" TEXT,\n\t\t\"field-with-separated-words\" TEXT,\n\t\t\"field.with-separated_words\" TEXT,\n\t\t\"field.with.separated.words\" TEXT,\n\t\t\"fieldWithDifferentCaps\" TEXT,\n\t\tfield_with_separated_words TEXT,\n\t\tfieldwithdifferentcaps TEXT,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\t\"longString\" TEXT,\n\t\t\"testing (%s)\" TEXT,\n\t\t\"unsignedBigint\" NUMERIC,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \", _id, \"binaryKey\")\n);\n\nCOMMENT ON TABLE \"public\".not_simple IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/not-simple';\nCOMMENT ON COLUMN \"public\".not_simple.\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \" IS 'auto-generated projection of JSON at: / ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥  with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple._id IS 'auto-generated projection of JSON at: /_id with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"binaryKey\" IS 'auto-generated projection of JSON at: /binaryKey with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ \" IS 'auto-generated projection of JSON at: / ,;{}().- problematicField ÔøΩ êÄÄ Øß¥  with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"$dollar$signs\" IS 'auto-generated projection of JSON at: /$dollar$signs with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"123\" IS 'auto-generated projection of JSON at: /123 with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"123startsWithDigits\" IS 'auto-generated projection of JSON at: /123startsWithDigits with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"FIELDWITHDIFFERENTCAPS\" IS 'auto-generated projection of JSON at: /FIELDWITHDIFFERENTCAPS with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"a\"\"string`with`quote'characters\" IS 'auto-generated projection of JSON at: /a\"string`with`quote''characters with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field with separated words\" IS 'auto-generated projection of JSON at: /field with separated words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field-with-separated-words\" IS 'auto-generated projection of JSON at: /field-with-separated-words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field.with-separated_words\" IS 'auto-generated projection of JSON at: /field.with-separated_words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field.with.separated.words\" IS 'auto-generated projection of JSON at: /field.with.separated.words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"fieldWithDifferentCaps\" IS 'auto-generated projection of JSON at: /fieldWithDifferentCaps with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.field_with_separated_words IS 'auto-generated projection of JSON at: /field_with_separated_words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.fieldwithdifferentcaps IS 'auto-generated projection of JSON at: /fieldwithdifferentcaps with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"longString\" IS 'auto-generated projection of JSON at: /longString with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"testing (%s)\" IS 'auto-generated projection of JSON at: /testing (%s) with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"unsignedBigint\" IS 'auto-generated projection of JSON at: /unsignedBigint with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".not_simple.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".data_types (\n\t\tid BIGINT NOT NULL,\n\t\t\"arrayField\" JSON,\n\t\t\"boolField\" BOOLEAN,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\t\"intField\" BIGINT,\n\t\t\"multipleField\" JSON,\n\t\t\"numField\" DOUBLE PRECISION,\n\t\t\"objField\" JSON,\n\t\t\"stringAndIntegerField\" NUMERIC,\n\t\t\"stringAndNumberField\" DECIMAL,\n\t\t\"stringDateField\" DATE,\n\t\t\"stringDateTimeField\" TIMESTAMPTZ,\n\t\t\"stringDurationField\" INTERVAL,\n\t\t\"stringEmailField\" TEXT,\n\t\t\"stringField\" TEXT,\n\t\t\"stringHostnameField\" TEXT,\n\t\t\"stringIntegerField\" NUMERIC,\n\t\t\"stringIpv4Field\" CIDR,\n\t\t\"stringIpv6Field\" CIDR,\n\t\t\"stringIriField\" TEXT,\n\t\t\"stringIriReferenceField\" TEXT,\n\t\t\"stringJsonPointerField\" TEXT,\n\t\t\"stringMacAddr8Field\" MACADDR8,\n\t\t\"stringMacAddrField\" MACADDR,\n\t\t\"stringNumberField\" DECIMAL,\n\t\t\"stringRegexField\" TEXT,\n\t\t\"stringRelativeJsonPointerField\" TEXT,\n\t\t\"stringTimeField\" TIME,\n\t\t\"stringUint32Field\" NUMERIC,\n\t\t\"stringUint64Field\" NUMERIC,\n\t\t\"stringUriField\" TEXT,\n\t\t\"stringUriReferenceField\" TEXT,\n\t\t\"stringUriTemplateField\" TEXT,\n\t\t\"stringUuidField\" UUID,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (id)\n);\n\nCOMMENT ON TABLE \"public\".data_types IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/data-types';\nCOMMENT ON COLUMN \"public\".data_types.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".data_types.\"arrayField\" IS 'auto-generated projection of JSON at: /arrayField with inferred types: [array]';\nCOMMENT ON COLUMN \"public\".data_types.\"boolField\" IS 'auto-generated projection of JSON at: /boolField with inferred types: [boolean]';\nCOMMENT ON COLUMN \"public\".data_types.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"intField\" IS 'auto-generated projection of JSON at: /intField with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".data_types.\"multipleField\" IS 'auto-generated projection of JSON at: /multipleField with inferred types: [integer object string]';\nCOMMENT ON COLUMN \"public\".data_types.\"numField\" IS 'auto-generated projection of JSON at: /numField with inferred types: [number]';\nCOMMENT ON COLUMN \"public\".data_types.\"objField\" IS 'auto-generated projection of JSON at: /objField with inferred types: [object]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringAndIntegerField\" IS 'auto-generated projection of JSON at: /stringAndIntegerField with inferred types: [integer string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringAndNumberField\" IS 'auto-generated projection of JSON at: /stringAndNumberField with inferred types: [number string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDateField\" IS 'auto-generated projection of JSON at: /stringDateField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDateTimeField\" IS 'auto-generated projection of JSON at: /stringDateTimeField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDurationField\" IS 'auto-generated projection of JSON at: /stringDurationField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringEmailField\" IS 'auto-generated projection of JSON at: /stringEmailField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringField\" IS 'auto-generated projection of JSON at: /stringField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringHostnameField\" IS 'auto-generated projection of JSON at: /stringHostnameField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIntegerField\" IS 'auto-generated projection of JSON at: /stringIntegerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIpv4Field\" IS 'auto-generated projection of JSON at: /stringIpv4Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIpv6Field\" IS 'auto-generated projection of JSON at: /stringIpv6Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIriField\" IS 'auto-generated projection of JSON at: /stringIriField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIriReferenceField\" IS 'auto-generated projection of JSON at: /stringIriReferenceField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringJsonPointerField\" IS 'auto-generated projection of JSON at: /stringJsonPointerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringMacAddr8Field\" IS 'auto-generated projection of JSON at: /stringMacAddr8Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringMacAddrField\" IS 'auto-generated projection of JSON at: /stringMacAddrField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringNumberField\" IS 'auto-generated projection of JSON at: /stringNumberField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringRegexField\" IS 'auto-generated projection of JSON at: /stringRegexField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringRelativeJsonPointerField\" IS 'auto-generated projection of JSON at: /stringRelativeJsonPointerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringTimeField\" IS 'auto-generated projection of JSON at: /stringTimeField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUint32Field\" IS 'auto-generated projection of JSON at: /stringUint32Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUint64Field\" IS 'auto-generated projection of JSON at: /stringUint64Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriField\" IS 'auto-generated projection of JSON at: /stringUriField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriReferenceField\" IS 'auto-generated projection of JSON at: /stringUriReferenceField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriTemplateField\" IS 'auto-generated projection of JSON at: /stringUriTemplateField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUuidField\" IS 'auto-generated projection of JSON at: /stringUuidField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n"]
["connectorState",{}]
["connectorState",{}]
["connectorState",{}]
["connectorState",{}]
["connectorState",{"updated":{}}]

{"Name":" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ ","Nullable":true,"Type":"text"}
{"Name":" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ ","Nullable":false,"Type":"text"}
{"Name":"$dollar$signs","Nullable":true,"Type":"text"}
{"Name":"123","Nullable":true,"Type":"text"}
{"Name":"123startsWithDigits","Nullable":true,"Type":"text"}
{"Name":"FIELDWITHDIFFERENTCAPS","Nullable":true,"Type":"text"}
{"Name":"_id","Nullable":false,"Type":"text"}
{"Name":"a\"string`with`quote'characters","Nullable":true,"Type":"text"}
{"Name":"binaryKey","Nullable":false,"Type":"text"}
{"Name":"field with separated words","Nullable":true,"Type":"text"}
{"Name":"field-with-separated-words","Nullable":true,"Type":"text"}
{"Name":"field.with-separated_words","Nullable":true,"Type":"text"}
{"Name":"field.with.separated.words","Nullable":true,"Type":"text"}
{"Name":"fieldWithDifferentCaps","Nullable":true,"Type":"text"}
{"Name":"field_with_separated_words","Nullable":true,"Type":"text"}
{"Name":"fieldwithdifferentcaps","Nullable":true,"Type":"text"}
{"Name":"flow_document","Nullable":false,"Type":"json"}
{"Name":"flow_published_at","Nullable":false,"Type":"timestamp with time zone"}
{"Name":"longString","Nullable":true,"Type":"text"}
{"Name":"testing (%s)","Nullable":true,"Type":"text"}
{"Name":"unsignedBigint","Nullable":true,"Type":"numeric"}

Table Data:
{" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ ":"updated special chars"," ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ ":"\\he \\ ' \" `llo`","$dollar$signs":"updated dollars","123":"updated 123","123startsWithDigits":"updated numbers","FIELDWITHDIFFERENTCAPS":"UPDATED UPPERCASE","_id":"doc_001","a\"string`with`quote'characters":null,"binaryKey":"SGVsbG8gV29ybGQ=","field with separated words":"updated spaces","field-with-separated-words":"updated dashes","field.with-separated_words":"updated mixed","field.with.separated.words":"updated dots","fieldWithDifferentCaps":"updatedCamelCase","field_with_separated_words":"updated underscores","fieldwithdifferentcaps":"updated lowercase","flow_document":{" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ ":"updated special chars"," ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ ":"\\he \\ ' \" `llo`","$dollar$signs":"updated dollars","123":"updated 123","123startsWithDigits":"updated numbers","FIELDWITHDIFFERENTCAPS":"UPDATED UPPERCASE","_id":"doc_001","_meta":{"uuid":"3ec45900-1deb-11b2-8000-071353030311"},"a\"string`with`quote''characters":"updated quotes","binaryKey":"SGVsbG8gV29ybGQ=","field with separated words":"updated spaces","field-with-separated-words":"updated dashes","field.with-separated_words":"updated mixed","field.with.separated.words":"updated dots","fieldWithDifferentCaps":"updatedCamelCase","field_with_separated_words":"updated underscores","fieldwithdifferentcaps":"updated lowercase","longString":"Updated long string with more Unicode: üé≠üé®üé™üéØ Œ±Œ≤Œ≥Œ¥Œµ √±√°√©√≠√≥√∫ ‰∏≠ÊñáÊõ¥Êñ∞ÊµãËØï ÿßŸÑÿπÿ±ÿ®Ÿäÿ© ◊¢◊ë◊®◊ô◊™ —Ä—É—Å—Å–∫–∏–π ÌïúÍµ≠Ïñ¥ Êó•Êú¨Ë™û","testing (%s)":"updated printf","unsignedBigint":18446744073709551615},"flow_published_at":"1969-12-31T22:00:10-05:00","longString":"Updated long string with more Unicode: üé≠üé®üé™üéØ Œ±Œ≤Œ≥Œ¥Œµ √±√°√©√≠√≥√∫ ‰∏≠ÊñáÊõ¥Êñ∞ÊµãËØï ÿßŸÑÿπÿ±ÿ®Ÿäÿ© ◊¢◊ë◊®◊ô◊™ —Ä—É—Å—Å–∫–∏–π ÌïúÍµ≠Ïñ¥ Êó•Êú¨Ë™û","testing (%s)":"updated printf","unsignedBigint":18446744073709551615}
{" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ ":""," ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ ":"test-key-2","$dollar$signs":"","123":"","123startsWithDigits":"","FIELDWITHDIFFERENTCAPS":"","_id":"doc_002","a\"string`with`quote'characters":null,"binaryKey":"VGVzdERhdGE=","field with separated words":"","field-with-separated-words":"","field.with-separated_words":"","field.with.separated.words":"","fieldWithDifferentCaps":"","field_with_separated_words":"","fieldwithdifferentcaps":"","flow_document":{" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ ":""," ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ ":"test-key-2","$dollar$signs":"","123":"","123startsWithDigits":"","FIELDWITHDIFFERENTCAPS":"","_id":"doc_002","_meta":{"uuid":"7971c580-1dda-11b2-8000-071353030311"},"a\"string`with`quote''characters":"","binaryKey":"VGVzdERhdGE=","field with separated words":"","field-with-separated-words":"","field.with-separated_words":"","field.with.separated.words":"","fieldWithDifferentCaps":"","field_with_separated_words":"","fieldwithdifferentcaps":"","longString":"","testing (%s)":"","unsignedBigint":0},"flow_published_at":"1969-12-31T20:00:07-05:00","longString":"","testing (%s)":"","unsignedBigint":0}
{" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ ":"symbols: !@#$%^\u0026*()_+-=[]{}|;':\",./\u003c\u003e?"," ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ ":"very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.","$dollar$signs":"$100.50$","123":999,"123startsWithDigits":"field starting with 123","FIELDWITHDIFFERENTCAPS":"ALL UPPERCASE VALUE","_id":"doc_003","a\"string`with`quote'characters":null,"binaryKey":"QmluYXJ5VGVzdERhdGE=","field with separated words":"edge case testing","field-with-separated-words":"hyphen-separated-values","field.with-separated_words":"mixed.separator-test_data","field.with.separated.words":"system.test.data","fieldWithDifferentCaps":"CamelCaseValue","field_with_separated_words":"underscore_separated_values","fieldwithdifferentcaps":"all lowercase value","flow_document":{" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ ":"symbols: !@#$%^\u0026*()_+-=[]{}|;':\",./\u003c\u003e?"," ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ ":"very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.","$dollar$signs":"$100.50$","123":"999","123startsWithDigits":"field starting with 123","FIELDWITHDIFFERENTCAPS":"ALL UPPERCASE VALUE","_id":"doc_003","_meta":{"uuid":"7a0a5c00-1dda-11b2-8000-071353030311"},"a\"string`with`quote''characters":"testing \"quotes\" and `backticks` and 'apostrophes'","binaryKey":"QmluYXJ5VGVzdERhdGE=","field with separated words":"edge case testing","field-with-separated-words":"hyphen-separated-values","field.with-separated_words":"mixed.separator-test_data","field.with.separated.words":"system.test.data","fieldWithDifferentCaps":"CamelCaseValue","field_with_separated_words":"underscore_separated_values","fieldwithdifferentcaps":"all lowercase value","longString":"very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.","testing (%s)":"printf style format string test","unsignedBigint":18446744073709551615},"flow_published_at":"1969-12-31T20:00:08-05:00","longString":"very long string that exceeds 256 characters to test if dynamic sizing of varchar fields works. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru.","testing (%s)":"printf style format string test","unsignedBigint":18446744073709551615}

Resource: public.data_types
["applied.actionDescription", "\nCREATE TABLE IF NOT EXISTS \"public\".flow_checkpoints_v1 (\n\t\tmaterialization TEXT NOT NULL,\n\t\tkey_begin BIGINT NOT NULL,\n\t\tkey_end BIGINT NOT NULL,\n\t\tfence BIGINT NOT NULL,\n\t\tcheckpoint TEXT NOT NULL,\n\n\t\tPRIMARY KEY (materialization, key_begin, key_end)\n);\n\nCOMMENT ON TABLE \"public\".flow_checkpoints_v1 IS 'This table holds Flow processing checkpoints used for exactly-once processing of materializations';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.materialization IS 'The name of the materialization.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.key_begin IS 'The inclusive lower-bound key hash covered by this checkpoint.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.key_end IS 'The inclusive upper-bound key hash covered by this checkpoint.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.fence IS 'This nonce is used to uniquely identify unique process assignments of a shard and prevent them from conflicting.';\nCOMMENT ON COLUMN \"public\".flow_checkpoints_v1.checkpoint IS 'Checkpoint of the Flow consumer shard, encoded as base64 protobuf.';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".simple_standard (\n\t\tid BIGINT NOT NULL,\n\t\t\"_meta/op\" TEXT NOT NULL,\n\t\tcanary TEXT NOT NULL,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\tval BIGINT,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (id)\n);\n\nCOMMENT ON TABLE \"public\".simple_standard IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/simple';\nCOMMENT ON COLUMN \"public\".simple_standard.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_standard.\"_meta/op\" IS 'auto-generated projection of JSON at: /_meta/op with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.canary IS 'auto-generated projection of JSON at: /canary with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_standard.val IS 'auto-generated projection of JSON at: /val with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_standard.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".simple_delta (\n\t\tid BIGINT NOT NULL,\n\t\t\"_meta/op\" TEXT NOT NULL,\n\t\tcanary TEXT NOT NULL,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\tval BIGINT\n);\n\nCOMMENT ON TABLE \"public\".simple_delta IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/simple';\nCOMMENT ON COLUMN \"public\".simple_delta.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".simple_delta.\"_meta/op\" IS 'auto-generated projection of JSON at: /_meta/op with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.canary IS 'auto-generated projection of JSON at: /canary with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".simple_delta.val IS 'auto-generated projection of JSON at: /val with inferred types: [integer]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".not_simple (\n\t\t\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \" TEXT NOT NULL,\n\t\t_id TEXT NOT NULL,\n\t\t\"binaryKey\" TEXT NOT NULL,\n\t\t\" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ \" TEXT,\n\t\t\"$dollar$signs\" TEXT,\n\t\t\"123\" TEXT,\n\t\t\"123startsWithDigits\" TEXT,\n\t\t\"FIELDWITHDIFFERENTCAPS\" TEXT,\n\t\t\"a\"\"string`with`quote'characters\" TEXT,\n\t\t\"field with separated words\" TEXT,\n\t\t\"field-with-separated-words\" TEXT,\n\t\t\"field.with-separated_words\" TEXT,\n\t\t\"field.with.separated.words\" TEXT,\n\t\t\"fieldWithDifferentCaps\" TEXT,\n\t\tfield_with_separated_words TEXT,\n\t\tfieldwithdifferentcaps TEXT,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\t\"longString\" TEXT,\n\t\t\"testing (%s)\" TEXT,\n\t\t\"unsignedBigint\" NUMERIC,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \", _id, \"binaryKey\")\n);\n\nCOMMENT ON TABLE \"public\".not_simple IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/not-simple';\nCOMMENT ON COLUMN \"public\".not_simple.\" ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥ \" IS 'auto-generated projection of JSON at: / ,;{}().- problematicKey ÔøΩ êÄÄ Øß¥  with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple._id IS 'auto-generated projection of JSON at: /_id with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"binaryKey\" IS 'auto-generated projection of JSON at: /binaryKey with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\" ,;{}().- problematicField ÔøΩ êÄÄ Øß¥ \" IS 'auto-generated projection of JSON at: / ,;{}().- problematicField ÔøΩ êÄÄ Øß¥  with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"$dollar$signs\" IS 'auto-generated projection of JSON at: /$dollar$signs with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"123\" IS 'auto-generated projection of JSON at: /123 with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"123startsWithDigits\" IS 'auto-generated projection of JSON at: /123startsWithDigits with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"FIELDWITHDIFFERENTCAPS\" IS 'auto-generated projection of JSON at: /FIELDWITHDIFFERENTCAPS with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"a\"\"string`with`quote'characters\" IS 'auto-generated projection of JSON at: /a\"string`with`quote''characters with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field with separated words\" IS 'auto-generated projection of JSON at: /field with separated words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field-with-separated-words\" IS 'auto-generated projection of JSON at: /field-with-separated-words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field.with-separated_words\" IS 'auto-generated projection of JSON at: /field.with-separated_words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"field.with.separated.words\" IS 'auto-generated projection of JSON at: /field.with.separated.words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"fieldWithDifferentCaps\" IS 'auto-generated projection of JSON at: /fieldWithDifferentCaps with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.field_with_separated_words IS 'auto-generated projection of JSON at: /field_with_separated_words with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.fieldwithdifferentcaps IS 'auto-generated projection of JSON at: /fieldwithdifferentcaps with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"longString\" IS 'auto-generated projection of JSON at: /longString with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"testing (%s)\" IS 'auto-generated projection of JSON at: /testing (%s) with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".not_simple.\"unsignedBigint\" IS 'auto-generated projection of JSON at: /unsignedBigint with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".not_simple.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n\n\nCREATE TABLE IF NOT EXISTS \"public\".data_types (\n\t\tid BIGINT NOT NULL,\n\t\t\"arrayField\" JSON,\n\t\t\"boolField\" BOOLEAN,\n\t\tflow_published_at TIMESTAMPTZ NOT NULL,\n\t\t\"intField\" BIGINT,\n\t\t\"multipleField\" JSON,\n\t\t\"numField\" DOUBLE PRECISION,\n\t\t\"objField\" JSON,\n\t\t\"stringAndIntegerField\" NUMERIC,\n\t\t\"stringAndNumberField\" DECIMAL,\n\t\t\"stringDateField\" DATE,\n\t\t\"stringDateTimeField\" TIMESTAMPTZ,\n\t\t\"stringDurationField\" INTERVAL,\n\t\t\"stringEmailField\" TEXT,\n\t\t\"stringField\" TEXT,\n\t\t\"stringHostnameField\" TEXT,\n\t\t\"stringIntegerField\" NUMERIC,\n\t\t\"stringIpv4Field\" CIDR,\n\t\t\"stringIpv6Field\" CIDR,\n\t\t\"stringIriField\" TEXT,\n\t\t\"stringIriReferenceField\" TEXT,\n\t\t\"stringJsonPointerField\" TEXT,\n\t\t\"stringMacAddr8Field\" MACADDR8,\n\t\t\"stringMacAddrField\" MACADDR,\n\t\t\"stringNumberField\" DECIMAL,\n\t\t\"stringRegexField\" TEXT,\n\t\t\"stringRelativeJsonPointerField\" TEXT,\n\t\t\"stringTimeField\" TIME,\n\t\t\"stringUint32Field\" NUMERIC,\n\t\t\"stringUint64Field\" NUMERIC,\n\t\t\"stringUriField\" TEXT,\n\t\t\"stringUriReferenceField\" TEXT,\n\t\t\"stringUriTemplateField\" TEXT,\n\t\t\"stringUuidField\" UUID,\n\t\tflow_document JSON NOT NULL,\n\n\t\tPRIMARY KEY (id)\n);\n\nCOMMENT ON TABLE \"public\".data_types IS 'Generated for materialization acmeCo/tests/materialize-postgres of collection tests/data-types';\nCOMMENT ON COLUMN \"public\".data_types.id IS 'auto-generated projection of JSON at: /id with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".data_types.\"arrayField\" IS 'auto-generated projection of JSON at: /arrayField with inferred types: [array]';\nCOMMENT ON COLUMN \"public\".data_types.\"boolField\" IS 'auto-generated projection of JSON at: /boolField with inferred types: [boolean]';\nCOMMENT ON COLUMN \"public\".data_types.flow_published_at IS 'Flow Publication Time\nFlow publication date-time of this document\nauto-generated projection of JSON at: /_meta/uuid with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"intField\" IS 'auto-generated projection of JSON at: /intField with inferred types: [integer]';\nCOMMENT ON COLUMN \"public\".data_types.\"multipleField\" IS 'auto-generated projection of JSON at: /multipleField with inferred types: [integer object string]';\nCOMMENT ON COLUMN \"public\".data_types.\"numField\" IS 'auto-generated projection of JSON at: /numField with inferred types: [number]';\nCOMMENT ON COLUMN \"public\".data_types.\"objField\" IS 'auto-generated projection of JSON at: /objField with inferred types: [object]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringAndIntegerField\" IS 'auto-generated projection of JSON at: /stringAndIntegerField with inferred types: [integer string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringAndNumberField\" IS 'auto-generated projection of JSON at: /stringAndNumberField with inferred types: [number string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDateField\" IS 'auto-generated projection of JSON at: /stringDateField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDateTimeField\" IS 'auto-generated projection of JSON at: /stringDateTimeField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringDurationField\" IS 'auto-generated projection of JSON at: /stringDurationField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringEmailField\" IS 'auto-generated projection of JSON at: /stringEmailField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringField\" IS 'auto-generated projection of JSON at: /stringField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringHostnameField\" IS 'auto-generated projection of JSON at: /stringHostnameField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIntegerField\" IS 'auto-generated projection of JSON at: /stringIntegerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIpv4Field\" IS 'auto-generated projection of JSON at: /stringIpv4Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIpv6Field\" IS 'auto-generated projection of JSON at: /stringIpv6Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIriField\" IS 'auto-generated projection of JSON at: /stringIriField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringIriReferenceField\" IS 'auto-generated projection of JSON at: /stringIriReferenceField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringJsonPointerField\" IS 'auto-generated projection of JSON at: /stringJsonPointerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringMacAddr8Field\" IS 'auto-generated projection of JSON at: /stringMacAddr8Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringMacAddrField\" IS 'auto-generated projection of JSON at: /stringMacAddrField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringNumberField\" IS 'auto-generated projection of JSON at: /stringNumberField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringRegexField\" IS 'auto-generated projection of JSON at: /stringRegexField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringRelativeJsonPointerField\" IS 'auto-generated projection of JSON at: /stringRelativeJsonPointerField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringTimeField\" IS 'auto-generated projection of JSON at: /stringTimeField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUint32Field\" IS 'auto-generated projection of JSON at: /stringUint32Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUint64Field\" IS 'auto-generated projection of JSON at: /stringUint64Field with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriField\" IS 'auto-generated projection of JSON at: /stringUriField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriReferenceField\" IS 'auto-generated projection of JSON at: /stringUriReferenceField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUriTemplateField\" IS 'auto-generated projection of JSON at: /stringUriTemplateField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.\"stringUuidField\" IS 'auto-generated projection of JSON at: /stringUuidField with inferred types: [string]';\nCOMMENT ON COLUMN \"public\".data_types.flow_document IS 'auto-generated projection of JSON at:  with inferred types: [object]';\n"]
["connectorState",{}]
["connectorState",{}]
["connectorState",{}]
["connectorState",{}]
["connectorState",{"updated":{}}]

{"Name":"arrayField","Nullable":true,"Type":"json"}
{"Name":"boolField","Nullable":true,"Type":"boolean"}
{"Name":"flow_document","Nullable":false,"Type":"json"}
{"Name":"flow_published_at","Nullable":false,"Type":"timestamp with time zone"}
{"Name":"id","Nullable":false,"Type":"bigint"}
{"Name":"intField","Nullable":true,"Type":"bigint"}
{"Name":"multipleField","Nullable":true,"Type":"json"}
{"Name":"numField","Nullable":true,"Type":"double precision"}
{"Name":"objField","Nullable":true,"Type":"json"}
{"Name":"stringAndIntegerField","Nullable":true,"Type":"numeric"}
{"Name":"stringAndNumberField","Nullable":true,"Type":"numeric"}
{"Name":"stringDateField","Nullable":true,"Type":"date"}
{"Name":"stringDateTimeField","Nullable":true,"Type":"timestamp with time zone"}
{"Name":"stringDurationField","Nullable":true,"Type":"interval"}
{"Name":"stringEmailField","Nullable":true,"Type":"text"}
{"Name":"stringField","Nullable":true,"Type":"text"}
{"Name":"stringHostnameField","Nullable":true,"Type":"text"}
{"Name":"stringIntegerField","Nullable":true,"Type":"numeric"}
{"Name":"stringIpv4Field","Nullable":true,"Type":"cidr"}
{"Name":"stringIpv6Field","Nullable":true,"Type":"cidr"}
{"Name":"stringIriField","Nullable":true,"Type":"text"}
{"Name":"stringIriReferenceField","Nullable":true,"Type":"text"}
{"Name":"stringJsonPointerField","Nullable":true,"Type":"text"}
{"Name":"stringMacAddr8Field","Nullable":true,"Type":"macaddr8"}
{"Name":"stringMacAddrField","Nullable":true,"Type":"macaddr"}
{"Name":"stringNumberField","Nullable":true,"Type":"numeric"}
{"Name":"stringRegexField","Nullable":true,"Type":"text"}
{"Name":"stringRelativeJsonPointerField","Nullable":true,"Type":"text"}
{"Name":"stringTimeField","Nullable":true,"Type":"time without time zone"}
{"Name":"stringUint32Field","Nullable":true,"Type":"numeric"}
{"Name":"stringUint64Field","Nullable":true,"Type":"numeric"}
{"Name":"stringUriField","Nullable":true,"Type":"text"}
{"Name":"stringUriReferenceField","Nullable":true,"Type":"text"}
{"Name":"stringUriTemplateField","Nullable":true,"Type":"text"}
{"Name":"stringUuidField","Nullable":true,"Type":"uuid"}

Table Data:
{"arrayField":[1,"two",3.0,true,null],"boolField":true,"flow_document":{"_meta":{"uuid":"3ff58600-1deb-11b2-8000-071353030311"},"arrayField":[1,"two",3.0,true,null],"boolField":true,"id":1,"intField":42.0,"multipleField":"string value","nullField":null,"numField":3.14159,"objField":{"count":123,"nested":"value"},"stringAndIntegerField":"1.0","stringAndNumberField":"123.456","stringDateField":"2023-01-15","stringDateTimeField":"2023-01-15T10:30:45Z","stringDurationField":"P1Y2M3DT4H5M6S","stringEmailField":"test@example.com","stringField":"hello world","stringHostnameField":"example.com","stringIntegerField":"1.0","stringIpv4Field":"192.168.1.1","stringIpv6Field":"2001:db8::1","stringIriField":"https://‰æã„Åà.„ÉÜ„Çπ„Éà","stringIriReferenceField":"/‰æã„Åà/„ÉÜ„Çπ„Éà","stringJsonPointerField":"/path/to/field","stringMacAddr8Field":"00:14:22:ff:fe:01:23:45","stringMacAddrField":"00:14:22:01:23:45","stringNumberField":"123.456","stringRegexField":"^[a-zA-Z0-9]+$","stringRelativeJsonPointerField":"1/name","stringTimeField":"14:30:00+00:00","stringUint32Field":"4294967295","stringUint64Field":"18446744073709551615","stringUriField":"https://example.com/path","stringUriReferenceField":"/relative/path","stringUriTemplateField":"https://api.example.com/{id}","stringUuidField":"550e8400-e29b-41d4-a716-446655440000"},"flow_published_at":"1969-12-31T22:00:12-05:00","id":1,"intField":42,"multipleField":"string value","numField":3.14159,"objField":{"count":123,"nested":"value"},"stringAndIntegerField":1.0,"stringAndNumberField":123.456,"stringDateField":"2023-01-15T00:00:00Z","stringDateTimeField":"2023-01-15T05:30:45-05:00","stringDurationField":"1 year 2 mons 3 days 04:05:06","stringEmailField":"test@example.com","stringField":"hello world","stringHostnameField":"example.com","stringIntegerField":1.0,"stringIpv4Field":"192.168.1.1/32","stringIpv6Field":"2001:db8::1/128","stringIriField":"https://‰æã„Åà.„ÉÜ„Çπ„Éà","stringIriReferenceField":"/‰æã„Åà/„ÉÜ„Çπ„Éà","stringJsonPointerField":"/path/to/field","stringMacAddr8Field":"00:14:22:ff:fe:01:23:45","stringMacAddrField":"00:14:22:01:23:45","stringNumberField":123.456,"stringRegexField":"^[a-zA-Z0-9]+$","stringRelativeJsonPointerField":"1/name","stringTimeField":"14:30:00","stringUint32Field":4294967295,"stringUint64Field":18446744073709551615,"stringUriField":"https://example.com/path","stringUriReferenceField":"/relative/path","stringUriTemplateField":"https://api.example.com/{id}","stringUuidField":"550e8400-e29b-41d4-a716-446655440000"}
{"arrayField":[],"boolField":false,"flow_document":{"_meta":{"uuid":"408e1c80-1deb-11b2-8000-071353030311"},"arrayField":[],"boolField":false,"id":2,"intField":-999,"multipleField":42,"nullField":null,"numField":-2.718281828,"objField":{},"stringAndIntegerField":-123,"stringAndNumberField":-456.789,"stringDateField":"1999-12-31","stringDateTimeField":"1999-12-31T23:59:59.999Z","stringDurationField":"PT30M","stringEmailField":"admin@localhost","stringField":"","stringHostnameField":"localhost","stringIntegerField":"-123","stringIpv4Field":"127.0.0.1","stringIpv6Field":"::1","stringIriField":"http://localhost","stringIriReferenceField":"/","stringJsonPointerField":"/0","stringMacAddr8Field":"ff:ff:ff:ff:ff:ff:ff:ff","stringMacAddrField":"ff:ff:ff:ff:ff:ff","stringNumberField":"-456.789","stringRegexField":".*","stringRelativeJsonPointerField":"0","stringTimeField":"00:00:00+00:00","stringUint32Field":"0","stringUint64Field":"0","stringUriField":"http://localhost:8080","stringUriReferenceField":"#fragment","stringUriTemplateField":"http://example.com/~{username}/","stringUuidField":"00000000-0000-0000-0000-000000000000"},"flow_published_at":"1969-12-31T22:00:13-05:00","id":2,"intField":-999,"multipleField":42,"numField":-2.718281828,"objField":{},"stringAndIntegerField":-123,"stringAndNumberField":-456.789,"stringDateField":"1999-12-31T00:00:00Z","stringDateTimeField":"1999-12-31T18:59:59.999-05:00","stringDurationField":"00:30:00","stringEmailField":"admin@localhost","stringField":"","stringHostnameField":"localhost","stringIntegerField":-123,"stringIpv4Field":"127.0.0.1/32","stringIpv6Field":"::1/128","stringIriField":"http://localhost","stringIriReferenceField":"/","stringJsonPointerField":"/0","stringMacAddr8Field":"ff:ff:ff:ff:ff:ff:ff:ff","stringMacAddrField":"ff:ff:ff:ff:ff:ff","stringNumberField":-456.789,"stringRegexField":".*","stringRelativeJsonPointerField":0,"stringTimeField":"00:00:00","stringUint32Field":0,"stringUint64Field":0,"stringUriField":"http://localhost:8080","stringUriReferenceField":"#fragment","stringUriTemplateField":"http://example.com/~{username}/","stringUuidField":"00000000-0000-0000-0000-000000000000"}
{"arrayField":[{"obj":"in array"},[1,[2,[3]]],"mixed types"],"boolField":true,"flow_document":{"_meta":{"uuid":"7bd41f80-1dda-11b2-8000-071353030311"},"arrayField":[{"obj":"in array"},[1,[2,[3]]],"mixed types"],"boolField":true,"id":3,"intField":0,"multipleField":{"object":"value"},"nullField":null,"numField":0.0,"objField":{"array":[1,2,3],"nested":{"deep":"value"}},"stringAndIntegerField":"2147483647","stringAndNumberField":"0","stringDateField":"2024-02-29","stringDateTimeField":"2024-02-29T12:00:00.000000000Z","stringDurationField":"P0D","stringEmailField":"user+tag@sub.domain.com","stringField":"special chars: !@#$%^\u0026*()[]{}|\\:;\"'\u003c\u003e?/.,","stringHostnameField":"sub.domain.example.org","stringIntegerField":"2147483647","stringIpv4Field":"10.0.0.1","stringIpv6Field":"2001:0db8:0000:0000:0000:ff00:0042:8329","stringIriField":"https://–º–æ—Å–∫–≤–∞.—Ä—Ñ/path","stringIriReferenceField":"/–º–æ—Å–∫–≤–∞/–ø—É—Ç—å","stringJsonPointerField":"/nested/array/0/field","stringMacAddr8Field":"01:23:45:67:89:ab:cd:ef","stringMacAddrField":"01:23:45:67:89:ab","stringNumberField":"0","stringRegexField":"[0-9]{3}-[0-9]{2}-[0-9]{4}","stringRelativeJsonPointerField":"2/nested/field","stringTimeField":"23:59:59.999-01:15","stringUint32Field":"2147483648","stringUint64Field":"9223372036854775808","stringUriField":"ftp://user:pass@host.com:21/path?query=value","stringUriReferenceField":"?query=value\u0026other=param","stringUriTemplateField":"https://{host}{/path*}{?query*}","stringUuidField":"f47ac10b-58cc-4372-a567-0e02b2c3d479"},"flow_published_at":"1969-12-31T20:00:11-05:00","id":3,"intField":0,"multipleField":{"object":"value"},"numField":0,"objField":{"array":[1,2,3],"nested":{"deep":"value"}},"stringAndIntegerField":2147483647,"stringAndNumberField":0,"stringDateField":"2024-02-29T00:00:00Z","stringDateTimeField":"2024-02-29T07:00:00-05:00","stringDurationField":"00:00:00","stringEmailField":"user+tag@sub.domain.com","stringField":"special chars: !@#$%^\u0026*()[]{}|\\:;\"'\u003c\u003e?/.,","stringHostnameField":"sub.domain.example.org","stringIntegerField":2147483647,"stringIpv4Field":"10.0.0.1/32","stringIpv6Field":"2001:db8::ff00:42:8329/128","stringIriField":"https://–º–æ—Å–∫–≤–∞.—Ä—Ñ/path","stringIriReferenceField":"/–º–æ—Å–∫–≤–∞/–ø—É—Ç—å","stringJsonPointerField":"/nested/array/0/field","stringMacAddr8Field":"01:23:45:67:89:ab:cd:ef","stringMacAddrField":"01:23:45:67:89:ab","stringNumberField":0,"stringRegexField":"[0-9]{3}-[0-9]{2}-[0-9]{4}","stringRelativeJsonPointerField":"2/nested/field","stringTimeField":"23:59:59.999","stringUint32Field":2147483648,"stringUint64Field":9223372036854775808,"stringUriField":"ftp://user:pass@host.com:21/path?query=value","stringUriReferenceField":"?query=value\u0026other=param","stringUriTemplateField":"https://{host}{/path*}{?query*}","stringUuidField":"f47ac10b-58cc-4372-a567-0e02b2c3d479"}
{"arrayField":["updated","array","values"],"boolField":false,"flow_document":{"_meta":{"uuid":"3f5cef80-1deb-11b2-8000-071353030311"},"arrayField":["updated","array","values"],"boolField":false,"id":4,"intField":2147483647,"multipleField":999,"nullField":null,"numField":12345678900.0,"objField":{"timestamp":"2024-01-01","updated":true},"stringAndIntegerField":999,"stringAndNumberField":999.999,"stringDateField":"2024-12-25","stringDateTimeField":"2024-12-25T00:00:00Z","stringDurationField":"P1D","stringEmailField":"updated@test.org","stringField":"updated value","stringHostnameField":"api.example.org","stringIntegerField":"999","stringIpv4Field":"8.8.8.8","stringIpv6Field":"2001:4860:4860::8888","stringIriField":"https://„ÉÜ„Çπ„Éà.‰æã","stringIriReferenceField":"/„ÉÜ„Çπ„Éà/‰æã","stringJsonPointerField":"/data/items/0/name","stringMacAddr8Field":"aa:bb:cc:dd:ee:ff:00:11","stringMacAddrField":"aa:bb:cc:dd:ee:ff","stringNumberField":"999.999","stringRegexField":"^\\d{4}-\\d{2}-\\d{2}$","stringRelativeJsonPointerField":"3/updated","stringTimeField":"12:00:00z","stringUint32Field":"1000000000","stringUint64Field":"1000000000000000000","stringUriField":"https://api.example.org/v1/resource","stringUriReferenceField":"../parent/resource","stringUriTemplateField":"/api/v{version}/users/{id}","stringUuidField":"123e4567-e89b-12d3-a456-426614174000"},"flow_published_at":"1969-12-31T22:00:11-05:00","id":4,"intField":2147483647,"multipleField":999,"numField":12345678900,"objField":{"timestamp":"2024-01-01","updated":true},"stringAndIntegerField":999,"stringAndNumberField":999.999,"stringDateField":"2024-12-25T00:00:00Z","stringDateTimeField":"2024-12-24T19:00:00-05:00","stringDurationField":"1 day","stringEmailField":"updated@test.org","stringField":"updated value","stringHostnameField":"api.example.org","stringIntegerField":999,"stringIpv4Field":"8.8.8.8/32","stringIpv6Field":"2001:4860:4860::8888/128","stringIriField":"https://„ÉÜ„Çπ„Éà.‰æã","stringIriReferenceField":"/„ÉÜ„Çπ„Éà/‰æã","stringJsonPointerField":"/data/items/0/name","stringMacAddr8Field":"aa:bb:cc:dd:ee:ff:00:11","stringMacAddrField":"aa:bb:cc:dd:ee:ff","stringNumberField":999.999,"stringRegexField":"^\\d{4}-\\d{2}-\\d{2}$","stringRelativeJsonPointerField":"3/updated","stringTimeField":"12:00:00","stringUint32Field":1000000000,"stringUint64Field":1000000000000000000,"stringUriField":"https://api.example.org/v1/resource","stringUriReferenceField":"../parent/resource","stringUriTemplateField":"/api/v{version}/users/{id}","stringUuidField":"123e4567-e89b-12d3-a456-426614174000"}


